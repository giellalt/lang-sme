<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE document PUBLIC "-//APACHE//DTD Documentation V2.0//EN"
"http://forrest.apache.org/dtd/document-v20.dtd">
<document xml:lang="en">
  <header>
    <title>The disambiguation file sme-dis.rle</title>

    <authors>
      <person email="trond.trosterud@hum.uit.no" name="Trond Trosterud" />

      <person email="marit.julien@nowhere.com" name="Marit Julien" />

      <person email="linda.wiechetek@hum.uit.no" name="Linda Wiechetek" />
    </authors>
  </header>

  <body>
    <section>
      <title>The disambiguation file sme-dis.rle</title>

      <section>
        <title>File macrostructure</title>

        <p>The disambiguation file sme-dis.rle consists of the following
        parts:</p>

        <ul>
          <li>Delimiter declarations</li>

          <li>Tag and tag list declarations</li>

          <li>Mapping rules</li>

          <li>Constraints</li>
        </ul>

        <p>The file format is documented in Tapanainen 1996. Cf. also the <a
        href="../../tools/cgii-usage.html">general discussion on CG-2
        usage</a>.</p>

        <section>
          <title>The delimiters</title>

          <p>Four sentence delimiters are declared, ".", "?", "!" and "¶".</p>
        </section>

        <section>
          <title>Tag and tag list declarations</title>

          <p>This section consists of two parts. In the first part, every
          single lexc tag has been given a list declaration of its own. There
          probably is a better way of doing this (the reader is invited to
          find a better way :-).</p>

          <p>In the second part comes the real set and list declarations.</p>
        </section>

        <section>
          <title>Mapping rules</title>

          <p>These rules define mappings from morphological tags to syntactic
          functions. Note that it is important here to select the TARGET and
          the conditions carefully. For example, if one writes MAP (@-FAUXV)
          TARGET ("leat") IF (0 Inf), not only Inf readings will get the tag
          (@-FAUXV). The tag will be applied to every member of the relevant
          cohorts, even to the Sg2 and Pl1 and Pl3 readings. If one writes
          instead MAP (@-FAUXV) TARGET Inf IF (0 ("leat")), only the Inf
          reading gets that tag, and the other readings can be taken care of
          by other rules.</p>
        </section>

        <section>
          <title>The constraints</title>

          <p>The constraints are organised in cycles. CG-2 makes it possible
          to arrange the rules in blocks. Each set of constraints is
          introduced with the key word CONSTRAINTS, and the last section is
          closed off with the word END.</p>

          <p>First we have disambiguation rules that each refer to one single
          cohort (marked with "cycle 0"). Then comes local disambiguation,
          referring mainly to words one cohort to the left or right (possibly
          with intervening adverbials) ("cycle 1"). Then follows the main part
          of the disambiguation file ("cycle 2"),which contains rules with
          local and long-distance scope. The next cycle consists of rules with
          global scope, along with some rules that need to come as late as
          possible ("cycle 3"). Cycle 4 contains rules for syntactic
          disambiguation, and finally, there is cycle 5 with post-syntactic
          morphological rules.</p>

          <p>The rules within some of the main cycles are organised in
          subcycles, set apart by the key word CONSTRAINTS. This gives better
          control of the order in which the rules apply.</p>

          <p>Also note that rules are often organised such that a block of
          rules is followed by a set of examples. In these cases, the first
          rule will go with the first example, the second rule with the second
          example, and so on. The idea is that this gives a better overview
          than if each rule is immediately followed by an example.</p>

          <p>The majority of the examples show where a rule hits. But in some
          cases, an example shows where the rule does NOT hit. Then the
          example is there to illustrate the need for some specific condition
          in the rule. Which condition is normally pointed out explicitly.</p>
        </section>
      </section>
    </section>

    <section>
      <title>More on the cycles</title>

      <section>
        <title>Cycle 0</title>

        <p>Much cohort-internal disambiguation is taken care of in the
        preprocessor phase (in the script <a
        href="../../tools/docu-lookup2cg.html">lookup2cg</a>, see also the
        documentation in the script).</p>

        <p>The rules in this section are there to reject analyses where there
        is a better analysis in the same cohort. Typically, this is the case
        where a lexicalised derivation competes with a dynamically derived
        form. For example, adverbs derived from adjectives are rejected if
        there is an alternative analysis with the lexicalised adverb. Then
        there are certain tag combinations that are excluded, for example, one
        rule says REMOVE Imprt IF (0 Qst). The idea is that a verb cannot be
        imperative if it has a cliticised question marker. Hence, all Imprt
        readings are removed from verbs with question markers. All in all,
        this cycle eliminates readings that we do not ever want to end up
        with.</p>
      </section>

      <section>
        <title>Cycle 1</title>

        <p>This cycle consists of two subcycles. In cycle 1a we deal with some
        personal pronouns that have homonyms in other parts of speech, and
        with the pronoun "eanaš/eanas", we pick out some Px readings, and
        select verb readings that depend on personal pronouns. There is also a
        rule for "dušše" and two rules related to "ahte", which have to come
        early so that only the CS reading of "ahte" survives to cycle 2. In
        cycle 1b most of the remaining Px readings are removed.</p>
      </section>

      <section>
        <title>Cycle 2</title>

        <p>This is the largest cycle in the disambiguation file. It consists
        of several subcycles. The main organising principle is that rules that
        are relevant to one and the same part of speech should come as one
        rule block. However, some exceptions to this principle have turned out
        to be necessary. For example, although the main verb rule block
        follows the main noun rule block, certain verb rules precede the noun
        rules, thereby improving the effect of the latter.</p>

        <p>In the following, the main subcycles of Cycle 2 are dealt with one
        by one.</p>

        <section>
          <title>Noun or not?</title>

          <p>In this subcycle some relatively certain noun readings are picked
          out. In most cases adjective readings are thereby removed, but also
          some verb readings. The selected noun readings will serve as context
          for later rules.</p>
        </section>

        <section>
          <title>Adjectives and adverbs</title>

          <p>In this subcycle some relatively certain adverb and adjective
          readings are picked out. The competing readings are verb or noun
          readings.</p>
        </section>

        <section>
          <title>Disambiguating clitics</title>

          <p>So far two rules here. They remove the Qst reading from the
          particle "dego" and from adverbs like "nugo".</p>
        </section>

        <section>
          <title>Disambiguating adpositions</title>

          <p>Two subcycles. The first one deals with some individual
          adpositions, with some adpositions that take modifiers, and with
          adpositions of the GASKAL class, in the cases where they combine
          with a coordination. The second subcycle consists of rules that
          select and remove Po and Pr readings in a general fashion. The
          ordering of rules is crucial here. The present ordering is not
          necessarily the best one, although it has been worked on quite a
          lot.</p>
        </section>

        <section>
          <title>Disambiguating subjunctions</title>

          <p>Two subcycles. The first one contains two general CS rules and a
          number of rules related to individual subjunctions with homonyms in
          other POS. The second one contains rules that disambiguate those
          ambiguous instances that survive the first subcycle.</p>
        </section>

        <section>
          <title>Disambiguating adverbs</title>

          <p>Consists of some general adverb rules, some rules that
          distinguish between adverbs and other specified POS, and a series of
          rules related to individual adverbs. The latter set of rules deals
          with ambiguities that are not resolved by the general adverb
          rules.</p>
        </section>

        <section>
          <title>Disambiguating pronouns</title>

          <p>Since personal pronouns are dealt with in cycle 1, this cycle
          consists of rule blocks for interrogative pronouns, reflexive
          pronouns, reciprocal pronouns, numerals (placed here because of
          "nubbi"), indefinite pronouns, and demonstrative pronouns, in that
          order, so that the rules for demonstratives, for example, can build
          on the output of all other pronoun rules.</p>

          <p>Note that there are particularly many rules for "dat", since
          "dat" can be a demonstrative pronoun or a personal pronoun. We have
          chosen here to treat "dat" as a personal pronoun whenever it stands
          alone.</p>
        </section>

        <section>
          <title>Disambiguating adjectives</title>

          <p>This cycle is introduced by some rules for individual adjectives,
          followed by some rules that pick out comparatives. The next block of
          rules identify attributes that come between a demonstrative and a
          noun with compatible cases. Between these elements we expect only
          DP-internal material, so it is relatively easy to identify
          attributes in this domain. It is much harder to identify attributes
          that are not preceded by demonstratives, which is why the next rule
          block, for other attribute rules, is much longer. After the main
          rule block for attributes follow rules for coordinated attributes
          and for "buorre". The last part of the adjective cycle contains
          rules for predicative adjectives, and finally, a couple of adverb
          rules.</p>
        </section>

        <section>
          <title>Disambiguating verbs - part 1</title>

          <p>In this cycle we deal with some verb forms that are relatively
          easy to disambiguate. We select ConNeg and imperative forms, and
          also some infinitives. In addition, in the middle of the rule block
          for infinitives there are some rules that remove infinitive. Then we
          have rules for VGen and for PrfPrc, including cases where "leamaš"
          appears without a finite verb. We select some Actio and some PrsPrc
          readings, and finally, there are rules for the individual verbs
          "orrut" and "addit".</p>
        </section>

        <section>
          <title>Disambiguating nouns</title>

          <p>The first rules in this cycle deal with proper nouns-selection of
          proper nouns, removal of proper nouns, and choosing between
          different proper nouns. Then follow a series of rules that remove
          certain adjective readings when corresponding noun readings are
          available. After that the case disambiguation begins. We start with
          rules for some specific constructions that need to be picked out
          early. Then for each case there is a rule section with the following
          structure: 1) rules that identify single occurences of the case in
          question, 2) rules that find coordinated elements with that case, 3)
          rules that REMOVE that case in certain environments. This is to make
          the job easier for later case rules, by removing wrong readings as
          early as possible.</p>

          <p>Since there are quite a few syntactic environments where only
          genitive case is found, we pick out genitive readings first. Then
          nominative rules follow, and after that accusative. These three
          sections are all relatively large, since ambiguity between
          nominative, accusative and genitive is so widespread in North
          Sámi.</p>

          <p>The case rule sections that follow, for illative, locative,
          comitative and essive are much smaller. And at the end of the case
          rule chapter, there is a section for case rules that have to come
          after others have worked.</p>
        </section>

        <section>
          <title>Disambiguating verbs - part 2</title>

          <p>This is the main rule block for verb disambiguation.We first
          select some finite verbs, that is, verb readings that include an
          Ind, Pot, Imprt, ImprtII, or Cond tag. After that we have a couple
          of rules that disambiguate between the negation 'it' and the
          abbreviation 'it'. Then follow a block of rules that select
          infinitive, and a block of rules that select or remove
          imperative.</p>

          <p>Now it is time for the rules that select verb readings according
          to person and number. There are a few rules for Sg1, a few for Sg2,
          lots of rules for Sg3, and some rules for Du1, Du2 and Du3. There
          are also a couple of rules for Pl1 and for Pl2, and a large section
          of rules for Pl3. Then, since some verbs will remain ambiguous after
          the preceding rule blocks, the section for finite rules is rounded
          off by some rules for infinitive, for finite verbs and for
          passive.</p>

          <p>The last part of the verb rule block contains rules for various
          non-finite verb forms, another rule block for finite verbs,
          consisting of rules that work best when as many other verb forms as
          possible are disambiguated, and finally, lexical rules that
          disambiguate between verbs that have overlapping paradigms.</p>
        </section>

        <section>
          <title>Residual cases</title>

          <p>Now that all parts of speech are disambiguated, we can apply some
          rules that make reference to particular forms. The rule block
          Residual cases contains case rules, other rules for nominals, rules
          for determiners, and rules for adverbs and adjectives.</p>
        </section>
      </section>

      <section>
        <title>Cycle 3</title>

        <p>This is meant to be a cycle for disambiguation rules of global
        scope. At present, it contains only three one-cohort rules.</p>
      </section>

      <section>
        <title>Cycle 4</title>

        <p>This is where syntactic disambiguation is done. That is, the rules
        in this cycle pick out one syntactic tag in cases where an element has
        more than one. There are rules for subject, for subject predicate, for
        object and object predicate, for verbal functions, and for other
        functions.</p>
      </section>

      <section>
        <title>Cycle 5</title>

        <p>This cycle contains morphological rules that make reference to
        syntactic functions.</p>
      </section>

      <section>
        <title>A more thorough documentation, on rule level</title>

        <p>Here, we write some stuff that later on will be transferred to
        separate files..</p>

        <section>
          <title>Syntactic disambiguation rules</title>

          <p>This is for the rules concerning @ tags, both the mapping and the
          disambiguating rules.</p>
        </section>

        <section>
          <title>Morphological disambiguation rules</title>

          <p>Here we look at the rules concerning the tags from the sme.fst
          transducer.</p>

          <section>
            <title>The Acc/Gen issue</title>

            <p>Yes, the Acc/Gen issue...</p>
          </section>
        </section>

        <section>
          <title>Morphological and syntactic disambiguation</title>

          <p>Interrelation between morphological and syntactic rules.</p>
        </section>

        <section>
          <title>Semantic disambiguation</title>

          <p>So far, we have only 5 semantic tags, related to proper nouns.
          Here, we say something about how we disambiguate them.</p>
        </section>
      </section>

      <p class="last_modified">Last modified: $Date$, by
      $Author$</p>
    </section>

    <section>
      <title>Numerals</title>

      <section>
        <title>Definition</title>

        <section>
          <title>Intro</title>

          <p>As numerals we define single or a group of numbers or letters
          that represent a number. That means numerals can have the form:</p>

          <ol>
            <li>2345</li>

            <li>guoktelogi, goalmmát, guovttis</li>

            <li>VIII</li>

            <li>máŋga, galle</li>
          </ol>

          <p>milljovdna also gets the numeral tag, not the noun tag as Nickel
          would want it to be</p>
        </section>

        <section>
          <title>Case</title>

          <p>Roman numbers can be nominative, genitive and accusative case
          without showing it overtly:</p>

          <source>
200     200+Num+Acc
200     200+Num+Gen
200     200+Num+Nom

</source>

          <p>Illative case can look like that:</p>

          <source>
"&lt;Kontor&gt;" S:7266, 7266, 10535
        "kontor" N Sg Acc S:1698 @OBJ
        "kontor" N Sg Gen S:1817 @ADVL
"&lt;2000:ii&gt;"
        "2000" Num Ill S:1323 @NumN&lt;

</source>
        </section>

        <section>
          <title>Sets</title>

          <p>There are several sets regarding numerals:</p>

          <source>
SET NUMERALS = Num - OKTA ;
SET NOT-NUMERALS = WORD - Num ;
LIST MANGA = "máŋga" "galle" ; # Not referred to by any rule.
SET CARDINALS = Num - Ord - MANGA ;

</source>
        </section>

        <section>
          <title>Syntactic functions</title>

          <p>Numerals can:</p>

          <ol>
            <li>quantify a noun</li>

            <li>modify a noun as</li>

            <li><ol>
                <li>ordinals ("2. oassi")</li>

                <li>substantival numerals ("oassi 2")</li>
              </ol></li>

            <li>be PRO nouns</li>

            <li>make up a time adverbial, such as 21.03.1980</li>

            <li>stand for "from (numeral) to (numeral)</li>
          </ol>
        </section>

        <section>
          <title>Syntactic tags</title>

          <p>There are various tags they can have:</p>

          <ol>
            <li>numeral specific tags, where the numerals are substantival:
            <source>
@NNum&gt;: ## Mun lean ilus go beasan ovdanbuktit St.dieđ. nr. 33.
@NumN&lt;: ## Dat lea s. 240.
@NUM-PRON: ## Mii golmmas oktan du vieljain finaimet Niillas-čeazi geahčen.
</source> <p>(those ones are gone: @NUMBER, @TIME)</p></li>

            <li>other possible tags <source>
@PCLE-COMPL: ## Ráhkkásiiddán, allet vajáldahte ahte Hearrái lea okta beaivi 
             ## dego duhát jagi ja duhát jagi dego okta beaivi.
@QN&gt;:        ## Mun máksen 100 ruvnno duvle.
@QN&lt;:        ## Mun boađán diibmu vihtta/viđas.
@ADVL:       ## Artihkkal lea šaddan fas áigeguovdilin maŋŋá go heivehuvvui 
             ## norgalaš riektái miessemánu 21. b. 1999 nr 30 lága bokte.
@SUBJ @SPRED:## Go sotnabeaivi šattai, de čuoigaledje máŋggas várrái.
@SUBJ-QH:    ## Muhto dál leat juo vássán golbma beaivvi dan rájes go dát dáhpáhuvai.
@HNOUN:      ## Dieđáhusa nummar okta.
@SPRED:      ## Doaimmabiju jahkásaš bušeahttarámma lea: 380.000 ruvnno.
</source></li>
          </ol>
        </section>

        <section>
          <title>The numeral specific tags:</title>

          <source>
@NNum&gt;: ## Mun lean ilus go beasan ovdanbuktit St.dieđ. nr. 33.
              for nouns modifying a numeral such as nr in this case
@NumN&lt;: ## Dat lea s. 240.
              for numerals modifying nouns such as 240 in this case
@NumNum&lt;: ## 4 Ämiljovnna deajakohpa,
@NUM-PRON: ## Mii golmmas oktan du vieljain finaimet Niillas-čeazi geahčen.
</source>

          <p>It is interesting to see that numerals following a noun react
          differently with respect to the noun. A numeral in combination with
          <em>oassi, kapihtal, siidu, paragráfa</em> respectively their
          abbreviations <em>s., kap.</em> and <em>§</em> modifies the noun and
          therefore gets the tag <code>@NumN&lt;</code>, while in the
          combination <em>nr., nummar and nummir</em> + numeral, the numeral
          stays head and gets the syntactic tag depending on the larger
          context.</p>

          <p>A possible explanation could be the implicitness of nr, nummar
          respectively nummir in expressions such as <em>oassi (nr) 2</em> or
          <em>kapihtal (nr) 34.</em></p>

          <p>In expressions such as <em>oassi nr 2</em> the numeral is head of
          the<em>nr 2 </em> expression but modifies oassi and therefore gets
          the tag <code>@NumN&lt;</code>. The abbreviations mentioned above
          are furthermore transitive, which means the numerals following them
          have to refer to those abbreviations.</p>
        </section>

        <section>
          <title>Morphological tags</title>

          <p>There are some complex numerals expressions that are identified
          as simple numerals by the preprocessor. Therefore, the two tags</p>

          <p><code>+Date</code> <code>+Range</code> exist. Both dates and
          ranges have particular syntactic behavior in certain contexts that
          distinguishes them from other numerals. Dates for example cannot be
          quantifiers such as other numerals do. Furthermore it can be an
          adverbial in certain contexts.</p>
        </section>

        <section>
          <title>General expressions</title>

          <p>The general expressions add the tags +Date and/or +Range to the
          following constructions:</p>

          <p>+Date to:</p>

          <p>21.03.1960, 21.3.1960 or 21.03.60 or 21.3.60 03-21-1960,
          3-21-1960 or 03-21-60 or 3-21-60 1960-03-21, 1960-3-21 or 60-03-21
          or 60-3-21</p>

          <p>+Range+Date to:</p>

          <p>21.-22.03.1960, 21.-22.3.1960, 21.-22.03.60, 21.-22.3.60
          21.03.-22.03.1960, 21.3.-22.3.1960, 21.03.-22.03.60, 21.3.-22.3.60
          21.03.1960-22.03.1970, 21.3.1960-22.3.1970, 21.03.60-22.03.70,
          21.3.60-22.3.70</p>
        </section>

        <section>
          <title>Particular examples</title>

          <p>In expressions such as <em>Fáksa: 22242786</em> the numeral gets
          the tag @SPRED. The ":" is interpreted equally as "lea", which makes
          the numeral subject predicate.</p>
        </section>
      </section>
    </section>

    <section>
      <title>"buot"</title>

      <section>
        <title>possible analyses</title>

        <p>Buot has several meanings:<br />everything, all, completely</p>

        <p>it can be:</p>

        <ol>
          <li>quantifier such as in <em>Buot olbmot šaddet okte
          jápmit.</em></li>

          <li>pronoun (in genitive an accusative) <em>Mun lean oaidnán
          buot.</em></li>

          <li>adverb such as in <em>Lei buot njuoskan.</em></li>
        </ol>

        <p>Nickel uses the term "indefinite pronoun" (ubestemt pronomen) for
        both quantifier and pronoun, which is a bit problematic, for the first
        because it uses "indefinite", and secondly because it does not
        distinguish between quantifiers and pronouns.</p>

        <section>
          <title>possible morphological tags</title>

          <p>buot buot+Adv<br />buot buot+Pron+Indef question:</p>

          <p>1. should we take away Indef</p>

          <p>2. should we add quantifier</p>
        </section>

        <section>
          <title>possible syntactic tags</title>

          <ol>
            <li>@SUBJ</li>

            <li>@OBJ</li>

            <li>@PronN&lt; (?)</li>

            <li>@ADV-A ( <em>Guhtemuš báhkkon lea buot
            mávssolaččamus?</em>)</li>

            <li>@PronN&gt; <em>Buot oktanuppelohkái máhttájeaddji vulge
            Galileai., Buot dáid mun attán dutnje</em><em>Ámtamánnii gulai
            "bearráigeahččat buot min gullevaš eatnamiid, gittiid ja
            opmodagaid".</em></li>
          </ol>
        </section>
      </section>

      <section>
        <title>Disambiguation</title>

        <section>
          <title>1. adverbial</title>

          <ol>
            <li>in connection with PrfPrc or PrsPrc such as in lei buot
            njuoskan</li>

            <li>in connection with A (adjective) such as in buot buoremus</li>
          </ol>
        </section>

        <section>
          <title>2. pronoun and quantifier</title>

          <p>a) for example with a restrictive relative sentence following
          such as in: <em>Attášii sutnje buot maid dárbbašit.</em></p>

          <p>In contrast to that, there is the non-restrictive relative
          sentence: <em>Son lea njuoskan buot, mii lea fuones ášši.</em> Here
          buot is adverb.</p>

          <p>The comma distinguishes the restrictive from the non-restrictive
          relative sentence. <br />But is the comma in non-restrictive
          relative sentences really prescriptive?</p>

          <p>Does a rule like REMOVE Adv IF (1 Interr OR N)(1 ("maid"));
          suffice?</p>
        </section>
      </section>
    </section>

    <section>
      <title>"eará"</title>

      <p>eará gets the morphological tags</p>

      <source>
eará    eará+Pron+Indef+Attr
eará    eará+Pron+Indef+Sg+Acc
eará    eará+Pron+Indef+Sg+Nom
eará    eará+Pron+Indef+Sg+Gen
</source>

      <p>and the syntactic tags</p>

      <ol>
        <li>@PronN&gt;</li>

        <li>@GP&lt;</li>
      </ol>

      <p>@PronN&gt; is the default one, while @GP&lt; should be chosen in the
      idiomatic expression earet eará.</p>

      <p>In contexts where a noun follows earet eará, it the idiomatic reading
      appears to be chosen instead of the literal, which means @GP&lt; and not
      @PronN&gt;.</p>
    </section>
  </body>
</document>