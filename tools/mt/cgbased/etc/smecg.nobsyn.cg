SOFT-DELIMITERS = "<,>" cm ;
DELIMITERS = "<.>" "<:>" "<!>" "<?>" "<...>" "<|>" "<$.>" "<$:>" "<$!>" "<$?>" "<$|>" sent ;

SETS




# I define end of clause and beginning of clause in a way so that the file
# may be read both by the CG-2 and the vislcg formalisms.

LIST BOS = (>>>) (<s>) (sent) ;
LIST EOS = (<<<) (</s>) (sent) ;

# CG3 doesn´t function without >>> and <<< !

# Tags declared as single-membered LISTs
# ======================================

# Parts of speech
# ---------------

LIST N = N ;
LIST A = A ;
LIST Adv = Adv ;
LIST V = V ;
LIST Pron = Pron ;
LIST det = det ;
LIST Indef = Indef ;

LIST CS = CS ;
LIST CC = CC ;
LIST Po = Po ;
LIST Pr = Pr ;
LIST Pcle = Pcle ;
LIST Num = Num ;
LIST Interj = Interj ;
LIST ABBR = ABBR ;
LIST ACR = ACR ;
LIST Arab = Arab ;

LIST CLB = CLB sent cm ;
LIST LEFT = LEFT lquot ;
LIST RIGHT = RIGHT rquot ;
LIST web = web ;
LIST PUNCT = PUNCT guio quot ;

LIST COMMA = "," ;
LIST ¶ = ¶;

#!! * Sets for POS sub-categories
# ------------------

LIST Pers = Pers ;
LIST Dem = Dem ;
LIST Interr = Interr ;
LIST Ind = Ind ;

LIST Recipr = Recipr ;
LIST Refl = Refl ;
LIST Rel = Rel ;

LIST Coll = Coll ;
LIST NomAg = NomAg ;
LIST G3 = G3 ;
LIST Prop = Prop ;

#!! * Sets for Semantic tags
# -------------

LIST Sem/Act = Sem/Act Sem/Act_Fruit Sem/Act_Group Sem/Act_Plc Sem/Act_Route Sem/Act_Tool-it ; #Activity #Ollet guhká dainna X-Com (Veaigin bisánasttii Ristenge geahččat, man guhkás Lemet-gázzi juo ledje ollen dainna divvunbargguin.) # bargu
LIST Sem/Amount = Sem/Amount Sem/Amount_Build Sem/Amount_Semcon;
LIST Sem/Ani = Sem/Ani Sem/Ani-fish Sem/Ani_Body-abstr_Hum Sem/Ani_Group_Prod-vis ; #Animal #bivdit X-Loc veahki.
LIST Sem/Ani-fish = Sem/Ani-fish ; 
LIST Sem/Aniprod = Sem/Aniprod Sem/Aniprod_Hum Sem/Aniprod_Obj-clo Sem/Aniprod_Perc-phys Sem/Aniprod_Plc Sem/Aniprod_Plc_Route ;
LIST Sem/Body = Sem/Body Sem/Body_Body-abstr Sem/Body_Clth Sem/Body_Food Sem/Body_Group_Hum Sem/Body_Hum Sem/Body_Mat Sem/Body_Measr Sem/Body_Obj_Tool-catch Sem/Body_Plc Sem/Body_Plc-elevate Sem/Body_Time Sem/Body_Group_Hum_Time ; #Body #Buohkat ceggejedje gieđa. Mon gal attán dutnje bealji vuollái. Go duos dás speččohallá bahtii de gal buollá bargomokta! Čuolda basttii sus alemii.
LIST Sem/Body-abstr = Sem/Ani_Body-abstr_Hum Sem/Body-abstr Sem/Body-abstr_Feat-cogn Sem/Body-abstr_Prod-audio_Semcon Sem/Body_Body-abstr ; # jierbmi, siellu, ...
LIST Sem/Build = Sem/Amount_Build Sem/Ani_Build Sem/Ani_Build_Hum_Txt Sem/Build Sem/Build_Build-part  Sem/Build_Clth-part Sem/Build_Edu_Org Sem/Build_Event_Org Sem/Build_Org Sem/Build_Route Sem/Build_Obj ; #Build #Sem #Syn: hukset X deike
LIST Sem/Build-part = Sem/Ani_Build-part Sem/Build-part Sem/Build-part_Cat Sem/Build-part_Cat_Ctain Sem/Build-part_Ctain Sem/Build-part_Ctain_Mat Sem/Build-part_Plc Sem/Build_Build-part ; #Building part, e.g. room #Sem:+con,+count,-mova #Syn: mannat X sisa
LIST Sem/Cat = Sem/Build-part_Cat Sem/Build-part_Cat_Ctain Sem/Build-part_Cat_Ctain_Mat Sem/Cat Sem/Cat_Group_Hum Sem/Cat_Group_Hum_Plc ;
LIST Sem/Clth = Sem/Body_Clth Sem/Clth Sem/Clth_Hum Sem/Clth_Obj-clo ; #Clothes #Sem #bidjat X ala/badjelii.
LIST Sem/Clth-jewl = Sem/Clth-jewl Sem/Clth-jewl_Curr Sem/Clth-jewl_Curr_Obj Sem/Clth-jewl_Curr_Obj_Org Sem/Clth-jewl_Fruit Sem/Clth-jewl_Money Sem/Clth-jewl_Plant Sem/Org_Clth-jewl  Sem/Clth-jewl_Org ; #Clothes jewelry #Synt: bidjat X ala. *bidjat X badjelii.
LIST Sem/Clth-part  = Sem/Build_Clth-part Sem/Clth-part Sem/Clth-jewl_Curr_Obj  ;
LIST Sem/Ctain = Sem/Build-part_Cat_Ctain Sem/Build-part_Cat_Ctain_Mat Sem/Build-part_Ctain Sem/Build-part_Ctain_Mat Sem/Build-part_Ctain_Obj Sem/Ctain Sem/Ctain_Feat-phys Sem/Ctain_Furn Sem/Ctain_Plc Sem/Ctain_Tool Sem/Ctain_Tool-measr ; #Container #Sem:+mova #Syn: bidjat juoidá X sisa
LIST Sem/Ctain-abstr = Sem/Ctain-abstr Sem/Ctain-abstr_Org ;
LIST Sem/Ctain-clth = Sem/Ctain-clth Sem/Ctain-clth_Plant Sem/Ctain-clth_Veh ;
LIST Sem/Curr = Sem/Clth-jewl_Curr Sem/Clth-jewl_Curr_Obj Sem/Clth-jewl_Curr_Obj_Org Sem/Curr Sem/Curr_Org; #Syn: Mun mávssan dasa 100 X. Dat máksá 100 X.
LIST Sem/Date = Sem/Date ;
LIST Sem/Dance = Sem/Dance Sem/Dance_Org Sem/Dance_Prod-audio ; #Ollugat dánso swinga lávddi ovddabeale.
LIST Sem/Dir = Sem/Dir ;
LIST Sem/Domain = Sem/Domain Sem/Domain_Food-med Sem/Domain_Hum Sem/Domain_Prod-audio;
LIST Sem/Drink = Sem/Drink Sem/Drink_Plant ;
LIST Sem/Edu = Sem/Build_Edu_Org Sem/Edu Sem/Edu_Event Sem/Edu_Geom Sem/Edu_Group_Hum Sem/Edu_Hum Sem/Edu_Mat Sem/Edu_Org ; # vázzit X-Acc. addit X-Acc. X:s lea beroštupmi.
LIST Sem/Event = Sem/Build_Event_Org Sem/Edu_Event Sem/Event Sem/Event_Food Sem/Event_Hum Sem/Event_Plc Sem/Event_Plc-elevate Sem/Event_Time ; # X maŋŋel mun ferten vuolgit. X:s leat ollu olbmot. *Lean leamaš doppe X:Gen.
LIST Sem/Feat-cogn = Sem/Body-abstr_Feat-cogn  Sem/Feat-cogn ; # oaidnu, oamedovdu, viissisvuohta
LIST Sem/Feat = Sem/Feat Sem/Feat_Plant ; #many -vuohta and -dat nouns
LIST Sem/Feat-measr = Sem/Feat-measr Sem/Feat-measr_Plc ;
LIST Sem/Feat-phys = Sem/Ctain_Feat-phys Sem/Feat-phys  Sem/Feat-psych_Plc Sem/Feat-phys_Tool-write Sem/Feat-phys_Veh Sem/Feat-phys_Wthr ;
LIST Sem/Feat-psych = Sem/Feat-psych Sem/Feat-psych_Hum ; #not touchable, not countable ("beroštupmi" "gáđašvuohta" "mokta" "sáhkkiivuohta") - Mus lea X,  Son lea X-adj persovdna # muitu
LIST Sem/Fem = Sem/Fem  ;
LIST Sem/Food = Sem/Body_Food Sem/Event_Food Sem/Food Sem/Food_Obj-surfc Sem/Food_Perc-phys Sem/Food_Plant Sem/Food_Sign ; #Syn: bassit/borrat/sohpat X-Acc. mon im læk borram dam guolest. mun boran iđitbiepmu. mus lea iđitbiebmu fárus. birgui borastuvvat
LIST Sem/Food-med = Sem/Domain_Food-med Sem/Food-med ;
LIST Sem/Fruit = Sem/Act_Fruit Sem/Clth-jewl_Fruit Sem/Fruit Sem/Fruit_Hum ;
LIST Sem/Furn = Sem/Ctain_Furn Sem/Furn ; #Syn: bidjat X vissui: čohkkedit X ala
LIST Sem/Game = Sem/Game Sem/Game_Obj-play ;
LIST Sem/Geom = Sem/Edu_Geom Sem/Geom Sem/Geom_Hum_Plc Sem/Geom_Obj ;
LIST Sem/Group = Sem/Group Sem/Act_Group Sem/Ani_Group Sem/Ani_Group_Hum Sem/Ani_Group_Prod-vis Sem/Body_Group_Hum Sem/Body_Group_Hum_Time Sem/Cat_Group_Hum Sem/Cat_Group_Hum_Plc Sem/Edu_Group_Hum Sem/Group_Hum Sem/Group_Hum_Org Sem/Group_Hum_Plc Sem/Group_Hum_Prod-vis Sem/Group_Hum_Time Sem/Group_Org Sem/Group_Prod-vis Sem/Group_Sign Sem/Group_Txt ; #Bárdni lea riggámus sogas. -Plc
LIST Sem/Hum = Sem/Hum Sem/Hum-abstr Sem/Hum-prof Sem/Ani_Body-abstr_Hum Sem/Ani_Build_Hum_Txt Sem/Ani_Group_Hum Sem/Ani_Hum Sem/Ani_Hum_Plc Sem/Ani_Hum_Time Sem/Aniprod_Hum Sem/Body_Group_Hum Sem/Body_Group_Hum_Time Sem/Body_Hum Sem/Cat_Group_Hum Sem/Cat_Group_Hum_Plc Sem/Clth_Hum Sem/Domain_Hum Sem/Edu_Group_Hum Sem/Edu_Hum Sem/Event_Hum Sem/Feat-psych_Hum Sem/Fruit_Hum Sem/Geom_Hum_Plc Sem/Group_Hum Sem/Group_Hum_Org Sem/Group_Hum_Plc Sem/Group_Hum_Prod-vis Sem/Group_Hum_Time Sem/Hum_Lang Sem/Hum_Lang_Plc Sem/Hum_Lang_Time Sem/Hum_Mat_Tool Sem/Hum_Obj Sem/Hum_Org Sem/Hum_Sign Sem/Hum_Plant Sem/Hum_Plc Sem/Hum_Tool Sem/Hum_Tool-it Sem/Hum_Veh Sem/Hum_Wthr  ; #Human
LIST Sem/Hum-kin = Sem/Hum-kin ; #Human kinship
LIST Sem/Hum-abstr = Sem/Hum-abstr ;
LIST Sem/Ideol = Sem/Ideol ;
LIST Sem/Lang = Sem/Lang ; #Syn: hállat X:illatiiva. Son hállá X:Acc. Jorgalan dán X:lokatiiva Y:illatiiva.
LIST Sem/Mal = Sem/Mal ;
LIST Sem/Mat = Sem/Body_Mat Sem/Build-part_Cat_Ctain_Mat Sem/Build-part_Ctain_Mat Sem/Build-part_Ctain_Obj Sem/Edu_Mat Sem/Hum_Mat_Tool Sem/Mat Sem/Mat_Plant Sem/Mat_Txt ; # Material #Sem: cannot pass through it without destroying it, ráhkadit juoidá X:s. Niibi lea X-Loc-Sg. #Dán báhkis šaddá čáppa gohppu.
LIST Sem/Measr = Sem/Body_Measr Sem/Measr Sem/Measr_Time Sem/Measr_Sign Sem/Measr_Obj_Time ; # Lea lassánan 100 X-Loc.
LIST Sem/Money = Sem/Clth-jewl_Money Sem/Money Sem/Money_Obj Sem/Money_Org Sem/Money_Part Sem/Money_Txt ; #Mun mávssán X. Mii ávžžuhit vuovdit alimus X-Ill (haddái). ruhtadit doaibmabušeahtain. vuovdit/bidjat ruđast - selge for penger
LIST Sem/Obj = Sem/Body_Obj_Tool-catch Sem/Build-part_Ctain_Obj Sem/Measr_Obj_Time Sem/Clth-jewl_Curr_Obj Sem/Clth-jewl_Curr_Obj_Org Sem/Geom_Obj Sem/Hum_Obj Sem/Money_Obj Sem/Obj Sem/Obj_Semcon Sem/Obj_Sign Sem/Obj_State Sem/Obj_Symbol Sem/Obj_Veh Sem/Build_Obj Sem/Obj-com ; # concrete object, movable #Syn: Mun guoskkán X-Acc. Dá livčče dutnje X-Nom (sabehat). čievččastit geađggi johkii
#LIST Sem/Obj-com = Sem/Obj-com ; #communication object #hálan telefuvnnas/e-poasttas #sádden X bokte
LIST Sem/Obj-clo = Sem/Aniprod_Obj-clo Sem/Clth_Obj-clo Sem/Obj-clo ; #bidjat juoidá Obj-clo sisa
LIST Sem/Obj-cogn = Sem/Obj-cogn ;
LIST Sem/Obj-el = Sem/Obj-el ; # moveable, countable, touchable, electrical objects that can be turned on and of,  mus lea X alde, mun bijan X ala
LIST Sem/Obj-ling = Sem/Obj-ling ;
LIST Sem/Obj-play = Sem/Obj-play Sem/Game_Obj-play Sem/Obj-play_Sport ;
LIST Sem/Obj-rope = Sem/Obj-rope ;
LIST Sem/Obj-surfc = Sem/Obj-surfc ;
LIST Sem/Org = Sem/Build_Edu_Org Sem/Build_Event_Org Sem/Build_Org Sem/Ctain-abstr_Org Sem/Curr_Org Sem/Dance_Org Sem/Edu_Org Sem/Group_Hum_Org Sem/Group_Org Sem/Hum_Org Sem/Money_Org Sem/Org Sem/Org_Clth-jewl Sem/Org_Prod-cogn Sem/Org_Rule Sem/Org_Txt Sem/Org_Veh Sem/Clth-jewl_Org org ;
LIST Sem/Part = Sem/Money_Part Sem/Part Sem/Part_Prod-cogn Sem/Part_Substnc ; # bealli, oassi
LIST Sem/Perc-cogn = Sem/Perc-cogn ;
LIST Sem/Perc-emo = Sem/Perc-emo ; #Sem not touchable, not countable ("ballu" "suhttu" "vaši") -  Mun dovddan garra X. Mun lean X+Loc # moraš
LIST Sem/Perc-phys = Sem/Aniprod_Perc-phys Sem/Food_Perc-phys Sem/Perc-phys Sem/Perc-emo_Wthr ; # anistupmi, oaidnu
LIST Sem/Perc-psych = Sem/Perc-psych ;
LIST Sem/Phonenr = Sem/Phonenr ;
LIST Sem/Plant = Sem/Clth-jewl_Plant Sem/Ctain-clth_Plant Sem/Drink_Plant Sem/Feat_Plant Sem/Food_Plant Sem/Hum_Plant Sem/Mat_Plant Sem/Plant Sem/Plant_Tool Sem/Plant_Tool-measr ; #čáhccet X-Acc #X-Nom šaddet
LIST Sem/Plant-part = Sem/Plant_Plant-part Sem/Plant-part ; #čáhccet X-Acc #X-Nom šaddet
LIST Sem/Plc = Sem/Act_Plc Sem/Ani_Hum_Plc Sem/Ani_Plc Sem/Ani_Plc_Txt Sem/Aniprod_Plc Sem/Aniprod_Plc_Route Sem/Body_Plc Sem/Build-part_Plc Sem/Cat_Group_Hum_Plc Sem/Ctain_Plc Sem/Event_Plc Sem/Event_Plc-elevate Sem/Feat-measr_Plc Sem/Feat-psych_Plc Sem/Geom_Hum_Plc Sem/Group_Hum_Plc Sem/Hum_Lang_Plc Sem/Hum_Plc Sem/Plc Sem/Plc_Pos Sem/Plc_Route Sem/Plc_Semcon Sem/Plc_State Sem/Plc_Substnc Sem/Plc_Substnc_Wthr Sem/Plc_Txt Sem/Plc_Time Sem/Plc_Time_Wthr Sem/Plc_Tool-catch Sem/Plc_Wthr ;
LIST Sem/Plc-abstr = Sem/Plc-abstr Sem/Plc-abstr_Rel_State Sem/Plc-abstr_Route ;
LIST Sem/Plc-elevate = Sem/Body_Plc-elevate Sem/Plc-elevate ;
LIST Sem/Plc-line = Sem/Plc-line ;
LIST Sem/Plc-water = Sem/Plc-water ;
LIST Sem/Pos = Sem/Plc_Pos Sem/Pos ; #Social position (job etc.)
LIST Sem/Process = Sem/Process ;
LIST Sem/Prod = Sem/Prod ; #jáhkku
LIST Sem/Prod-audio = Sem/Body-abstr_Prod-audio_Semcon Sem/Dance_Prod-audio Sem/Domain_Prod-audio Sem/Prod-audio Sem/Prod-audio_Txt ; #attáldat
LIST Sem/Prod-cogn = Sem/Org_Prod-cogn Sem/Part_Prod-cogn Sem/Prod-cogn Sem/Prod-cogn_Txt ; # muittuhus, ipmárdus, jáhkku, osku, vuordámuš, viisodat? diehtu?
LIST Sem/Prod-ling = Sem/Prod-ling ;
LIST Sem/Prod-vis = Sem/Ani_Group_Prod-vis Sem/Group_Hum_Prod-vis Sem/Group_Prod-vis Sem/Prod-vis ;
LIST Sem/Rel = Sem/Plc-abstr_Rel_State Sem/Rel ;
LIST Sem/Route = Sem/Act_Route Sem/Aniprod_Plc_Route Sem/Build_Route Sem/Plc-abstr_Route Sem/Plc_Route Sem/Route ;
LIST Sem/Rule = Sem/Org_Rule Sem/Rule ; 
LIST Sem/Semcon = Sem/Amount_Semcon Sem/Body-abstr_Prod-audio_Semcon Sem/Obj_Semcon Sem/Plc_Semcon Sem/Semcon Sem/Semcon_Txt ; # semantic concept
LIST Sem/Sign = Sem/Group_Sign  Sem/Food_Sign Sem/Hum_Sign Sem/Obj_Sign Sem/Sign Sem/Measr_Sign ;
LIST Sem/Sport = Sem/Obj-play_Sport Sem/Sport ;
LIST Sem/State = Sem/Plc-abstr_Rel_State Sem/State Sem/Obj_State ; # lihkku, ipmilbalolašvuohta, mokta, váivi, váttisvuohta
LIST Sem/State-sick = Sem/State-sick Sem/State-sick_Substnc ;
LIST Sem/Substnc = Sem/Plc_Substnc Sem/Plc_Substnc_Wthr  Sem/State-sick_Substnc Sem/Substnc Sem/Substnc_Wthr Sem/Part_Substnc ; #Sem: can pass through it without destroying it
LIST Sem/Sur = Sem/Sur cog ;
LIST Sem/Symbol = Sem/Obj_Symbol Sem/Symbol ;
LIST Sem/Time =  Sem/Time Sem/Time-clock Sem/Ani_Hum_Time Sem/Ani_Time Sem/Body_Group_Hum_Time Sem/Body_Time Sem/Event_Time Sem/Group_Hum_Time Sem/Hum_Lang_Time Sem/Measr_Obj_Time Sem/Measr_Time Sem/Plc_Time Sem/Plc_Time_Wthr Sem/Time_Wthr ;
LIST Sem/Time-clock = Sem/Time-clock ;
LIST Sem/Tool = Sem/Act_Tool-it Sem/Ctain_Tool Sem/Hum_Mat_Tool Sem/Hum_Tool Sem/Hum_Tool-it Sem/Lang_Tool Sem/Plant_Tool Sem/Tool Sem/Tool-clean Sem/Ctain_Tool-measr Sem/Plant_Tool-measr Sem/Tool-measr Sem/Ctain_Tool-measr Sem/Plant_Tool-measr Sem/Tool-measr Sem/Tool-music Sem/Feat-phys_Tool-write Sem/Tool-write ;
LIST Sem/Tool-catch = Sem/Body_Obj_Tool-catch Sem/Plc_Tool-catch Sem/Tool-catch ;
LIST Sem/Tool-clean = Sem/Tool-clean ;
LIST Sem/Tool-it = Sem/Tool-it ;
LIST Sem/Tool-measr = Sem/Ctain_Tool-measr Sem/Plant_Tool-measr Sem/Tool-measr ;
LIST Sem/Tool-music = Sem/Tool-music ;
LIST Sem/Tool-write = Sem/Feat-phys_Tool-write Sem/Tool-write ;
LIST Sem/Txt = Sem/Ani_Build_Hum_Txt Sem/Ani_Plc_Txt Sem/Group_Txt Sem/Mat_Txt Sem/Money_Txt Sem/Org_Txt Sem/Plc_Txt Sem/Prod-audio_Txt Sem/Prod-cogn_Txt Sem/Semcon_Txt Sem/Txt ; #Syn: Čále dearvvuođaidat guossegirjámet! # das čuožžu
LIST Sem/Veh = Sem/Ani_Veh Sem/Ctain-clth_Veh Sem/Feat-phys_Veh Sem/Hum_Veh Sem/Obj_Veh Sem/Org_Veh Sem/Veh Sem/Veh-cntain ;	#Syn: Vuolggán X:Com
LIST Sem/Veh-cntain = Sem/Veh-cntain ; #Manan X sisa. #vuolggán X:Com.
LIST Sem/Wthr = Sem/Feat-phys_Wthr Sem/Hum_Wthr Sem/Perc-emo_Wthr Sem/Plc_Substnc_Wthr Sem/Plc_Time_Wthr Sem/Plc_Wthr Sem/Substnc_Wthr Sem/Time_Wthr Sem/Wthr ; #Sem: Birget X:Ess. jietna gullui X-Loc (balvvas). Olgun/Odne lea + Wthr-Nom. ?Man ollu lea Wthr-Nom? Wthr-Gen maŋŋel boahtá X. Makkár lea dálki/siivu? #Ex: árvi, borga, muohtá, čoaskadálki, baján, bievla, bodnejiekŋa, bivdodálki, gasis, guoldu
LIST Sem/Wpn = Sem/Wpn ; #oaggut oaggunstákkuin, goddit X+Com

LIST Sem/Date = Sem/Date ;
LIST Sem/Year = Sem/Year ;

SET FIRSTNAME = Sem/Mal OR Sem/Fem  ;

LIST TIME-N-SET = (N Sem/Time) ;
LIST NOT-TIME = "<dulvi>" "<lohpi>" "<vuorru>" ;
SET TIME-N = TIME-N-SET - NOT-TIME ;


LIST HUMAN = Sem/Hum Sem/Mal Sem/Fem Sem/Sur Pers NomAg Der/NomAg ;

SET LANGUAGE = Sem/Lang OR ("<.*giel>"ri N) OR ("<dárrolaš>"i) OR ("<nuortalaš>"i) OR ("<sápmelaš>"i) ;

#!! * Sets for Morphosyntactic properties
# --------------------------

LIST Nom = Nom ;
LIST Acc = Acc ;
LIST Gen = Gen ;
LIST Ill = Ill ;
LIST Loc = Loc ;
LIST Com = Com ;
LIST Ess = Ess ;

LIST Sg = Sg ;
LIST Pl = Pl ;

LIST Cmp/Splitr = Cmp/Splitr ;
LIST Cmp/Attr = Cmp/Attr ;

LIST Cmp = Cmp ;

LIST PxSg1 = PxSg1 ;
LIST PxSg2 = PxSg2 ;
LIST PxSg3 = PxSg3 ;

LIST PxDu1 = PxDu1 ;
LIST PxDu2 = PxDu2 ;
LIST PxDu3 = PxDu3 ;

LIST PxPl1 = PxPl1 ;
LIST PxPl2 = PxPl2 ;
LIST PxPl3 = PxPl3 ;
LIST PX = PxSg1 PxSg2 PxSg3 PxDu1 PxDu2 PxDu3 PxPl1 PxPl2 PxPl3 ;

LIST Comp = Comp ;
LIST Superl = Superl ;

LIST Attr = Attr ;
LIST Ord = Ord ;

LIST Qst = Qst ;

LIST Foc/Pos-ge = Foc/Pos-ge ;
LIST Foc/Neg-ge = Foc/Neg-ge ;

LIST IV = IV ;
LIST TV = TV ;

LIST pasv = pasv ;              # bidix-added
LIST Der/Pass = Der/PassL Der/PassS ;

LIST Prt = Prt;
LIST Prs = Prs ;


LIST Pot = Pot ;
LIST Cond = Cond ;

LIST Imprt = Imprt ;

LIST Sg1 = Sg1 ;
LIST Sg2 = Sg2 ;
LIST Sg3 = Sg3 ;

LIST Du1 = Du1 ;
LIST Du2 = Du2 ;
LIST Du3 = Du3 ;

LIST Pl1 = Pl1 ;
LIST Pl2 = Pl2 ;
LIST Pl3 = Pl3 ;

LIST Inf = Inf ;
LIST ConNeg = ConNeg ;
LIST Neg = Neg ;

LIST PrfPrc = PrfPrc ;
LIST VGen = VGen ;

LIST PrsPrc = PrsPrc ;


LIST Ger = Ger ;
LIST Sup = Sup ;
LIST Actio = Actio ;

LIST Der/PassL = Der/PassL ;
LIST Der/NomAg = Der/NomAg ;
LIST Actor = NomAg Der/NomAg ;
LIST VAbess = VAbess ;

# Derivation
# ----------

LIST Der/PassL = Der/PassL ;
LIST Der/Pass = Der/PassL Der/PassS ; 
LIST Der/NomAg = Der/NomAg ;   
LIST Actor = NomAg Der/NomAg ; 
LIST Der/adda = Der/adda ;		 
LIST Der/alla = Der/alla ;		 
LIST Der/easti = Der/easti ;	 
LIST Der/d = Der/d ;			 
LIST Der/eamoš = Der/eamoš ;	 
LIST Der/amoš = Der/amoš ;		 
LIST Der/geahtes = Der/geahtes ; 
LIST Der/h = Der/h ;				 
LIST Der/Car = Der/Car ;		 
LIST Der/Caus = Der/Caus ;		 
LIST Der/huhtti = Der/huhtti ;		
LIST Der/huvva = Der/huvva ;		
LIST Der/halla = Der/halla ;		
LIST Der/l = Der/l ;				
LIST Der/lasj = Der/lasj ;			
LIST Der/las = Der/las ;			
LIST Der/meahttun = Der/meahttun ;	
LIST Der/muš = Der/muš ;			
LIST Der/NomAct = Der/NomAct ;		
LIST Der/sasj = Der/sasj ;			
LIST Der/st = Der/st ;				
LIST Der/stuvva = Der/stuvva ;		
LIST Der/upmi = Der/upmi ;			
LIST Der/supmi = Der/supmi ;		
LIST Der/vuota = Der/vuota ;		
LIST Der/InchL = Der/InchL ;		
LIST Der/laakan = Der/laakan ;		
LIST Der/laagasj = Der/laagasj ;	
LIST Der/jagáš = Der/jagáš ;		
LIST Der/A = Der/A Der/A* ;			
LIST Der/Dimin = Der/Dimin ;		
LIST Der/viđá = Der/viđá ;			
LIST Der/viđi = Der/viđi ;			
LIST Der/veara = Der/veara ;		
LIST Der/AAdv = Der/AAdv ;			
LIST Der/Adv = Der/Adv ;			
LIST Der/dáfot = Der/dáfot ;			 
LIST Der/keahtta = Der/keahtta ;		
LIST Der/nuolus = Der/nuolus ;			
LIST Der/náittot = Der/náittot ;		
LIST Der/seagat = Der/seagat ;			
LIST Der/suttat = Der/suttat ;			
LIST Der/ár = Der/ár ;			 

# Syntactic tags
# --------------

LIST @+FAUXV = @+FAUXV ;
LIST @+FMAINV = @+FMAINV ;
LIST @-FAUXV = @-FAUXV ;

LIST @-FMAINV = @-FMAINV ;
LIST @-FSUBJ→ = @-FSUBJ→ ;
LIST @-F←OBJ = @-F←OBJ ;
LIST @-FOBJ→ = @-FOBJ→ ;
LIST @SPRED←OBJ = @SPRED←OBJ ;
LIST @-FADVL = @-FADVL ;

SET FOBJ = @-F←OBJ OR @-FOBJ→ ;
SET FMAINV = @-FMAINV OR @+FMAINV OR (V @←OBJ) OR (V @N←) OR (V @A←) OR (V @←SUBJ) OR (V @←ADVL) ;
SET FAUXV = @-FAUXV OR @+FAUXV ;

LIST @ADVL = @ADVL @ADVL→ @ADVL← @←ADVL @→ADVL @-F←ADVL ;
LIST @→ADVL = @→ADVL ;
LIST @ADVL← = @ADVL← ;
LIST @←ADVL = @←ADVL ;
LIST @ADVL→ = @ADVL→ ;
LIST @ADVL→CS = @ADVL→CS ;

LIST ←hab→ = ←hab→ (@ADVL→ Pron Loc) (@←ADVL Pron Loc);
LIST ←ext→ = ←ext→ ;


LIST HAB-V-TAGS = Pl3 Sg3 ConNeg PrfPrc Inf ;

LIST @→N = @→N ;

LIST @N← = @N← ;


LIST @→A = @→A ;

LIST @P← = @P← ;

LIST @→P = @→P ;

LIST @HNOUN = @HNOUN ;
LIST @INTERJ = @INTERJ ;

LIST @→Num = @→Num;

LIST @Pron← = @Pron← ;
LIST @→Pron = @→Pron ;

LIST @Num← = @Num← ;

LIST @OBJ = @OBJ ;
LIST @←OBJ = @←OBJ ;
LIST @OBJ→ = @OBJ→ ;
LIST @OPRED = @OPRED ;
LIST @←OPRED = @←OPRED ;
LIST @OPRED→ = @OPRED→ ;
LIST @PCLE = @PCLE ;
LIST @COMP-CS← = @COMP-CS← ;

LIST @SPRED = @SPRED ;
LIST @←SPRED = @←SPRED ;
LIST @SPRED→ = @SPRED→ ;
LIST @SUBJ = @SUBJ ;
LIST @←SUBJ = @←SUBJ ;
LIST @SUBJ→ = @SUBJ→ ;
SET SUBJ = @←SUBJ OR @SUBJ→ OR @SUBJ ;
SET SPRED = @←SPRED OR @SPRED→ OR @SPRED ;
SET OPRED = @←OPRED OR @OPRED→ OR @OPRED ;

LIST @PPRED = @PPRED ;

LIST @APP = @APP ;
LIST @APP-N← = @APP-N← ;
LIST @APP-Pron← = @APP-Pron← ;
LIST @APP→Pron = @APP→Pron ;
LIST @APP-Num← = @APP-Num← ;
LIST @APP-ADVL← = @APP-ADVL← ;
LIST @VOC = @VOC ;

LIST @CVP = @CVP ;
LIST @CNP = @CNP ;

SET OBJ = (@←OBJ) OR (@OBJ→) OR (@OBJ) OR (@-F←OBJ) OR (@-FOBJ→) ;
LIST ←OBJ = @-F←OBJ @←OBJ ;
LIST OBJ→ = @OBJ→ @-FOBJ→ ;

SET ←OBJ-OTHERS = ←OBJ OR Gen OR Nom OR Ess OR Loc OR Adv ;
SET OBJ→-OTHERS = OBJ→ OR Gen OR Nom OR Ess OR Loc OR Adv  ;

SET SYN-V = V + SUBJ OR OBJ + V OR @ADVL + V OR (V @N←) OR (V @A←) OR V + SPRED OR (V @COMP-CS←) ;


LIST @X = @X ;


LIST OKTA = "<akta>" "<okta>";
LIST go = "<go>" ;


# Initials
# --------

LIST INITIAL = "adj" "b" "c" "d" "e" "f" "g" "h" "i" "j" "k" "l" "m"
"n" "o" "p" "q" "r" "s" "t" "u" "v" "w" "x" "y" "z"
"á" "æ" "ø" "å" "ö" "ä" ;

LIST CAP-INITIAL = "A" "B" "C" "D" "E" "F" "G" "H" "I" "J" "K" "L" "M"
"N" "O" "P" "Q" "R" "S" "T" "U" "V" "W" "X" "Y" "Z"
"Á" "Æ" "Ø" "Å" "Ö" "Ä" ;

# Tag sets
# ========
  SETS
# ========


# Word or not
# -----------
LIST WORD = N A Adv V Pron CS CC Po Pr Interj Pcle Num ABBR ACR \? ;
# any word

SET REALWORD = WORD - Num - Ord ;

SET REALWORD-NOTABBR = WORD - Num - Ord - ABBR ;

SET WORD-NOTDE = WORD - ("<de>") ;

# Verb sets
# ---------

# Verbs and their Complements
# - - - - - - - - - - - - - -

SET NOT-VERB = WORD - V;

# Finiteness and mood
# - - - - - - - - - -

SET V-IND-FIN = Prs OR Prt ;
# Problem: "In boahtán" is an invisible Indative

SET V-MOOD = Ind OR Pot OR Imprt OR Cond OR (Neg Sup) ;

LIST GC = ("<gč>") ;

SET VFIN = GC OR V-MOOD - ConNeg ;

SET VFIN-POS = V-MOOD - ConNeg - Neg ;

SET VFIN-NOT-IMP = VFIN - Imprt ;

SET VFIN-NOT-NEG = VFIN - Neg ;
# this might be to strict, besides, "iige" can be written "ii ge"

SET NOT-PRFPRC = WORD - PrfPrc ;

# Person
# - - - -

LIST V-SG1 = (V Sg1) ;

LIST V-SG2 = (V Sg2) ;

LIST V-SG3 = (V Sg3) ;

LIST V-DU1 = (V Du1) ;

LIST V-DU2 = (V Du2) ;

LIST V-DU3 = (V Du3) ;

LIST V-PL1 = (V Pl1) ;

LIST V-PL2 = (V Pl2) ;

LIST V-PL3 = (V Pl3) ;


# Note that imperative verbs are not included in these sets!

# Some subsets of the VFIN sets
# - - - - - - - - - - - - - - -
SET V-SG = V-SG1 OR V-SG2 OR V-SG3 ;
SET V-DU = V-DU1 OR V-DU2 OR V-DU3 ;
SET V-PL = V-PL1 OR V-PL2 OR V-PL3 ;

SET V-DU-PL = V-DU1 OR V-DU2 OR V-DU3 OR V-PL1 OR V-PL2 OR V-PL3 ;

SET V-NOT-SG1 = VFIN-NOT-IMP - V-SG1 ;
SET V-NOT-SG2 = VFIN-NOT-IMP - V-SG2 ;
SET V-NOT-SG3 = VFIN-NOT-IMP - V-SG3 ;
SET V-NOT-DU1 = VFIN-NOT-IMP - V-DU1 ;
SET V-NOT-DU2 = VFIN-NOT-IMP - V-DU2 ;
SET V-NOT-DU3 = VFIN-NOT-IMP - V-DU3 ;
SET V-NOT-PL1 = VFIN-NOT-IMP - V-PL1 ;
SET V-NOT-PL2 = VFIN-NOT-IMP - V-PL2 ;
SET V-NOT-PL3 = VFIN-NOT-IMP - V-PL3 ;


SET V-1-2 = V-SG1 OR V-SG2 OR V-DU1 OR V-DU2 OR V-PL1 OR V-PL2 ;
SET V-3 = V-SG3 OR V-DU3 OR V-PL3 ;

# Sets consisting of LEAT
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
LIST LEAT = "<leat>"i ;

SET LEAT-FIN-NOT-IMP = LEAT - Imprt ;

LIST VPRFPRC = (V PrfPrc) ;
LIST LEATPRFPRC = ("<leat>"i PrfPrc) ;
SET PRC-NOT-LEAT = VPRFPRC - LEATPRFPRC ;
# In Order to distinguish between real leat-constructions and participles of other verbs
LIST HABEO-SG3 = ("<leat>"i p3 Sg) (V Neg p3 Sg) ("<šaddat>" p3 Sg) ;

LIST HABEO-PL3 = ("<leat>"i p3 Pl) (V Neg p3 Pl) ("<šadda>t" p3 Pl)  ;

SET HABEO-3 = HABEO-SG3 OR HABEO-PL3 ;

# Pronoun sets
# ------------

LIST MUN = (Pers Sg1 Nom) ;
LIST DON = (Pers Sg2 Nom) ;
LIST SON = ("son" Pers Sg3 Nom) ;
LIST MOAI = (Pers Du1 Nom) ;
LIST DOAI = (Pers Du2 Nom) ;
LIST SOAI = (Pers Du3 Nom) ;
LIST MII-PERS = (Pers Pl1 Nom) ;
LIST DII = (Pers Pl2 Nom) ;
LIST SII = ("son" Pers Pl3 Nom) ;

SET PPRON-NOM-NOT-DAT = MUN OR DON OR SON OR MOAI OR DOAI OR SOAI OR MII-PERS OR DII OR SII ;

SET PPRON-NOT-DAT = Pers - ("<dat>") ;

SET PPRON-DU-PL = MOAI OR DOAI OR SOAI OR MII-PERS OR DII OR SII ;
SET PPRON-PL = MII-PERS OR DII OR SII ;

SET PRON-DU = MOAI OR DOAI OR SOAI ;

SET PPRON-NOT-SII = MUN OR DON OR SON OR MOAI OR DOAI OR SOAI OR MII-PERS OR DII ;

LIST PPRON-GEN = (Sg1 Gen) (Sg2 Gen) (Sg3 Gen) (Du1 Gen) (Du2 Gen) (Du3 Gen)
	 (Pl1 Gen) (Pl2 Gen) (Pl3 Gen) ;

SET PPRON-NOT-GEN = Pers - PPRON-GEN ;

LIST DEM-SG = (Pron Dem Sg Nom) ;
LIST DEM-PL = (Pron Dem Pl Nom) ;
SET NOT-DEM = WORD - Dem ;

LIST SGPRON = (Pron Sg1) (Pron Sg2) (Pron Sg3) (Pron Sg) (Pron PxSg1) (Pron PxSg2) (Pron PxSg3) ;
LIST DUPRON = (Pron Du1) (Pron Du2) (Pron Du3) (Pron PxDu1) (Pron PxDu2) (Pron PxDu3) ;
LIST PLPRON = (Pron Pl1) (Pron Pl2) (Pron Pl3) (Pron Pl) (Pron PxPl1) (Pron PxPl2) (Pron PxPl3) ;
LIST DUPRON-NOTPX = (Pron Du1) (Pron Du2) (Pron Du3) ;

SET PRON-NOT-SG = DUPRON OR PLPRON ;

LIST DAT-PRON = ("<dat>") ("<dát>") ("<diet>") ("<duot>") ("<dot>") ;

LIST QUANT-PRON = "<ollu>" "<olu>" "<unnán>" "<váháš>" "<veaháš>" "<veháš>" ;
# This set is for choosing between Adv and Pron Indef.

# Adjectival sets and their complements
# -------------------------------------

SET NOT-A = WORD - A ;
SET NOT-A-COMMA = WORD - A - COMMA ;
SET NOT-Attr = WORD - Attr ;
SET NOT-A-PCLE = WORD - A - Pcle ;

SET NOT-A-ADV = WORD - A - Adv OR ("<maid>") ;

LIST NOMINAL-ADJ = "<guoktilaš>" "<lámis>" "<oasálaš>" ("<suddu>" Der/lasj) "<viissis>";

# and many others

# Adverbial sets and their Complements
# ------------------------------------

SET NOT-ADV-DE = WORD - Adv ;
SET NOT-ADV = NOT-ADV-DE OR ("<de>" Adv) OR CLB ;
SET NOT-ADV-PCLE = NOT-ADV - Pcle ;


LIST MO-MANge = "<goas>" "<gokko>" "<gos>" "<gosa>" "<govt>" "<makkár>" "<man>" "<manne>" ("<manin>" Adv) "<mo>" "<mot>" "<movt>" ("<nugo>" @CVP) (V Qst) ;

SET MO = MO-MANge - ("man" Foc/Neg-ge) ;

# Introduce finite clauses.

LIST PLACE-ADV = (Sem/Plc Adv) ;
# There will usually be A Gen in front.

LIST TIME-ADVL = (Sem/Time Gen) (Sem/Time Loc) ;

LIST TIME-ADV = (Adv Sem/Time) ;


LIST DOPPE = "<badjin>"i "<bajil>"i "<dakko>"i "<dá>"i "<dákko>"i "<dáppe>"i "<diekko>"i "<dieppe>"i "<do>"i "<dokko>"i "<doppe>"i "<duo>"i "<duokko>"i "<duoppe>"i "<olgun>"i ;
# Adverbs with a locativic form, but don´t get Loc as a tag.

LIST DOHKO = "<bajás>" "<bajit>" "<deike>" "<diehke>" "<diehko>" "<dohko>" "<duohko>" "<lulás>" "<olggos>" "<ruoktot>" "<sisa>" "<vuovdimassii>" ;
# Adverbs with a illativic form, but they don´t get Ill as a tag.


# Coordinators
# ------------

LIST NEGFOC = (Neg Foc/Neg-ge) ;

LIST XGO = "<dego>" "<dugo>" "<nugo>" "<seammaládjego>" "<seammaláhkaigo>" ;
# Compounds
LIST SEAMMAX = "<seamma ládje>" "<seamma láhkai>" ;
# Those combine with go

LIST MADE = "<mađe>" "<mađi>" ;
LIST DADE = "<dađe>" "<dađi>" ;


SET CRD = (@CNP) OR COMMA OR NEGFOC OR XGO OR ("_") OR ("-") OR DADE ;
# AFTER LCRD vs. GCRD disambiguation

LIST HAB-CASE = Loc  ;
LIST HAB-ACTOR-ALL = Sem/Hum Sem/Mal Sem/Sur Sem/Fem Sem/Ani Pers ("<gii>") (Pron Indef) Coll ;
SET HAB-ACTOR = HAB-ACTOR-ALL - ("<cihca>") ;
SET HAB-ACTOR-NOT-HUMAN = Sem/Org ;

# Sets of elements with common syntactic behaviour
# ================================================

SETS

#!! * Sets for verbs
# -----

LIST NOT-REAL-V = (Actio Nom) (Actio Gen) (Actio Loc) (Actio Com) PrsPrc ;

SET REAL-V = V - NOT-REAL-V ;
#!! ** V is all readings with a V tag in them, REAL-V should
#!! be the ones without an N tag following the V.
#!! The REAL-V set thus awaits a fix to the preprocess V ... N bug.


# The set REAL is smaller than COPULAS, made for verbs with PrfPrc Complements: Seammás REAL-COPULAS son dovdan iežas...
LIST REAL-COPULAS = "<dáidit>" "<leat>"i "<soaitit>" "<veadjit>" ;

#!! * The set COPULAS is for predicative constructions
LIST COPULAS = "<dáidit>" "<gártat>" "<leat>"i "<soaitit>" "<šaddat>" "<orrut>" "<veadjit>"  ;
#  "bissut" ?
# 'Dáidit' can appear without 'leat'.

SET NOT-COP-V = V - COPULAS ;

SET MAIN-V = V - FAUXV ;

# All active verbs with a TV tag, including AUX-OR-MAIN.

LIST V-TRANS = (V TV) (IV Der/ahtti) (IV Der/h) ;


SET TRANS-V = V-TRANS - Der/Pass + REAL-V ;

#!! * NP sets defined according to their morphosyntactic features
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -


LIST N-SG-NOM = (N Sg Nom) ;

SET HEAD-N = N - Cmp/Splitr ;

SET HEAD-N-NOM = (N Nom) - Cmp/Splitr ;

SET SUBJECTHEAD = N OR A OR Pron - Refl ; # These, can be subject heads

SET NP = N OR A ; # anything that can take except numerals
SET NP-HEAD = Pron OR HEAD-N - ("<buorre>") ;
SET NP-HEAD-SG = SGPRON OR (N Sg) OR (A Sg) - Cmp/Splitr - Dem - ("<buorre>") ;
SET NP-HEAD-PL = PLPRON OR (N Pl) OR (A Pl) - Cmp/Splitr - Dem - ("<buorre>") ;
SET NP-HEAD-SG-NOM = SGPRON + Nom OR (N Sg Nom) OR (A Sg Nom) - ("<buorre>") - Cmp/Splitr ;
SET NP-HEAD-PL-NOM = PLPRON + Nom OR (N Pl Nom) OR (A Pl Nom) - Cmp/Splitr - ("<buorre>") ;
SET NP-HEAD-NOM = NP-HEAD-SG-NOM OR NP-HEAD-PL-NOM ;
SET NP-HEAD-ACC = (Pron Acc) OR (N Acc) OR (A Acc) - Cmp/Splitr - (Dem Attr) - ("<buorre>") ;
SET NP-HEAD-GEN = (Pron Gen) OR (N Gen) OR (A Gen) - Der/NomAct - Cmp/Splitr - (Dem Attr) - ("<buorre>") ;

#!! * The PRE-NP-HEAD family of sets

#!! These sets model noun phrases (NPs). The idea is to first define whatever can
#!! occur in front of the head of the NP, and thereafter negate that with the
#!! expression __WORD - premodifiers__.


SET PRE-NP-HEAD = (Prop Attr) OR (Prop @→N) OR (A Attr) OR (ABBR Attr) OR ("<buorre>")
OR (Pers Gen) OR (N Gen) OR (A Gen) OR ("<buot>") OR (Cmp) OR
Num OR Cmp/Splitr OR CC OR (Pron Dem) OR (Pron Refl Gen) OR (Indef Attr) OR
(PrfPrc @→N) OR PrsPrc OR (A Ord) OR (Num @→N) OR (A @→N) OR @→N OR @→A OR @→Pron OR @Num← OR (CC @CNP) OR (@→CC) OR (Actio Gen) OR (@Pron←) ;
# The strict version of items that can only be premodifiers, not parts of the predicate

#LIST PRE-NP-HEAD = @>N @>A @>Pron @Num< @CNP ;

SET PRE-NP-V = PrfPrc OR PrsPrc OR Der/NomAg OR Actio OR Der/NomAct OR (V A) OR (Prs Sg3) + Ind OR (Prs Sg1) + Ind OR (Imprt Du2) ;
# to be used together with PRE-NP-HEAD before @>N is disambiguated

SET NP-MEMBER = PRE-NP-HEAD OR N ;

SET PRE-A-N = (Pers Gen) OR (Pers Acc) OR (Pron Indef) OR Num OR (A Ord) OR (A Attr) OR (Pron Dem) OR (Pron Refl Gen) OR (Pron Refl Acc) ; # Acc pga av manglende disambiguering tidlig i fila

SET NOT-PRE-A-N = WORD - PRE-A-N ;

LIST PUNCT-LEFT = LEFT ;
LIST PUNCT-RIGHT = RIGHT ;

SET PRE-APP = COMMA OR PUNCT-LEFT OR PRE-NP-HEAD ;
# This set ist not only for what can
# stand in front of appositions but also
# Postmodifiers.



#!! The set __NOT-NPMOD__ is used to find barriers between NPs.
#!! Typical usage: ... (*1 N BARRIER NPT-NPMOD) ...
#!! meaning: Scan to the first noun, ignoring anything that can be
#!! part of the noun phrase of that noun (i.e., "scan to the next NP head")

SET NOT-NPMOD = WORD - PRE-NP-HEAD OR ABBR ;
# This is the previous NPNH  set.
# NOT-NPMOD  = "NOT-PRE-NP-HEAD"

SET NOT-NPMOD-ACC = NOT-NPMOD - Acc OR ABBR ;
SET NOT-NPMOD-ACC-ADV = NOT-NPMOD - Acc - Adv OR ABBR ;
# To be used in mappingrules, before the disambuation of Acc and Gen.

SET NOT-NPMODADV = WORD - PRE-NP-HEAD - Adv ;
# NOT-NPMODADV = "NOT-PRE-NP-HEAD-OR-ADV"
SET NOT-NPMODADV-INDEF = WORD - PRE-NP-HEAD - Adv - Indef ;
## NOT-NPMODADVI = "     ...-OR-INDEF"
SET NOT-NPMODADVII = WORD - PRE-NP-HEAD - Adv - Indef - Ill ;
# Illative indir.obj.
SET NOT-NPMODADVIIP = WORD - PRE-NP-HEAD - Adv - Indef - Ill - Pcle ;
# <== is this our NOT-NPMOD set?
SET NOT-NPMODCC = WORD - PRE-NP-HEAD - COMMA - @CNP ;
SET NAPP = WORD - PRE-APP ;



#!! * Miscellaneous sets
# ------------------
LIST Px = PxSg1 PxSg2 PxSg3 PxDu1 PxDu2 PxDu3 PxPl1 PxPl2 PxPl3 ;

LIST GASKAL = "<gaskal>" "<gaskkal>" "<gaskii>" "<gaskka>" "<gaskkas>" ;

# p-positions that like coordination

LIST TIME-PP = "<badjel>" "<čađa>" "<earret>" "<gaskkal>" "<guovddáš>" "<maŋŋel>" "<maŋŋil>" "<maŋŋá>" "<miehtá>" "<ovdal>" ;


SET NUM = Num - OKTA ;

# this set does not contain Ordinals, I am not sure if that is necessary.

SET NOT-NUM = WORD - Num ;

LIST MANGA = "<máŋga>" "<galle>" ;
# Not referred to by any rule.

SET CARDINALS = Num - Ord - MANGA ;

SET NOT-CC = WORD - CC ;

SET NOT-PCLE = WORD - Pcle ;

LIST COMPAR = "<dávji>" "<eanet>" "<earalágan>" "<eará>" "<earret>" "<seammás>" "<seammalágan>" "<seamma láhkái>" ;

# These combine with "go" Pcle, but COMPAR stands for 'Comparison' rather than
# 'Comparative'.

LIST CONTRA = "<muhto>" ;
# In lean muitalan, muhto dál muitalan.

LIST PROSEANTA = "<proseanta>" "<%>" ;

SET REAL-CLB = CLB - COMMA ;


SET NOT-INITIAL-CC = WORD - INITIAL - CC ;



#!! * Border sets and their Complements
# ---------------------------------

SET CP = Interr OR Rel OR MO ;

LIST BOUNDARYSYMBOLS = "<\;>" "<:>" "<->" "<–>" ;

SET S-BOUNDARY = CP OR BOUNDARYSYMBOLS OR ("<muhto>") OR ("<de>" Adv) OR (Neg Sup) OR @CVP OR ("<vel>" Adv Qst) ;
# does not include CS, because of "go" in questions, before it is disambugated.
# includes CP
# this one includes @CVP, the conjunction which actually connects two sentences (each with a finite verb) to each other,
# and not @CNP, which coordinates internal NP-/AdvP-/AP ... coordination
# To be used only AFTER the disambiguation of @CVP and @CNP taking place in the chapter RIGHT before "Disambiguating pronouns"


SET BOC = S-BOUNDARY OR BOS ;
SET BOC-PUNCT = BOC - ("-") - ("–") ;
SET EOC = S-BOUNDARY OR EOS ;

SET NP-BOUNDARY = BOS OR EOS OR REAL-CLB OR VFIN OR Inf OR (Actio Ess) OR ConNeg OR VGen OR Sup OR PPRON-NOT-GEN OR Recipr OR Po OR Pr OR Pcle OR Interj OR CS OR  @CVP ;

SET APP-BOUNDARY = REAL-CLB OR VFIN OR Inf OR (Actio Ess) OR ConNeg OR VGen OR Sup OR Recipr OR Po OR Pr OR Pcle OR Interj OR CS OR PrfPrc - @→N ;
# A special barrier used with mapping of appositions.

# This set contains FMAINV with @, which means that it functions for all kind of mainverbs after the verb-mapping rules
SET SV-BOUNDARY = S-BOUNDARY OR Inf - FAUXV OR Sup OR FMAINV ;
# VFIN-NOT-AUX ;
# should be MAIN-V linked to VFIN-aux to the LEFT. (cg-3)
# This set is ment to use in rules for disambiguating due to verbs or verbsets. It contents @.

SET SVF-BOUNDARY = S-BOUNDARY OR VFIN ;

# This set is ment to use in rules for disambiguating due to verbs or verbsets.
# Here we search for either an S-BOUNDARY or a finite verb, either aux or main.

LIST ADVLCASE = Ill Loc Com Ess ine ela ;
LIST CASE = Nom Acc Gen Ill Loc Com Ess ine ela ;


#!! * Syntactic sets
# --------------

LIST HEAD = @SUBJ→ @←SUBJ @SUBJ @OBJ @OBJ→ @←OBJ @ADVL @ADVL→ @←ADVL @SPRED→ @←SPRED @SPRED @OPRED→ @←OPRED @OPRED @-FSUBJ→ @-FOBJ→ @-FADVL→ @-FSPRED→ @-F←SUBJ @-F←OBJ @-F←ADVL @-F←SPRED ;

### Definitions from the rule section:

SET OLLU = ("<ollu>"i) OR  ("<olu>"i) ;
LIST CURRENCY = "<denara>" "<dollár>" "<euro>" "<kruvdnu>" "<kr>" "<ru>" "<rubel>" "<ruvdno>" "<ruvdnu>" "<¢>" "<€>" "<$>" ;
LIST VUOJAN-ANI-WORDS = ("<čearpmat>"i) ("<varit>"i) ("<vuoitit>"i) ("<boazu>"i) ("<gabba>"i) ("<reahka>"i) ("<juovlanigá>"i) ("<juovlastállu>"i) ("<heargi>"i) ("<sprinta>"i) ("<eallu>"i) ("<SHL-#máilmmicup"i) ("<reahkavuodjin>"i) ("<gonagasgilvu>"i) ("<SVL-hearge#cup>"i) ("<heargevuodjingilvu>"i) ;
LIST VUOJAN-ANI-ADJ = ("<sávri>"i) ("<buorre>"i) ("<sápmi>"i) ("<falli>"i) ("<nuorra>"i) ("<beakkán>"i) ;
LIST VUOJAN-ANI-V = ("<biebmat>"i) ("<hárjehahttit>"i) ("<njuovvat>"i) ("<ruohttat>"i) ("<vuoitit>"i);
LIST loc/adv = Loc Adv ;
SET NT-BEAL-NUM-NOB =  ("ni og et halvt"i) OR ("åtte og et halvt"i) OR ("sju og et halvt"i) OR ("seks og et halvt"i) OR ("fem og et halvt"i) OR ("fire og et halvt"i)  OR ("tre og et halvt"i) OR ("to og et halvt"i) ;
SET BEAL-NUM-SME =  ("<beallogát>"i) OR ("<bealovccát>"i) OR  ("<bealgávccát>"i) OR  ("<bealčihččet>"i) OR ("<bealguđat>"i) OR ("<bealviđat>"i) OR ("<bealnjealját>"i)  OR ("<bealgoalmmát>"i) ;
LIST IJ-TIME = ("<beaivi>"i) ("<eahket>"i) ("<iđit>"i)  ("<idja>"i)   ("<vahkkoloahppa>"i) ("<beassážat>"i) ("<juovllat>"i) ;


#!! These were the set types.

BEFORE-SECTIONS

### pardef implementation
### Many pardefs are probably not necessary. Thus, information about gender is harvested by the fst itself, directly from the Norwegian lemma. And __verb and __adj should just be general rules for all Norwegian V and ADJ, I guess.

SUBSTITUTE (Pl) (Sg) TARGET (N) (0 (<sg^n>)) ; # sg__n

### articles

ADDCOHORT ("<en>" "en" <NO:en> <insert> Art Indef @>N) BEFORE A OR (N Sg) - (Def) (*1S (N Sg) - (Def) BARRIER (*) - det - A - Gen) (NOT -1 det OR A OR Gen) ; # simplified example for indef. article insertion 

### subordinating conjunctions / infinitive markers

ADDCOHORT ("<for=å>" "for=å" <NO:for=å> <insert> Sub @SUB) BEFORE (Inf @ADVL) ;
SETPARENT (<insert> Sub) TO (*1 V) ;

SUBSTITUTE (Sg3) (*) TARGET V + Sg3;
SUBSTITUTE (IV) (*) TARGET IV ;
SUBSTITUTE (TV) (*) TARGET TV ;

END
