SOFT-DELIMITERS = "<,>" cm ;
DELIMITERS = "<.>" "<:>" "<!>" "<?>" "<...>" "<|>" "<$.>" "<$:>" "<$!>" "<$?>" "<$|>" sent ;

SETS




# I define end of clause and beginning of clause in a way so that the file
# may be read both by the CG-2 and the vislcg formalisms.

LIST BOS = (>>>) (<s>) (sent) ;
LIST EOS = (<<<) (</s>) (sent) ;

# CG3 doesn´t function without >>> and <<< !

# Tags declared as single-membered LISTs
# ======================================

# Parts of speech
# ---------------

LIST N = N ;
LIST A = A ;
LIST Adv = Adv ADV ;
LIST V = V ;
LIST Pron = Pron PRON ;
LIST Det = Det DET ;
LIST Indef = Indef ;

LIST CS = CS ;
LIST CC = CC ;
LIST Po = Po ;
LIST Pr = Pr ;
LIST Pcle = Pcle ;
LIST Num = Num NUM ;
LIST Interj = Interj ;
LIST ABBR = ABBR ;
LIST ACR = ACR ;
LIST Arab = Arab ;

LIST CLB = CLB sent cm ;
LIST LEFT = LEFT lquot ;
LIST RIGHT = RIGHT rquot ;
LIST web = web ;
LIST PUNCT = PUNCT guio quot ;

LIST COMMA = "," ;
LIST ¶ = ¶;

#!! * Sets for POS sub-categories
# ------------------

LIST Pers = Pers ;
LIST Dem = Dem ;
LIST Interr = Interr ;
LIST Ind = Ind ;

LIST Recipr = Recipr ;
LIST Refl = Refl ;
LIST Rel = Rel ;

LIST Coll = Coll ;
LIST NomAg = NomAg ;
LIST G3 = G3 ;
LIST Prop = Prop ;

LIST Nom = Nom ;
LIST Acc = Acc ;
LIST Gen = Gen ;
LIST Ill = Ill ;
LIST Loc = Loc ;
LIST Com = Com ;
LIST Ess = Ess ;

LIST Case = Nom Acc Gen Ill Loc Com Ess ;

#!! * Sets for Semantic tags
# -------------

LIST Sem/Act = Sem/Act Sem/Act_Fruit Sem/Act_Group Sem/Act_Plc Sem/Act_Route Sem/Act_Tool-it ; #Activity #Ollet guhká dainna X-Com (Veaigin bisánasttii Ristenge geahččat, man guhkás Lemet-gázzi juo ledje ollen dainna divvunbargguin.) # bargu
LIST Sem/Amount = Sem/Amount Sem/Amount_Build Sem/Amount_Semcon;
LIST Sem/Ani = Sem/Ani Sem/Ani-fish Sem/Ani_Body-abstr_Hum Sem/Ani_Group_Prod-vis ; #Animal #bivdit X-Loc veahki.
LIST Sem/Ani-fish = Sem/Ani-fish ; 
LIST Sem/Aniprod = Sem/Aniprod Sem/Aniprod_Hum Sem/Aniprod_Obj-clo Sem/Aniprod_Perc-phys Sem/Aniprod_Plc Sem/Aniprod_Plc_Route ;
LIST Sem/Body = Sem/Body Sem/Body_Body-abstr Sem/Body_Clth Sem/Body_Food Sem/Body_Group_Hum Sem/Body_Hum Sem/Body_Mat Sem/Body_Measr Sem/Body_Obj_Tool-catch Sem/Body_Plc Sem/Body_Plc-elevate Sem/Body_Time Sem/Body_Group_Hum_Time ; #Body #Buohkat ceggejedje gieđa. Mon gal attán dutnje bealji vuollái. Go duos dás speččohallá bahtii de gal buollá bargomokta! Čuolda basttii sus alemii.
LIST Sem/Body-abstr = Sem/Ani_Body-abstr_Hum Sem/Body-abstr Sem/Body-abstr_Feat-cogn Sem/Body-abstr_Prod-audio_Semcon Sem/Body_Body-abstr ; # jierbmi, siellu, ...
LIST Sem/Build = Sem/Amount_Build Sem/Ani_Build Sem/Ani_Build_Hum_Txt Sem/Build Sem/Build_Build-part  Sem/Build_Clth-part Sem/Build_Edu_Org Sem/Build_Event_Org Sem/Build_Org Sem/Build_Route Sem/Build_Obj ; #Build #Sem #Syn: hukset X deike
LIST Sem/Build-part = Sem/Ani_Build-part Sem/Build-part Sem/Build-part_Cat Sem/Build-part_Cat_Ctain Sem/Build-part_Ctain Sem/Build-part_Ctain_Mat Sem/Build-part_Plc Sem/Build_Build-part ; #Building part, e.g. room #Sem:+con,+count,-mova #Syn: mannat X sisa
LIST Sem/Cat = Sem/Build-part_Cat Sem/Build-part_Cat_Ctain Sem/Build-part_Cat_Ctain_Mat Sem/Cat Sem/Cat_Group_Hum Sem/Cat_Group_Hum_Plc ;
LIST Sem/Clth = Sem/Body_Clth Sem/Clth Sem/Clth_Hum Sem/Clth_Obj-clo ; #Clothes #Sem #bidjat X ala/badjelii.
LIST Sem/Clth-jewl = Sem/Clth-jewl Sem/Clth-jewl_Curr Sem/Clth-jewl_Curr_Obj Sem/Clth-jewl_Curr_Obj_Org Sem/Clth-jewl_Fruit Sem/Clth-jewl_Money Sem/Clth-jewl_Plant Sem/Org_Clth-jewl  Sem/Clth-jewl_Org ; #Clothes jewelry #Synt: bidjat X ala. *bidjat X badjelii.
LIST Sem/Clth-part  = Sem/Build_Clth-part Sem/Clth-part Sem/Clth-jewl_Curr_Obj  ;
LIST Sem/Ctain = Sem/Build-part_Cat_Ctain Sem/Build-part_Cat_Ctain_Mat Sem/Build-part_Ctain Sem/Build-part_Ctain_Mat Sem/Build-part_Ctain_Obj Sem/Ctain Sem/Ctain_Feat-phys Sem/Ctain_Furn Sem/Ctain_Plc Sem/Ctain_Tool Sem/Ctain_Tool-measr ; #Container #Sem:+mova #Syn: bidjat juoidá X sisa
LIST Sem/Ctain-abstr = Sem/Ctain-abstr Sem/Ctain-abstr_Org ;
LIST Sem/Ctain-clth = Sem/Ctain-clth Sem/Ctain-clth_Plant Sem/Ctain-clth_Veh ;
LIST Sem/Curr = Sem/Clth-jewl_Curr Sem/Clth-jewl_Curr_Obj Sem/Clth-jewl_Curr_Obj_Org Sem/Curr Sem/Curr_Org; #Syn: Mun mávssan dasa 100 X. Dat máksá 100 X.
LIST Sem/Date = Sem/Date ;
LIST Sem/Dance = Sem/Dance Sem/Dance_Org Sem/Dance_Prod-audio ; #Ollugat dánso swinga lávddi ovddabeale.
LIST Sem/Dir = Sem/Dir ;
LIST Sem/Domain = Sem/Domain Sem/Domain_Food-med Sem/Domain_Hum Sem/Domain_Prod-audio;
LIST Sem/Drink = Sem/Drink Sem/Drink_Plant ;
LIST Sem/Edu = Sem/Build_Edu_Org Sem/Edu Sem/Edu_Event Sem/Edu_Geom Sem/Edu_Group_Hum Sem/Edu_Hum Sem/Edu_Mat Sem/Edu_Org ; # vázzit X-Acc. addit X-Acc. X:s lea beroštupmi.
LIST Sem/Event = Sem/Build_Event_Org Sem/Edu_Event Sem/Event Sem/Event_Food Sem/Event_Hum Sem/Event_Plc Sem/Event_Plc-elevate Sem/Event_Time ; # X maŋŋel mun ferten vuolgit. X:s leat ollu olbmot. *Lean leamaš doppe X:Gen.
LIST Sem/Feat-cogn = Sem/Body-abstr_Feat-cogn  Sem/Feat-cogn ; # oaidnu, oamedovdu, viissisvuohta
LIST Sem/Feat = Sem/Feat Sem/Feat_Plant ; #many -vuohta and -dat nouns
LIST Sem/Feat-measr = Sem/Feat-measr Sem/Feat-measr_Plc ;
LIST Sem/Feat-phys = Sem/Ctain_Feat-phys Sem/Feat-phys  Sem/Feat-psych_Plc Sem/Feat-phys_Tool-write Sem/Feat-phys_Veh Sem/Feat-phys_Wthr ;
LIST Sem/Feat-psych = Sem/Feat-psych Sem/Feat-psych_Hum ; #not touchable, not countable ("beroštupmi" "gáđašvuohta" "mokta" "sáhkkiivuohta") - Mus lea X,  Son lea X-adj persovdna # muitu
LIST Sem/Fem = Sem/Fem  ;
LIST Sem/Food = Sem/Body_Food Sem/Event_Food Sem/Food Sem/Food_Obj-surfc Sem/Food_Perc-phys Sem/Food_Plant Sem/Food_Sign ; #Syn: bassit/borrat/sohpat X-Acc. mon im læk borram dam guolest. mun boran iđitbiepmu. mus lea iđitbiebmu fárus. birgui borastuvvat
LIST Sem/Food-med = Sem/Domain_Food-med Sem/Food-med ;
LIST Sem/Fruit = Sem/Act_Fruit Sem/Clth-jewl_Fruit Sem/Fruit Sem/Fruit_Hum ;
LIST Sem/Furn = Sem/Ctain_Furn Sem/Furn ; #Syn: bidjat X vissui: čohkkedit X ala
LIST Sem/Game = Sem/Game Sem/Game_Obj-play ;
LIST Sem/Geom = Sem/Edu_Geom Sem/Geom Sem/Geom_Hum_Plc Sem/Geom_Obj ;
LIST Sem/Group = Sem/Group Sem/Act_Group Sem/Ani_Group Sem/Ani_Group_Hum Sem/Ani_Group_Prod-vis Sem/Body_Group_Hum Sem/Body_Group_Hum_Time Sem/Cat_Group_Hum Sem/Cat_Group_Hum_Plc Sem/Edu_Group_Hum Sem/Group_Hum Sem/Group_Hum_Org Sem/Group_Hum_Plc Sem/Group_Hum_Prod-vis Sem/Group_Hum_Time Sem/Group_Org Sem/Group_Prod-vis Sem/Group_Sign Sem/Group_Txt ; #Bárdni lea riggámus sogas. -Plc
LIST Sem/Hum = Sem/Hum Sem/Hum-abstr Sem/Hum-prof Sem/Ani_Body-abstr_Hum Sem/Ani_Build_Hum_Txt Sem/Ani_Group_Hum Sem/Ani_Hum Sem/Ani_Hum_Plc Sem/Ani_Hum_Time Sem/Aniprod_Hum Sem/Body_Group_Hum Sem/Body_Group_Hum_Time Sem/Body_Hum Sem/Cat_Group_Hum Sem/Cat_Group_Hum_Plc Sem/Clth_Hum Sem/Domain_Hum Sem/Edu_Group_Hum Sem/Edu_Hum Sem/Event_Hum Sem/Feat-psych_Hum Sem/Fruit_Hum Sem/Geom_Hum_Plc Sem/Group_Hum Sem/Group_Hum_Org Sem/Group_Hum_Plc Sem/Group_Hum_Prod-vis Sem/Group_Hum_Time Sem/Hum_Lang Sem/Hum_Lang_Plc Sem/Hum_Lang_Time Sem/Hum_Mat_Tool Sem/Hum_Obj Sem/Hum_Org Sem/Hum_Sign Sem/Hum_Plant Sem/Hum_Plc Sem/Hum_Tool Sem/Hum_Tool-it Sem/Hum_Veh Sem/Hum_Wthr  ; #Human
LIST Sem/Hum-kin = Sem/Hum-kin ; #Human kinship
LIST Sem/Hum-abstr = Sem/Hum-abstr ;
LIST Sem/Ideol = Sem/Ideol ;
LIST Sem/Lang = Sem/Lang ; #Syn: hállat X:illatiiva. Son hállá X:Acc. Jorgalan dán X:lokatiiva Y:illatiiva.
LIST Sem/Mal = Sem/Mal ;
LIST Sem/Mat = Sem/Body_Mat Sem/Build-part_Cat_Ctain_Mat Sem/Build-part_Ctain_Mat Sem/Build-part_Ctain_Obj Sem/Edu_Mat Sem/Hum_Mat_Tool Sem/Mat Sem/Mat_Plant Sem/Mat_Txt ; # Material #Sem: cannot pass through it without destroying it, ráhkadit juoidá X:s. Niibi lea X-Loc-Sg. #Dán báhkis šaddá čáppa gohppu.
LIST Sem/Measr = Sem/Body_Measr Sem/Measr Sem/Measr_Time Sem/Measr_Sign Sem/Measr_Obj_Time ; # Lea lassánan 100 X-Loc.
LIST Sem/Money = Sem/Clth-jewl_Money Sem/Money Sem/Money_Obj Sem/Money_Org Sem/Money_Part Sem/Money_Txt ; #Mun mávssán X. Mii ávžžuhit vuovdit alimus X-Ill (haddái). ruhtadit doaibmabušeahtain. vuovdit/bidjat ruđast - selge for penger
LIST Sem/Obj = Sem/Body_Obj_Tool-catch Sem/Build-part_Ctain_Obj Sem/Measr_Obj_Time Sem/Clth-jewl_Curr_Obj Sem/Clth-jewl_Curr_Obj_Org Sem/Geom_Obj Sem/Hum_Obj Sem/Money_Obj Sem/Obj Sem/Obj_Semcon Sem/Obj_Sign Sem/Obj_State Sem/Obj_Symbol Sem/Obj_Veh Sem/Build_Obj Sem/Obj-com ; # concrete object, movable #Syn: Mun guoskkán X-Acc. Dá livčče dutnje X-Nom (sabehat). čievččastit geađggi johkii
#LIST Sem/Obj-com = Sem/Obj-com ; #communication object #hálan telefuvnnas/e-poasttas #sádden X bokte
LIST Sem/Obj-clo = Sem/Aniprod_Obj-clo Sem/Clth_Obj-clo Sem/Obj-clo ; #bidjat juoidá Obj-clo sisa
LIST Sem/Obj-cogn = Sem/Obj-cogn ;
LIST Sem/Obj-el = Sem/Obj-el ; # moveable, countable, touchable, electrical objects that can be turned on and of,  mus lea X alde, mun bijan X ala
LIST Sem/Obj-ling = Sem/Obj-ling ;
LIST Sem/Obj-play = Sem/Obj-play Sem/Game_Obj-play Sem/Obj-play_Sport ;
LIST Sem/Obj-rope = Sem/Obj-rope ;
LIST Sem/Obj-surfc = Sem/Obj-surfc ;
LIST Sem/Org = Sem/Build_Edu_Org Sem/Build_Event_Org Sem/Build_Org Sem/Ctain-abstr_Org Sem/Curr_Org Sem/Dance_Org Sem/Edu_Org Sem/Group_Hum_Org Sem/Group_Org Sem/Hum_Org Sem/Money_Org Sem/Org Sem/Org_Clth-jewl Sem/Org_Prod-cogn Sem/Org_Rule Sem/Org_Txt Sem/Org_Veh Sem/Clth-jewl_Org org ;
LIST Sem/Part = Sem/Money_Part Sem/Part Sem/Part_Prod-cogn Sem/Part_Substnc ; # bealli, oassi
LIST Sem/Perc-cogn = Sem/Perc-cogn ;
LIST Sem/Perc-emo = Sem/Perc-emo ; #Sem not touchable, not countable ("ballu" "suhttu" "vaši") -  Mun dovddan garra X. Mun lean X+Loc # moraš
LIST Sem/Perc-phys = Sem/Aniprod_Perc-phys Sem/Food_Perc-phys Sem/Perc-phys Sem/Perc-emo_Wthr ; # anistupmi, oaidnu
LIST Sem/Perc-psych = Sem/Perc-psych ;
LIST Sem/Phonenr = Sem/Phonenr ;
LIST Sem/Plant = Sem/Clth-jewl_Plant Sem/Ctain-clth_Plant Sem/Drink_Plant Sem/Feat_Plant Sem/Food_Plant Sem/Hum_Plant Sem/Mat_Plant Sem/Plant Sem/Plant_Tool Sem/Plant_Tool-measr ; #čáhccet X-Acc #X-Nom šaddet
LIST Sem/Plant-part = Sem/Plant_Plant-part Sem/Plant-part ; #čáhccet X-Acc #X-Nom šaddet
LIST Sem/Plc = Sem/Act_Plc Sem/Ani_Hum_Plc Sem/Ani_Plc Sem/Ani_Plc_Txt Sem/Aniprod_Plc Sem/Aniprod_Plc_Route Sem/Body_Plc Sem/Build-part_Plc Sem/Cat_Group_Hum_Plc Sem/Ctain_Plc Sem/Event_Plc Sem/Event_Plc-elevate Sem/Feat-measr_Plc Sem/Feat-psych_Plc Sem/Geom_Hum_Plc Sem/Group_Hum_Plc Sem/Hum_Lang_Plc Sem/Hum_Plc Sem/Plc Sem/Plc_Pos Sem/Plc_Route Sem/Plc_Semcon Sem/Plc_State Sem/Plc_Substnc Sem/Plc_Substnc_Wthr Sem/Plc_Txt Sem/Plc_Time Sem/Plc_Time_Wthr Sem/Plc_Tool-catch Sem/Plc_Wthr ;
LIST Sem/Plc-abstr = Sem/Plc-abstr Sem/Plc-abstr_Rel_State Sem/Plc-abstr_Route ;
LIST Sem/Plc-elevate = Sem/Body_Plc-elevate Sem/Plc-elevate ;
LIST Sem/Plc-line = Sem/Plc-line ;
LIST Sem/Plc-water = Sem/Plc-water ;
LIST Sem/Pos = Sem/Plc_Pos Sem/Pos ; #Social position (job etc.)
LIST Sem/Process = Sem/Process ;
LIST Sem/Prod = Sem/Prod ; #jáhkku
LIST Sem/Prod-audio = Sem/Body-abstr_Prod-audio_Semcon Sem/Dance_Prod-audio Sem/Domain_Prod-audio Sem/Prod-audio Sem/Prod-audio_Txt ; #attáldat
LIST Sem/Prod-cogn = Sem/Org_Prod-cogn Sem/Part_Prod-cogn Sem/Prod-cogn Sem/Prod-cogn_Txt ; # muittuhus, ipmárdus, jáhkku, osku, vuordámuš, viisodat? diehtu?
LIST Sem/Prod-ling = Sem/Prod-ling ;
LIST Sem/Prod-vis = Sem/Ani_Group_Prod-vis Sem/Group_Hum_Prod-vis Sem/Group_Prod-vis Sem/Prod-vis ;
LIST Sem/Rel = Sem/Plc-abstr_Rel_State Sem/Rel ;
LIST Sem/Route = Sem/Act_Route Sem/Aniprod_Plc_Route Sem/Build_Route Sem/Plc-abstr_Route Sem/Plc_Route Sem/Route ;
LIST Sem/Rule = Sem/Org_Rule Sem/Rule ; 
LIST Sem/Semcon = Sem/Amount_Semcon Sem/Body-abstr_Prod-audio_Semcon Sem/Obj_Semcon Sem/Plc_Semcon Sem/Semcon Sem/Semcon_Txt ; # semantic concept
LIST Sem/Sign = Sem/Group_Sign  Sem/Food_Sign Sem/Hum_Sign Sem/Obj_Sign Sem/Sign Sem/Measr_Sign ;
LIST Sem/Sport = Sem/Obj-play_Sport Sem/Sport ;
LIST Sem/State = Sem/Plc-abstr_Rel_State Sem/State Sem/Obj_State ; # lihkku, ipmilbalolašvuohta, mokta, váivi, váttisvuohta
LIST Sem/State-sick = Sem/State-sick Sem/State-sick_Substnc ;
LIST Sem/Substnc = Sem/Plc_Substnc Sem/Plc_Substnc_Wthr  Sem/State-sick_Substnc Sem/Substnc Sem/Substnc_Wthr Sem/Part_Substnc ; #Sem: can pass through it without destroying it
LIST Sem/Sur = Sem/Sur cog ;
LIST Sem/Symbol = Sem/Obj_Symbol Sem/Symbol ;
LIST Sem/Time =  Sem/Time Sem/Time-clock Sem/Ani_Hum_Time Sem/Ani_Time Sem/Body_Group_Hum_Time Sem/Body_Time Sem/Event_Time Sem/Group_Hum_Time Sem/Hum_Lang_Time Sem/Measr_Obj_Time Sem/Measr_Time Sem/Plc_Time Sem/Plc_Time_Wthr Sem/Time_Wthr ;
LIST Sem/Time-clock = Sem/Time-clock ;
LIST Sem/Tool = Sem/Act_Tool-it Sem/Ctain_Tool Sem/Hum_Mat_Tool Sem/Hum_Tool Sem/Hum_Tool-it Sem/Lang_Tool Sem/Plant_Tool Sem/Tool Sem/Tool-clean Sem/Ctain_Tool-measr Sem/Plant_Tool-measr Sem/Tool-measr Sem/Ctain_Tool-measr Sem/Plant_Tool-measr Sem/Tool-measr Sem/Tool-music Sem/Feat-phys_Tool-write Sem/Tool-write ;
LIST Sem/Tool-catch = Sem/Body_Obj_Tool-catch Sem/Plc_Tool-catch Sem/Tool-catch ;
LIST Sem/Tool-clean = Sem/Tool-clean ;
LIST Sem/Tool-it = Sem/Tool-it ;
LIST Sem/Tool-measr = Sem/Ctain_Tool-measr Sem/Plant_Tool-measr Sem/Tool-measr ;
LIST Sem/Tool-music = Sem/Tool-music ;
LIST Sem/Tool-write = Sem/Feat-phys_Tool-write Sem/Tool-write ;
LIST Sem/Txt = Sem/Ani_Build_Hum_Txt Sem/Ani_Plc_Txt Sem/Group_Txt Sem/Mat_Txt Sem/Money_Txt Sem/Org_Txt Sem/Plc_Txt Sem/Prod-audio_Txt Sem/Prod-cogn_Txt Sem/Semcon_Txt Sem/Txt ; #Syn: Čále dearvvuođaidat guossegirjámet! # das čuožžu
LIST Sem/Veh = Sem/Ani_Veh Sem/Ctain-clth_Veh Sem/Feat-phys_Veh Sem/Hum_Veh Sem/Obj_Veh Sem/Org_Veh Sem/Veh Sem/Veh-cntain ;	#Syn: Vuolggán X:Com
LIST Sem/Veh-cntain = Sem/Veh-cntain ; #Manan X sisa. #vuolggán X:Com.
LIST Sem/Wthr = Sem/Feat-phys_Wthr Sem/Hum_Wthr Sem/Perc-emo_Wthr Sem/Plc_Substnc_Wthr Sem/Plc_Time_Wthr Sem/Plc_Wthr Sem/Substnc_Wthr Sem/Time_Wthr Sem/Wthr ; #Sem: Birget X:Ess. jietna gullui X-Loc (balvvas). Olgun/Odne lea + Wthr-Nom. ?Man ollu lea Wthr-Nom? Wthr-Gen maŋŋel boahtá X. Makkár lea dálki/siivu? #Ex: árvi, borga, muohtá, čoaskadálki, baján, bievla, bodnejiekŋa, bivdodálki, gasis, guoldu
LIST Sem/Wpn = Sem/Wpn ; #oaggut oaggunstákkuin, goddit X+Com

LIST Sem/Date = Sem/Date ;
LIST Sem/Year = Sem/Year ;

SET FIRSTNAME = Sem/Mal OR Sem/Fem  ;

LIST TIME-N-SET = (N Sem/Time) ;
LIST NOT-TIME = "<dulvi>" "<lohpi>" "<vuorru>" ;
SET TIME-N = TIME-N-SET - NOT-TIME ;


LIST HUMAN = Sem/Hum Sem/Mal Sem/Fem Sem/Sur Pers NomAg Der/NomAg ;

SET LANGUAGE = Sem/Lang OR ("<.*giel>"ri N) OR ("<dárrolaš>"i) OR ("<nuortalaš>"i) OR ("<sápmelaš>"i) ;

#!! * Sets for Morphosyntactic properties
# --------------------------

LIST Nom = Nom ;
LIST Acc = Acc ;
LIST Gen = Gen ;
LIST Ill = Ill ;
LIST Loc = Loc ;
LIST Com = Com ;
LIST Ess = Ess ;

LIST Sg = Sg ;
LIST Pl = Pl ;

LIST Cmp/Splitr = Cmp/Splitr ;
LIST Cmp/Attr = Cmp/Attr ;

LIST Cmp = Cmp ;

LIST PxSg1 = PxSg1 ;
LIST PxSg2 = PxSg2 ;
LIST PxSg3 = PxSg3 ;

LIST PxDu1 = PxDu1 ;
LIST PxDu2 = PxDu2 ;
LIST PxDu3 = PxDu3 ;

LIST PxPl1 = PxPl1 ;
LIST PxPl2 = PxPl2 ;
LIST PxPl3 = PxPl3 ;
LIST PX = PxSg1 PxSg2 PxSg3 PxDu1 PxDu2 PxDu3 PxPl1 PxPl2 PxPl3 ;

LIST Comp = Comp ;
LIST Superl = Superl ;

LIST Attr = Attr ;
LIST Ord = Ord ;

LIST Qst = Qst ;

LIST Foc/Pos-ge = Foc/Pos-ge ;
LIST Foc/Neg-ge = Foc/Neg-ge ;

LIST IV = IV ;
LIST TV = TV ;

LIST pasv = pasv ;              # bidix-added
LIST Der/Pass = Der/PassL Der/PassS ;

LIST Prt = Prt;
LIST Prs = Prs ;


LIST Pot = Pot ;
LIST Cond = Cond ;

LIST Imprt = Imprt ;

LIST Sg1 = Sg1 ;
LIST Sg2 = Sg2 ;
LIST Sg3 = Sg3 ;

LIST Du1 = Du1 ;
LIST Du2 = Du2 ;
LIST Du3 = Du3 ;

LIST Pl1 = Pl1 ;
LIST Pl2 = Pl2 ;
LIST Pl3 = Pl3 ;

LIST Inf = Inf ;
LIST ConNeg = ConNeg ;
LIST Neg = Neg ;

LIST PrfPrc = PrfPrc ;
LIST VGen = VGen ;

LIST PrsPrc = PrsPrc ;


LIST Ger = Ger ;
LIST Sup = Sup ;
LIST Actio = Actio ;

LIST Der/PassL = Der/PassL ;
LIST Der/NomAg = Der/NomAg ;
LIST Actor = NomAg Der/NomAg ;
LIST VAbess = VAbess ;

# Derivation
# ----------

LIST Der/PassL = Der/PassL ;
LIST Der/Pass = Der/PassL Der/PassS ; 
LIST Der/NomAg = Der/NomAg ;   
LIST Actor = NomAg Der/NomAg ; 
LIST Der/adda = Der/adda ;		 
LIST Der/alla = Der/alla ;		 
LIST Der/easti = Der/easti ;	 
LIST Der/d = Der/d ;			 
LIST Der/eamoš = Der/eamoš ;	 
LIST Der/amoš = Der/amoš ;		 
LIST Der/geahtes = Der/geahtes ; 
LIST Der/h = Der/h ;				 
LIST Der/Car = Der/Car ;		 
LIST Der/Caus = Der/Caus ;		 
LIST Der/huhtti = Der/huhtti ;		
LIST Der/huvva = Der/huvva ;		
LIST Der/halla = Der/halla ;		
LIST Der/l = Der/l ;				
LIST Der/lasj = Der/lasj ;			
LIST Der/las = Der/las ;			
LIST Der/meahttun = Der/meahttun ;	
LIST Der/muš = Der/muš ;			
LIST Der/NomAct = Der/NomAct ;		
LIST Der/sasj = Der/sasj ;			
LIST Der/st = Der/st ;				
LIST Der/stuvva = Der/stuvva ;		
LIST Der/upmi = Der/upmi ;			
LIST Der/supmi = Der/supmi ;		
LIST Der/vuota = Der/vuota ;		
LIST Der/InchL = Der/InchL ;		
LIST Der/laakan = Der/laakan ;		
LIST Der/laagasj = Der/laagasj ;	
LIST Der/jagáš = Der/jagáš ;		
LIST Der/A = Der/A Der/A* ;			
LIST Der/Dimin = Der/Dimin ;		
LIST Der/viđá = Der/viđá ;			
LIST Der/viđi = Der/viđi ;			
LIST Der/veara = Der/veara ;		
LIST Der/AAdv = Der/AAdv ;			
LIST Der/Adv = Der/Adv ;			
LIST Der/dáfot = Der/dáfot ;			 
LIST Der/keahtta = Der/keahtta ;		
LIST Der/nuolus = Der/nuolus ;			
LIST Der/náittot = Der/náittot ;		
LIST Der/seagat = Der/seagat ;			
LIST Der/suttat = Der/suttat ;			
LIST Der/ár = Der/ár ;			 

# Syntactic tags
# --------------

LIST @+FAUXV = @+FAUXV ;
LIST @+FMAINV = @+FMAINV ;
LIST @-FAUXV = @-FAUXV ;

LIST @-FMAINV = @-FMAINV ;
LIST @-FSUBJ> = @-FSUBJ> ;
LIST @-F<OBJ = @-F<OBJ ;
LIST @-FOBJ> = @-FOBJ> ;
LIST @SPRED<OBJ = @SPRED<OBJ ;
LIST @-FADVL = @-FADVL ;

SET FOBJ = @-F<OBJ OR @-FOBJ> ;
SET FMAINV = @-FMAINV OR @+FMAINV OR (V @<OBJ) OR (V @N<) OR (V @A<) OR (V @<SUBJ) OR (V @<ADVL) ;
SET FAUXV = @-FAUXV OR @+FAUXV ;

LIST @ADVL = @ADVL @ADVL> @ADVL< @<ADVL @>ADVL @-F<ADVL ;
LIST @>ADVL = @>ADVL ;
LIST @ADVL< = @ADVL< ;
LIST @<ADVL = @<ADVL ;
LIST @ADVL> = @ADVL> @ADVL-ine> @ADVL> @ADVL-ine> ;
LIST @ADVL>CS = @ADVL>CS ;

LIST <hab> = <hab> (@ADVL> Pron Loc) (@<ADVL Pron Loc);
LIST <ext> = <ext> ;


LIST HAB-V-TAGS = Pl3 Sg3 ConNeg PrfPrc Inf ;

LIST @>N = @>N ;

LIST @N< = @N< ;


LIST @>A = @>A ;

LIST @P< = @P< ;

LIST @>P = @>P ;

LIST @HNOUN = @HNOUN ;
LIST @INTERJ = @INTERJ ;

LIST @>Num = @>Num;

LIST @Pron< = @Pron< ;
LIST @>Pron = @>Pron ;

LIST @Num< = @Num< ;

LIST @OBJ = @OBJ ;
LIST @<OBJ = @<OBJ ;
LIST @OBJ> = @OBJ> ;
LIST @OPRED = @OPRED ;
LIST @<OPRED = @<OPRED ;
LIST @OPRED> = @OPRED> ;
LIST @PCLE = @PCLE ;
LIST @COMP-CS< = @COMP-CS< ;

LIST @SPRED = @SPRED ;
LIST @<SPRED = @<SPRED ;
LIST @SPRED> = @SPRED> ;
LIST @SUBJ = @SUBJ @<SUBJ ;
LIST @<SUBJ = @<SUBJ ;
LIST @SUBJ> = @SUBJ> ;
SET SUBJ = @<SUBJ OR @SUBJ> OR @SUBJ ;
SET SPRED = @<SPRED OR @SPRED> OR @SPRED ;
SET OPRED = @<OPRED OR @OPRED> OR @OPRED ;

LIST @PPRED = @PPRED ;

LIST @APP = @APP ;
LIST @APP-N< = @APP-N< ;
LIST @APP-Pron< = @APP-Pron< ;
LIST @APP>Pron = @APP>Pron ;
LIST @APP-Num< = @APP-Num< ;
LIST @APP-ADVL< = @APP-ADVL< ;
LIST @VOC = @VOC ;

LIST @CVP = @CVP ;
LIST @CNP = @CNP ;

SET OBJ = (@<OBJ) OR (@OBJ>) OR (@OBJ) OR (@-F<OBJ) OR (@-FOBJ>) ;
LIST <OBJ = @-F<OBJ @<OBJ ;
LIST OBJ> = @OBJ> @-FOBJ> ;

SET <OBJ-OTHERS = <OBJ OR Gen OR Nom OR Ess OR Loc OR Adv ;
SET OBJ>-OTHERS = OBJ> OR Gen OR Nom OR Ess OR Loc OR Adv  ;

SET SYN-V = V + SUBJ OR OBJ + V OR @ADVL + V OR (V @N<) OR (V @A<) OR V + SPRED OR (V @COMP-CS<) ;


LIST @X = @X ;


LIST OKTA = "<akta>" "<okta>";
LIST go = "<go>" ;


# Initials
# --------

LIST INITIAL = "adj" "b" "c" "d" "e" "f" "g" "h" "i" "j" "k" "l" "m"
"n" "o" "p" "q" "r" "s" "t" "u" "v" "w" "x" "y" "z"
"á" "æ" "ø" "å" "ö" "ä" ;

LIST CAP-INITIAL = "A" "B" "C" "D" "E" "F" "G" "H" "I" "J" "K" "L" "M"
"N" "O" "P" "Q" "R" "S" "T" "U" "V" "W" "X" "Y" "Z"
"Á" "Æ" "Ø" "Å" "Ö" "Ä" ;

# Tag sets
# ========
  SETS
# ========


# Word or not
# -----------
LIST WORD = N A Adv ADV V Pron PRON CS CC Po PO Pr PR Interj INTERJ Pcle PCLE Num NUM ABBR ACR PROP \? ;
# any word

SET REALWORD = WORD - Num - Ord ;

SET REALWORD-NOTABBR = WORD - Num - Ord - ABBR ;

SET WORD-NOTDE = WORD - ("<de>") ;

# Verb sets
# ---------

# Verbs and their Complements
# - - - - - - - - - - - - - -

SET NOT-VERB = WORD - V;

# Finiteness and mood
# - - - - - - - - - -

SET V-IND-FIN = Prs OR Prt ;
# Problem: "In boahtán" is an invisible Indative

SET V-MOOD = Ind OR Pot OR Imprt OR Cond OR (Neg Sup) ;

LIST GC = ("<gč>") ;

SET VFIN = GC OR V-MOOD - ConNeg ;

SET VFIN-POS = V-MOOD - ConNeg - Neg ;

SET VFIN-NOT-IMP = VFIN - Imprt ;

SET VFIN-NOT-NEG = VFIN - Neg ;
# this might be to strict, besides, "iige" can be written "ii ge"

SET NOT-PRFPRC = WORD - PrfPrc ;

# Person
# - - - -

LIST V-SG1 = (V Sg1) ;

LIST V-SG2 = (V Sg2) ;

LIST V-SG3 = (V Sg3) ;

LIST V-DU1 = (V Du1) ;

LIST V-DU2 = (V Du2) ;

LIST V-DU3 = (V Du3) ;

LIST V-PL1 = (V Pl1) ;

LIST V-PL2 = (V Pl2) ;

LIST V-PL3 = (V Pl3) ;


# Note that imperative verbs are not included in these sets!

# Some subsets of the VFIN sets
# - - - - - - - - - - - - - - -
SET V-SG = V-SG1 OR V-SG2 OR V-SG3 ;
SET V-DU = V-DU1 OR V-DU2 OR V-DU3 ;
SET V-PL = V-PL1 OR V-PL2 OR V-PL3 ;


SET V-DU-PL = V-DU1 OR V-DU2 OR V-DU3 OR V-PL1 OR V-PL2 OR V-PL3 ;
SET V-DU-PL-1 = V-DU1 OR V-PL1 ;
SET V-DU-PL-2 = V-DU2 OR V-PL2 ;
SET V-DU-PL-3 = V-DU3 OR V-PL3 ;

SET V-NOT-SG1 = VFIN-NOT-IMP - V-SG1 ;
SET V-NOT-SG2 = VFIN-NOT-IMP - V-SG2 ;
SET V-NOT-SG3 = VFIN-NOT-IMP - V-SG3 ;
SET V-NOT-DU1 = VFIN-NOT-IMP - V-DU1 ;
SET V-NOT-DU2 = VFIN-NOT-IMP - V-DU2 ;
SET V-NOT-DU3 = VFIN-NOT-IMP - V-DU3 ;
SET V-NOT-PL1 = VFIN-NOT-IMP - V-PL1 ;
SET V-NOT-PL2 = VFIN-NOT-IMP - V-PL2 ;
SET V-NOT-PL3 = VFIN-NOT-IMP - V-PL3 ;


SET V-1-2 = V-SG1 OR V-SG2 OR V-DU1 OR V-DU2 OR V-PL1 OR V-PL2 ;
SET V-3 = V-SG3 OR V-DU3 OR V-PL3 ;

# Sets consisting of LEAT
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
LIST LEAT = "<leat>"i ;

SET LEAT-FIN-NOT-IMP = LEAT - Imprt ;

LIST VPRFPRC = (V PrfPrc) ;
LIST LEATPRFPRC = ("<leat>"i PrfPrc) ;
SET PRC-NOT-LEAT = VPRFPRC - LEATPRFPRC ;
# In Order to distinguish between real leat-constructions and participles of other verbs
LIST HABEO-SG3 = ("<leat>"i p3 Sg) (V Neg p3 Sg) ("<šaddat>" p3 Sg) ;

LIST HABEO-PL3 = ("<leat>"i p3 Pl) (V Neg p3 Pl) ("<šadda>t" p3 Pl)  ;

SET HABEO-3 = HABEO-SG3 OR HABEO-PL3 ;

# Pronoun sets
# ------------

LIST MUN = (Pers Sg1 Nom) ;
LIST DON = (Pers Sg2 Nom) ;
LIST SON = ("son" Pers Sg3 Nom) ;
LIST MOAI = (Pers Du1 Nom) ;
LIST DOAI = (Pers Du2 Nom) ;
LIST SOAI = (Pers Du3 Nom) ;
LIST MII-PERS = (Pers Pl1 Nom) ;
LIST DII = (Pers Pl2 Nom) ;
LIST SII = ("son" Pers Pl3 Nom) ;

SET PPRON-NOM-NOT-DAT = MUN OR DON OR SON OR MOAI OR DOAI OR SOAI OR MII-PERS OR DII OR SII ;

SET PPRON-NOT-DAT = Pers - ("<dat>") ;

SET PPRON-DU-PL = MOAI OR DOAI OR SOAI OR MII-PERS OR DII OR SII ;
SET PPRON-PL = MII-PERS OR DII OR SII ;

SET PRON-DU = MOAI OR DOAI OR SOAI ;

SET PPRON-NOT-SII = MUN OR DON OR SON OR MOAI OR DOAI OR SOAI OR MII-PERS OR DII ;

LIST PPRON-GEN = (Sg1 Gen) (Sg2 Gen) (Sg3 Gen) (Du1 Gen) (Du2 Gen) (Du3 Gen)
	 (Pl1 Gen) (Pl2 Gen) (Pl3 Gen) ;

SET PPRON-NOT-GEN = Pers - PPRON-GEN ;

LIST DEM-SG = (Pron Dem Sg Nom) ;
LIST DEM-PL = (Pron Dem Pl Nom) ;
SET NOT-DEM = WORD - Dem ;

LIST SGPRON = (Pron Sg1) (Pron Sg2) (Pron Sg3) (Pron Sg) (Pron PxSg1) (Pron PxSg2) (Pron PxSg3) ;
LIST DUPRON = (Pron Du1) (Pron Du2) (Pron Du3) (Pron PxDu1) (Pron PxDu2) (Pron PxDu3) ;
LIST PLPRON = (Pron Pl1) (Pron Pl2) (Pron Pl3) (Pron Pl) (Pron PxPl1) (Pron PxPl2) (Pron PxPl3) ;
LIST DUPRON-NOTPX = (Pron Du1) (Pron Du2) (Pron Du3) ;

SET PRON-NOT-SG = DUPRON OR PLPRON ;

LIST DAT-PRON = ("<dat>") ("<dát>") ("<diet>") ("<duot>") ("<dot>") ;

LIST QUANT-PRON = "<ollu>" "<olu>" "<unnán>" "<váháš>" "<veaháš>" "<veháš>" ;
# This set is for choosing between Adv and Pron Indef.

# Adjectival sets and their complements
# -------------------------------------

SET NOT-A = WORD - A ;
SET NOT-A-COMMA = WORD - A - COMMA ;
SET NOT-Attr = WORD - Attr ;
SET NOT-A-PCLE = WORD - A - Pcle ;

SET NOT-A-ADV = WORD - A - Adv OR ("<maid>") ;

LIST NOMINAL-ADJ = "<guoktilaš>" "<lámis>" "<oasálaš>" ("<suddu>" Der/lasj) "<viissis>";

# and many others

# Adverbial sets and their Complements
# ------------------------------------

SET NOT-ADV-DE = WORD - Adv ;
SET NOT-ADV = NOT-ADV-DE OR ("<de>" Adv) OR CLB ;
SET NOT-ADV-PCLE = NOT-ADV - Pcle ;


LIST MO-MANge = "<goas>" "<gokko>" "<gos>" "<gosa>" "<govt>" "<makkár>" "<man>" "<manne>" ("<manin>" Adv) "<mo>" "<mot>" "<movt>" ("<nugo>" @CVP) (V Qst) ;

SET MO = MO-MANge - ("man" Foc/Neg-ge) ;

# Introduce finite clauses.

LIST PLACE-ADV = (Sem/Plc Adv) ;
# There will usually be A Gen in front.

LIST TIME-ADVL = (Sem/Time Gen) (Sem/Time Loc) ;

LIST TIME-ADV = (Adv Sem/Time) ;


LIST DOPPE = "<badjin>"i "<bajil>"i "<dakko>"i "<dá>"i "<dákko>"i "<dáppe>"i "<diekko>"i "<dieppe>"i "<do>"i "<dokko>"i "<doppe>"i "<duo>"i "<duokko>"i "<duoppe>"i "<olgun>"i ;
# Adverbs with a locativic form, but don´t get Loc as a tag.

LIST DOHKO = "<bajás>" "<bajit>" "<deike>" "<diehke>" "<diehko>" "<dohko>" "<duohko>" "<lulás>" "<olggos>" "<ruoktot>" "<sisa>" "<vuovdimassii>" ;
# Adverbs with a illativic form, but they don´t get Ill as a tag.


# Coordinators
# ------------

LIST NEGFOC = (Neg Foc/Neg-ge) ;

LIST XGO = "<dego>" "<dugo>" "<nugo>" "<seammaládjego>" "<seammaláhkaigo>" ;
# Compounds
LIST SEAMMAX = "<seamma ládje>" "<seamma láhkai>" ;
# Those combine with go

LIST MADE = "<mađe>" "<mađi>" ;
LIST DADE = "<dađe>" "<dađi>" ;


SET CRD = (@CNP) OR COMMA OR NEGFOC OR XGO OR ("_") OR ("-") OR DADE ;
# AFTER LCRD vs. GCRD disambiguation

LIST HAB-CASE = Loc  ;
LIST HAB-ACTOR-ALL = Sem/Hum Sem/Mal Sem/Sur Sem/Fem Sem/Ani Pers ("<gii>") (Pron Indef) Coll ;
SET HAB-ACTOR = HAB-ACTOR-ALL - ("<cihca>") ;
SET HAB-ACTOR-NOT-HUMAN = Sem/Org ;

# Sets of elements with common syntactic behaviour
# ================================================

SETS

#!! * Sets for verbs
# -----

LIST NOT-REAL-V = (Actio Nom) (Actio Gen) (Actio Loc) (Actio Com) PrsPrc ;

SET REAL-V = V - NOT-REAL-V ;
#!! ** V is all readings with a V tag in them, REAL-V should
#!! be the ones without an N tag following the V.
#!! The REAL-V set thus awaits a fix to the preprocess V ... N bug.


# The set REAL is smaller than COPULAS, made for verbs with PrfPrc Complements: Seammás REAL-COPULAS son dovdan iežas...
LIST REAL-COPULAS = "<dáidit>" "<leat>"i "<soaitit>" "<veadjit>" ;

#!! * The set COPULAS is for predicative constructions
LIST COPULAS = "<dáidit>" "<gártat>" "<leat>"i "<soaitit>" "<šaddat>" "<orrut>" "<veadjit>"  ;
#  "bissut" ?
# 'Dáidit' can appear without 'leat'.

SET NOT-COP-V = V - COPULAS ;

SET MAIN-V = V - FAUXV ;

# All active verbs with a TV tag, including AUX-OR-MAIN.

LIST V-TRANS = (V TV) (IV Der/ahtti) (IV Der/h) ;



SET TRANS-V = V-TRANS - Der/Pass + REAL-V ;

LIST WEATHER-VERBS ="bievlat" "ránodit" "soaiggáhallat" "biekkastit" "bivaldit" "borgat" "boŋkit" "bulžut" "buolaštit" "golihit" "firtet" "galbmit" "jiellat" "joavgat" "muohttit" "sevnnjodit" "veiggodit" "vuoisat" "álddagastit" "čuorpmastit" "čuvggodit" "šlahttit" "liehmudit" "čoskkiidit" "savdadit" "oaktut" "hieibmat" "golket" "storbmet" "bajánastit" "manihit" "bonjahit" "balvet" "dálvat" "arvit" "bieggat" "bávkit" "spoahkkit" "bávkkihit" "bieggaladdat" "biekkadit" ;


#!! * NP sets defined according to their morphosyntactic features
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -


LIST N-SG-NOM = (N Sg Nom) ;

SET HEAD-N = N - Cmp/Splitr ;

SET HEAD-N-NOM = (N Nom) - Cmp/Splitr ;

SET SUBJECTHEAD = N OR A OR Pron - Refl ; # These, can be subject heads

SET NP = N OR A ; # anything that can take except numerals
SET NP-HEAD = Pron OR HEAD-N - ("<buorre>") ;
SET NP-HEAD-SG = SGPRON OR (N Sg) OR (A Sg) - Cmp/Splitr - Dem - ("<buorre>") ;
SET NP-HEAD-PL = PLPRON OR (N Pl) OR (A Pl) - Cmp/Splitr - Dem - ("<buorre>") ;
SET NP-HEAD-SG-NOM = SGPRON + Nom OR (N Sg Nom) OR (A Sg Nom) - ("<buorre>") - Cmp/Splitr ;
SET NP-HEAD-PL-NOM = PLPRON + Nom OR (N Pl Nom) OR (A Pl Nom) - Cmp/Splitr - ("<buorre>") ;
SET NP-HEAD-NOM = NP-HEAD-SG-NOM OR NP-HEAD-PL-NOM ;
SET NP-HEAD-ACC = (Pron Acc) OR (N Acc) OR (A Acc) - Cmp/Splitr - (Dem Attr) - ("<buorre>") ;
SET NP-HEAD-GEN = (Pron Gen) OR (N Gen) OR (A Gen) - Der/NomAct - Cmp/Splitr - (Dem Attr) - ("<buorre>") ;

#!! * The PRE-NP-HEAD family of sets

#!! These sets model noun phrases (NPs). The idea is to first define whatever can
#!! occur in front of the head of the NP, and thereafter negate that with the
#!! expression __WORD - premodifiers__.


SET PRE-NP-HEAD = (Prop Attr) OR (Prop @>N) OR (A Attr) OR (ABBR Attr) OR ("<buorre>")
OR (Pers Gen) OR (N Gen) OR (A Gen) OR ("<buot>") OR (Cmp) OR
Num OR Cmp/Splitr OR CC OR (Pron Dem) OR (Pron Refl Gen) OR (Indef Attr) OR
(PrfPrc @>N) OR PrsPrc OR (A Ord) OR (Num @>N) OR (A @>N) OR @>N OR @>A OR @>Pron OR @Num< OR (CC @CNP) OR (@>CC) OR (Actio Gen) OR (@Pron<) ;
# The strict version of items that can only be premodifiers, not parts of the predicate

#LIST PRE-NP-HEAD = @>N @>A @>Pron @Num< @CNP ;

SET PRE-NP-V = PrfPrc OR PrsPrc OR Der/NomAg OR Actio OR Der/NomAct OR (V A) OR (Prs Sg3) + Ind OR (Prs Sg1) + Ind OR (Imprt Du2) ;
# to be used together with PRE-NP-HEAD before @>N is disambiguated

SET NP-MEMBER = PRE-NP-HEAD OR N ;

SET PRE-A-N = (Pers Gen) OR (Pers Acc) OR (Pron Indef) OR Num OR (A Ord) OR (A Attr) OR (Pron Dem) OR (Pron Refl Gen) OR (Pron Refl Acc) ; # Acc pga av manglende disambiguering tidlig i fila

SET NOT-PRE-A-N = WORD - PRE-A-N ;

LIST PUNCT-LEFT = LEFT ;
LIST PUNCT-RIGHT = RIGHT ;

SET PRE-APP = COMMA OR PUNCT-LEFT OR PRE-NP-HEAD ;
# This set ist not only for what can
# stand in front of appositions but also
# Postmodifiers.



#!! The set __NOT-NPMOD__ is used to find barriers between NPs.
#!! Typical usage: ... (*1 N BARRIER NPT-NPMOD) ...
#!! meaning: Scan to the first noun, ignoring anything that can be
#!! part of the noun phrase of that noun (i.e., "scan to the next NP head")

SET NOT-NPMOD = WORD - PRE-NP-HEAD OR ABBR ;
# This is the previous NPNH  set.
# NOT-NPMOD  = "NOT-PRE-NP-HEAD"

SET NOT-NPMOD-ACC = NOT-NPMOD - Acc OR ABBR ;
SET NOT-NPMOD-ACC-ADV = NOT-NPMOD - Acc - Adv OR ABBR ;
# To be used in mappingrules, before the disambuation of Acc and Gen.

SET NOT-NPMODADV = WORD - PRE-NP-HEAD - Adv ;
# NOT-NPMODADV = "NOT-PRE-NP-HEAD-OR-ADV"
SET NOT-NPMODADV-INDEF = WORD - PRE-NP-HEAD - Adv - Indef ;
## NOT-NPMODADVI = "     ...-OR-INDEF"
SET NOT-NPMODADVII = WORD - PRE-NP-HEAD - Adv - Indef - Ill ;
# Illative indir.obj.
SET NOT-NPMODADVIIP = WORD - PRE-NP-HEAD - Adv - Indef - Ill - Pcle ;
# <== is this our NOT-NPMOD set?
SET NOT-NPMODCC = WORD - PRE-NP-HEAD - COMMA - @CNP ;
SET NAPP = WORD - PRE-APP ;



#!! * Miscellaneous sets
# ------------------
LIST Px = PxSg1 PxSg2 PxSg3 PxDu1 PxDu2 PxDu3 PxPl1 PxPl2 PxPl3 ;

LIST GASKAL = "<gaskal>" "<gaskkal>" "<gaskii>" "<gaskka>" "<gaskkas>" ;

# p-positions that like coordination

LIST TIME-PP = "<badjel>" "<čađa>" "<earret>" "<gaskkal>" "<guovddáš>" "<maŋŋel>" "<maŋŋil>" "<maŋŋá>" "<miehtá>" "<ovdal>" ;


SET NUM = Num - OKTA ;

# this set does not contain Ordinals, I am not sure if that is necessary.

SET NOT-NUM = WORD - Num ;

LIST MANGA = "<máŋga>" "<galle>" ;
# Not referred to by any rule.

SET CARDINALS = Num - Ord - MANGA ;

SET NOT-CC = WORD - CC ;

SET NOT-PCLE = WORD - Pcle ;

LIST COMPAR = "<dávji>" "<eanet>" "<earalágan>" "<eará>" "<earret>" "<seammás>" "<seammalágan>" "<seamma láhkái>" ;

# These combine with "go" Pcle, but COMPAR stands for 'Comparison' rather than
# 'Comparative'.

LIST CONTRA = "<muhto>" ;
# In lean muitalan, muhto dál muitalan.

LIST PROSEANTA = "<proseanta>" "<%>" ;

SET REAL-CLB = CLB - COMMA ;


SET NOT-INITIAL-CC = WORD - INITIAL - CC ;



#!! * Border sets and their Complements
# ---------------------------------

SET CP = Interr OR Rel OR MO ;

LIST BOUNDARYSYMBOLS = "<\;>" "<:>" "<->" "<–>" ;

SET S-BOUNDARY = CP OR BOUNDARYSYMBOLS OR ("<muhto>") OR ("<de>" Adv) OR (Neg Sup) OR @CVP OR ("<vel>" Adv Qst) ;
# does not include CS, because of "go" in questions, before it is disambugated.
# includes CP
# this one includes @CVP, the conjunction which actually connects two sentences (each with a finite verb) to each other,
# and not @CNP, which coordinates internal NP-/AdvP-/AP ... coordination
# To be used only AFTER the disambiguation of @CVP and @CNP taking place in the chapter RIGHT before "Disambiguating pronouns"


SET BOC = S-BOUNDARY OR BOS ;
SET BOC-PUNCT = BOC - ("-") - ("–") ;
SET EOC = S-BOUNDARY OR EOS ;

SET NP-BOUNDARY = BOS OR EOS OR REAL-CLB OR VFIN OR Inf OR (Actio Ess) OR ConNeg OR VGen OR Sup OR PPRON-NOT-GEN OR Recipr OR Po OR Pr OR Pcle OR Interj OR CS OR  @CVP ;

SET APP-BOUNDARY = REAL-CLB OR VFIN OR Inf OR (Actio Ess) OR ConNeg OR VGen OR Sup OR Recipr OR Po OR Pr OR Pcle OR Interj OR CS OR PrfPrc - @>N ;
# A special barrier used with mapping of appositions.

# This set contains FMAINV with @, which means that it functions for all kind of mainverbs after the verb-mapping rules
SET SV-BOUNDARY = S-BOUNDARY OR Inf - FAUXV OR Sup OR FMAINV ;
# VFIN-NOT-AUX ;
# should be MAIN-V linked to VFIN-aux to the LEFT. (cg-3)
# This set is ment to use in rules for disambiguating due to verbs or verbsets. It contents @.

SET SVF-BOUNDARY = S-BOUNDARY OR VFIN ;

# This set is ment to use in rules for disambiguating due to verbs or verbsets.
# Here we search for either an S-BOUNDARY or a finite verb, either aux or main.

LIST ADVLCASE = Ill Loc Com Ess ine ela ;
LIST CASE = Nom Acc Gen Ill Loc Com Ess ine ela ;


#!! * Syntactic sets
# --------------

LIST HEAD = @SUBJ> @<SUBJ @SUBJ @OBJ @OBJ> @<OBJ @ADVL @ADVL> @<ADVL @SPRED> @<SPRED @SPRED @OPRED> @<OPRED @OPRED @-FSUBJ> @-FOBJ> @-FADVL> @-FSPRED> @-F<SUBJ @-F<OBJ @-F<ADVL @-F<SPRED ;

### Definitions from the rule section:

SET OLLU = ("<ollu>"i) OR  ("<olu>"i) ;
LIST CURRENCY = "<denara>" "<dollár>" "<euro>" "<kruvdnu>" "<kr>" "<ru>" "<rubel>" "<ruvdno>" "<ruvdnu>" "<¢>" "<€>" "<$>" ;
LIST VUOJAN-ANI-WORDS = ("<čearpmat>"i) ("<varit>"i) ("<vuoitit>"i) ("<boazu>"i) ("<gabba>"i) ("<reahka>"i) ("<juovlanigá>"i) ("<juovlastállu>"i) ("<heargi>"i) ("<sprinta>"i) ("<eallu>"i) ("<SHL-#máilmmicup"i) ("<reahkavuodjin>"i) ("<gonagasgilvu>"i) ("<SVL-hearge#cup>"i) ("<heargevuodjingilvu>"i) ;
LIST VUOJAN-ANI-ADJ = ("<sávri>"i) ("<buorre>"i) ("<sápmi>"i) ("<falli>"i) ("<nuorra>"i) ("<beakkán>"i) ;
LIST VUOJAN-ANI-V = ("<biebmat>"i) ("<hárjehahttit>"i) ("<njuovvat>"i) ("<ruohttat>"i) ("<vuoitit>"i);
LIST loc/adv = Loc Adv ;
SET NT-BEAL-NUM-NOB =  ("ni og et halvt"i) OR ("åtte og et halvt"i) OR ("sju og et halvt"i) OR ("seks og et halvt"i) OR ("fem og et halvt"i) OR ("fire og et halvt"i)  OR ("tre og et halvt"i) OR ("to og et halvt"i) ;
SET BEAL-NUM-SME =  ("<beallogát>"i) OR ("<bealovccát>"i) OR  ("<bealgávccát>"i) OR  ("<bealčihččet>"i) OR ("<bealguđat>"i) OR ("<bealviđat>"i) OR ("<bealnjealját>"i)  OR ("<bealgoalmmát>"i) ;
LIST IJ-TIME = ("<beaivi>"i) ("<eahket>"i) ("<iđit>"i)  ("<idja>"i)   ("<vahkkoloahppa>"i) ("<beassážat>"i) ("<juovllat>"i) ;





#!! These were the set types.

BEFORE-SECTIONS

### Number differences sme vs. nob (has to come early)

SUBSTITUTE:pl (Sg) (Pl Indef) TARGET N (c Num LINK NOT 0 (<NOB:[eé]n>r)) ;
SUBSTITUTE:pl (Sg) (Pl Indef) TARGET N (-1 Num LINK NOT 0 (<NOB:[eé]n>r)) ;

### implementing gender for nob noun translations

SUBSTITUTE:Msc (N) (N Msc) TARGET (".*/N[MX]"r) ;
SUBSTITUTE:Fem (N) (N Fem) TARGET (".*/NF"r) ;
SUBSTITUTE:Neu (N) (N Neu) TARGET (".*/NN"r) ;

SUBSTITUTE:trans ("([^<]+)/[A-Z]+"r) (VSTR:"$1") TARGET N ;
SUBSTITUTE:trans (<\(NOB:[^<]+\)/[A-Z]+>r) (VSTR:<$1>) TARGET N ;

### early suffixes

SUBSTITUTE ("([^<]+)"r) (VSTR:"liten/A=$1") TARGET (Der/Dimin N) ; # biillaš
SUBSTITUTE (<NOB:\(.*\)>r) (VSTR:<NOB:$1het>) TARGET (Der/vuota A) ; # ruonávuohta = grønnhet (hvis lex sel for A i dict)
SUBSTITUTE ("([^<]*)"r) (VSTR:"$1het") TARGET (Der/vuota A) ; # ruonávuohta = grønnhet


### tokenizing N-included ADJ

ADDCOHORT ("<$1>"v "$1"v <insert> A @>N) BEFORE ("([^<]+)/A=.*"r N) (NEGATE c ("$1"v A)) ; #hindrer samme adj to ganger, både i leksikon eller fra derivasjonsregel og som mod.adjektiv foran
SUBSTITUTE ("[^<]+/A=(.+)"r) (VSTR:"$1") TARGET N ;
SETPARENT (<insert> A @>N) TO (*1 N) ;

### the following taken from cglex.txt

REMOVE Cmp (0 N) ;


# Conditionalis: kunne vs skulle vs ville
SELECT:buoremus-livččii (Cond-ville) (-1 A + Superl) (0 ("<leat>"i)) ;
SELECT:sáhttit (Cond-skulle) (0 ("<sáhttit>"i)) ;
SELECT:fallback-kunne (Cond) ;

SET OLLU = ("<ollu>"i) OR  ("<olu>"i) ;

SELECT ("mye"i) (0 OLLU LINK *1 Sem/Wthr OR N + Sg BARRIER N) ;
SELECT ("mye"i) (0 OLLU LINK 1 Comp) ;
SELECT ("mange"i) (0 OLLU LINK *1 Pl BARRIER WORD - Attr) ;
SELECT:fallback ("mye"i) (0 OLLU) ;


SELECT ("bak"i) (0 ("<duohken>"i) LINK -1 Sem/Build OR Sem/Plc - Prop OR ("<lohku>"i)) ;
SELECT:fallback ("avhengig av"i) (0 ("<duohken>"i)) ;

SELECT ("om"i) (0 ("<alde>"i) OR ("<nalde>"i) LINK *-2 ("<nággu>"i) OR ("<gilvu>"i) OR ("<gilvalit>"i) OR ("<nágget>"i) OR ("<riidu>"i) OR ("<riidalit>"i) BARRIER SV-BOUNDARY) ;
SELECT:fallback ("på"i) (0 ("<alde>"i) OR ("<nalde>"i)) ;

# go (default)=> når
# go:1 => at, go:2 => enn, go:3 => som, go:4 => da, go:5 => fordi

SELECT:når ("når"i) (0 ("<go>"i)) (-1 ("<rápmi>"i) + Loc) ;

SELECT:så-langt-som ("som"i) (0 ("<go>"i)) (-2 ("så" "<nu>")) (-1 A OR Adv OR Indef) (0 CS) ;
SELECT:som ("som"i) (0 ("<go>"i)) (*-1 ("<seammá>"i) OR ("<liikka>"i) BARRIER SV-BOUNDARY) ;
SELECT:som ("som"i) (0 ("<go>"i)) (1 ("<eará>"i) OR ("<navdit>") OR ("<jáhkkit>")) ;
SELECT:som ("som"i) (0 ("<go>"i)) (-1 Comp LINK -1 ("<beali>"i)) ;

SELECT ("at"i) (0 ("<go>"i)) (0 CS) (-1 ("<maŋŋel>"i) OR ("<ovdal>"i) OR ("<dan dihte>"i) LINK 0 Adv) ;
SELECT ("at"i) (0 ("<go>"i)) (0 CS) (-1 COPULAS LINK -1 (A Nom)) ;
#SELECT ("at"i) (0 ("<go>"i)) (0 CS) (-1 A - Comp) ;
## Son bijai vuosttaš spáppa mollii 22 minuvtta maŋŋel go čiekčamat ledje álgán.
## Buorre lei go bohtet.
## Gummá go ii boahtán.

SELECT ("enn"i) (0 ("<go>"i)) (0 CS LINK 1 ("<vejolaš>"i)) ;
SELECT ("enn"i) (0 ("<go>"i)) (0 CS LINK 1 (@COMP-CS<)) ;
SELECT ("enn"i) (0 ("<go>"i)) (0 CS LINK -1 (@COMP-CS<)) ;
SELECT ("enn"i) (0 ("<go>"i)) (0 CS) (-1 ("<veara>"i) OR ("<eará>"i)) ;
SELECT ("enn"i) (0 ("<go>"i)) (-1 ("<veara>"i) OR ("<eará>"i)) ;
SELECT ("enn"i) (0 ("<go>"i)) (1 ("<dušše>"i) OR ("<goassege>"i)) ;
SELECT ("enn"i) (0 ("<go>"i)) (-1 ConNeg LINK -1 Neg)(NEGATE 1 VFIN) ;
SELECT ("enn"i) (0 ("<go>"i)) (0 CS) (*-1 ("<ovdal>"i) OR ("<eará>"i) BARRIER S-BOUNDARY) ;
SELECT ("enn"i) (0 ("<go>"i)) (0 CS) (*-1 Comp BARRIER VFIN OR S-BOUNDARY) ;
## Son lea viššaleabbo go mun.
## Dat dáidá riggát go mii jáhkkit.
## Dii han lehpet eanet veara go ollu cizážat.
## Viššalat ohppet eanet go láikkit.
## Ovdal buorida son dálkkiidis go neavrres olmmoš dábiidis.

SELECT ("som"i) (0 ("<go>"i)) (0 CS) ((-1 ("<nu>"i) OR ("<seammá>"i) OR ("<seammás>"i) LINK 0 Adv) OR (-1 Adv OR A LINK -1 ("<nu>"i))) ;
## Elvenes oaččui Niehkostipeandda nu go lei sávvan.

SELECT ("da"i) (0 ("<go>"i)) (0 CS) (*1 (V Prt) BARRIER (<hab>) OR (@ADVL>)) ;

SELECT ("fordi"i) (0 ("<go>"i)) (0 CS) (1 (@ADVL>) OR (<hab>) LINK 1 COPULAS) ;
## Olbmot leat čoagganan Kárášjoga márkanii, go márkanis leat beassášdoalut.

SELECT ("fordi"i) (0 ("<go>"i)) (-1 A + Nom) ;


SELECT ("når"i) (0 ("<go>"i) LINK *1 Ind) ;
SELECT:fallback ("når"i) (0 ("<go>"i) + CS) ;

#SELECT ("i"i) (0 ("<otná>"i) LINK 1 Sem/Time) ;
SELECT ("i dag"i) (0 ("<otná>"i) LINK 1 Po) ;
SELECT:fallback ("dagens"i) (0 ("<otná>"i)) ;

SELECT:fallback ("hvilken av de to"i) (0 ("<goabbá>"i)) ;

SELECT:fallback ("i=hele"i) (0 ("<miehtá>"i)) ;

SELECT ("rundt"i) (0 ("<birra>"i) LINK 0 Po LINK *0 ("<vuodjit>"i) ) ;
SELECT ("på"i) (0 ("<birra>"i) LINK 0 Po LINK *-1 ("<jurddašit>"i) BARRIER SV-BOUNDARY ) ;
SELECT:fallback ("om"i) (0 ("<birra>"i)) ;

SELECT ("innen"i) (0 ("<sisa>"i) LINK 0 Po LINK -1 Sem/Time) ;
SELECT:fallback ("inn i"i) (0 ("<sisa>"i) LINK 0 Po) ;

SELECT:fallback ("foran"i) (0 ("<ovdalii>"i) ) ;

SELECT ("alene"i) (0 ("<iehčanassii>"i)) (-1 ("leat"i)) ;

# Po: mielde => med, mielde:1 => langs, mielde:2 => i følge, mielde:3 => etter
SELECT ("etter"i) (0 ("<mielde>"i)) (0 Po) (-1 ("<dárbu>"i) OR ("<miella>"i)) ;
SELECT ("i løpet av"i) (0 ("<mielde>"i)) (0 Po LINK -1 Sem/Time)  ;
SELECT ("langs"i) (0 ("<mielde>"i)) (0 Po) (-1 ("<šaldi>"i)) ;


## Don vieččat boaldinmuoraid dárbbu mielde.
SELECT ("med"i) (0 ("<mielde>"i)) (0 Adv)  ;
SELECT ("med"i) (0 ("<mielde>"i)) (-1 ("<ahki>"i) OR ("<stevvel>"i))  ;

SELECT ("for å"i) IF (0 ("<vai>"i) + CS) (1 Inf) ;
SELECT:fallback ("for at"i) IF (0 ("<vai>"i) + CS) (NOT 1 Inf) ;


SELECT ("all"i) IF (0 ("<juohke>"i) LINK 1 ("<lágan>")) ;
#$ juohke lágán geđggiiguin

SELECT ("mens"i) IF (0 ("<bodda>"i) LINK -1 ("<dat>") LINK 0 Gen) ;

SELECT ("stenge"i) IF (0 ("<gitta>"i) LINK *0 ("<geaidnu>"i) OR ("<luodda>"i) OR ("<gáhtta>"i) OR ("<uksa>"i) BARRIER S-BOUNDARY) ;
SELECT ("helt"i) IF (0 ("<gitta>"i) + @>A OR ("<gitta>"i) + @>N) ;
SELECT ("helt"i) IF (0 ("<gitta>"i) LINK 1 Sem/Time + Ill) ;
SELECT ("inntil"i) IF (0 ("<gitta>"i) + @>Num) ;
SELECT ("fast"i) IF (0 ("<gitta>"i)) (*-1 ("<váldit>"i) OR ("<váldot>"i) OR ("<darvánit>"i) OR ("<oažžut>"i) OR ("<fidnet>"i))  ;
SELECT:fallback ("lukket"i) IF (0 ("<gitta>"i) LINK *0 ("<čalbmi>"i))  ;
SELECT:fallback ("stenge"i) IF (0 ("<gitta>"i))  ;

SELECT ("så"i) IF (0 ("<ná>"i) LINK 1 A OR Adv)  ;
SELECT:fallback ("slik"i) IF (0 ("<ná>"i))  ;

SELECT:fallback ("enda"i) IF (0 ("<vel>"i))  ;


# Verbs
# =====

#leat

# leat 0 = være, 1 = ha, 2 = måtte («ha å»)
SELECT:adj ("være"i) IF (0 ("<leat>"i) LINK 1 ("<lihkku>"i) LINK 0 (<ext>)) ; # mus lea lihkku - jeg er heldig
SELECT:aux ("ha"i) IF (0 ("<leat>"i) LINK 1 ("<dáhpáhuvvat>"i) OR ("<leat>"i))  ; 
SELECT:aux (agreem-pro) IF (0 ("<leat>"i) LINK *1 ("<dáhpáhuvvat>"i) OR ("<leat>"i) OR (agreem-pro) BARRIER NOT-ADV)  ; 
SELECT:aux ("være"i) IF (0 ("<leat>"i) LINK 1 (agreem-pro))  ; 

SELECT ("måtte"i) IF (0 ("<leat>"i) LINK -1 Loc + HUMAN) (1 Inf) ;
# mis lea cahkkehit dola
SELECT:hab-ha ("ha"i) IF (0 ("<leat>"i)) (*-1 (@ADVLhab>)  BARRIER SV-BOUNDARY) ;
SELECT:hab-ha ("ha"i) IF (0 ("<leat>"i)) (*1 (@<ADVLhab)  BARRIER SV-BOUNDARY) ;
SELECT:neg-ha ("ha"i) IF (0 ("<leat>"i)) (-1 Neg) (*-2 <hab> BARRIER NOT-ADV) ;
SELECT:ha-NOT-Actio ("ha"i) IF (0 ("<leat>"i)) (0 FAUXV) (NEGATE *1 Actio + Ess BARRIER S-BOUNDARY) (NOT *1 Der/Pass + PrfPrc) ;
# sin giella lea<er> áitojuvvon ja sáhttá jávkat; … sii leat<er> dál<Adv> guorahallamin<Actio> …
# Dat leat šaddan nu stuorat ahte dat šaddá nu váivi ja lossat dan oahpat dan dáfus go sii leat massán dan interessa mii sis lei go sii ledje unnibut
# Leat go Ibsenii sádDemin dieđu?
SELECT:ha-pret ("ha"i) IF (0 ("<leat>"i) LINK NOT -1 @SPRED>) (0 (Ind Prt)) (1 Inf) ;
# Jos mun ledjen dadjat sátnegeažige, de ii son lean vuolgit.
# (Perf Cond 2)
# TODO: Gávpotmuvrra vuođđogeađggit ledje<være> čiŋahuvvon
# (unfortunately no animacy, and agreem-pro isn't until bidix...)
# TODO: ledje<ha> ovdalaččas guokte nieidda

#SELECT:ha-prfprac  ("ha"i) IF (0 ("<leat>"i)) (*1 PrfPrc + @-FMAINV BARRIER SV-BOUNDARY) ; #LOOK AT THIS

SELECT:Det-er ("være"i) IF (0 ("<leat>"i)) (-1 ("<Dat>") + @SUBJ>) ; # Dat lea …

SELECT:Det-er ("få# være"i) IF (0 ("<bállet>"i)) (1 ("<ráfi>") ) ;
SELECT:fallback ("ha# ro til"i) IF (0 ("<bállet>"i))  ;


SELECT:alle-hadde-samisk ("ha"i) IF (0 ("<leat>"i)) (-1 Loc + @ADVL> - Dem) (*1 @<SUBJ - Inf) ;
# Buohkain lei sámegiella eatnigiella
# … ahte mis lea juo Guovdageainnus juo ovddit jagi …
# Sis ledje olusat sápmelaččat ja sii oahpahedje sámegillii.
# Bohccot mis ledje Árdnisullos.
# Sámiid oahpaheamis lei prinsihpalaččat seammá mihttomearri go dážaid oahpaheamis.
SELECT:som-jeg-har. ("ha"i) IF (0 ("<leat>"i)) (-1 Loc + @ADVL> - Dem) (NOT *1 Inf) ; # Dat lea buot mii mus lea
# Exceptions:
# dikki mielas livččii dehálaš oččodit olbmuide diđolašvuođa ahte …
# TODO-exceptions:
# Sámedikki váldovuoruheamit oahppoplánabargguin ledje departemeantta iežas vuođđojurdagiid mielde.
# Skuvla eanas sámi guovlluin leai duššefal dábálaš dáčča skuvlla kopiija
# Ráissas lei maiddái buorre dilli mánáid gaskkas.
# Boarráseamos dovddus instruksa álbmotseađu oahpahusa olis lea Kristian 3. girkoordinánsa.
# Das lea máhppa masa lei čállon «Kautokeino flyttsamelag»
# Áidna fálaldat maid ožžo Guovdageainnus lei boazodoallu válljenfágan

SELECT:fallback ("være"i) IF  (0 ("<leat>"i)) ;

SELECT:fallback ("by# på"i) IF  (0 ("<guossohit>"i)) ;

SELECT ("ære"i) IF  (0 ("<gudnejahttit>"i)) (*-1 Acc BARRIER SV-BOUNDARY LINK 0 Sem/Hum OR FIRSTNAME OR ("<Ipmil>"i) OR ("<.*rohkki>"r)) ;
SELECT ("ære"i) IF  (0 ("<gudnejahttit>"i)) (1 Acc LINK 0 Sem/Hum OR FIRSTNAME OR ("<Ipmil>"i) OR ("<.*rohkki>"r)) ;
SELECT ("hedre"i) IF  (0 ("<gudnejahttit>"i) LINK 1 ("<dihte>"i)) ;

SELECT:fallback ("respektere"i) IF  (0 ("<gudnejahttit>"i)) ;

SELECT ("eller"i) IF  (0 ("<ii>"i) LINK 0 (Foc/Neg-ge))(NOT -1 COMMA)(*-1 Neg)  ;
SELECT:fallback ("ikke"i) IF  (0 ("<ii>"i)) ;

SELECT ("tilkalle"i) IF  (0 ("<rávkat>"i) LINK 1 Ess) ;
SELECT:fallback ("vekke"i) IF  (0 ("<rávkat>"i)) ;


SELECT ("barbere"i) IF  (0 ("<beaskidit>"i)) (0* ("<oaivi>"i)) ;
SELECT:fallback ("klippe"i) IF  (0 ("<beaskidit>"i)) ;

SELECT ("renne"i) IF  (0 ("<suohpput>"i))(0* ("<čuoldit>"i) OR ("<vuotta>"i) OR ("<boagán>"i)) ;
SELECT:fallback ("kaste"i) IF  (0 ("<suohpput>"i)) ;


SELECT:fallback ("veve# opplukk"i) IF  (0 ("<čuoldit>"i)) ;

SELECT ("få# plass"i) IF  (0 ("<šiehttat>"i)) (*1 Ill BARRIER SV-BOUNDARY) ;
SELECT:fallback ("avtale"i) IF  (0 ("<šiehttat>"i)) ;

SELECT ("sist"i) IF  (0 ("<vássit>"i) LINK 0 @>N) ;
SELECT:fallback ("svinne"i) IF  (0 ("<vássit>"i)) ;

SELECT ("legge# til"i) IF  (0 ("<lasihit>"i) LINK -1 HUMAN + Nom OR CC OR COMMA) ;
SELECT ("legge# til"i) IF  (0 ("<lasihit>"i) LINK 1 HUMAN + Nom) ;
SELECT:fallback ("øke"i) IF  (0 ("<lasihit>"i)) ;


SELECT ("trakassere"i) IF  (0 ("<loavkašuhttit>"i) LINK -1 ("<seksualálaš>"i)) ;
SELECT:fallback ("fornærme"i) IF  (0 ("<loavkašuhttit>"i)) ;

SELECT ("bryte"i) IF  (0 ("<gaikut>"i) LINK 1 ("<sisa>"i)) ;
SELECT:fallback ("rive"i) IF  (0 ("<gaikut>"i)) ;


SELECT ("røkte"i) IF  (0 ("<dikšut>"i) LINK *0 Sem/Lang + Acc) ;
SELECT:fallback ("stelle"i) IF  (0 ("<dikšut>"i)) ;

SELECT ("videreføre"i) IF  (0 ("<fievrridit>"i) LINK *0 Sem/Lang + Acc) ;
SELECT:fallback ("frakte"i) IF  (0 ("<fievrridit>"i)) ;


SELECT ("kollidere"i) IF  (0 ("<beaškkehit>"i) LINK *0 ("<oktii>"i) OR ("<biila>"i)) ;
SELECT:fallback ("smelle"i) IF  (0 ("<beaškkehit>"i)) ;


SELECT ("spille"i) IF  (0 ("<neaktit>"i) LINK *1 Acc BARRIER NOT-NPMODADV) ;
SELECT:fallback ("utøve skuespill"i) IF  (0 ("<neaktit>"i)) ;


SELECT ("vike"i) IF  (0 ("<gáidat>"i) LINK NOT 0 Der/NomAct) (0* ("<láhka>"i) LINK 0 Nom) ;
SELECT:fallback ("fjerne"i) IF  (0 ("<gáidat>"i)) ;


SELECT ("lage"i) IF  (0 ("<duddjot>"i)) (0* Acc BARRIER SV-BOUNDARY) ;
SELECT:fallback ("lage# duodji"i) IF  (0 ("<duddjot>"i)) ;

SELECT:fallback ("veilede"i) IF  (0 ("<rávvet>"i)) ;

SELECT:fallback ("merke"i) IF  (0 ("<vuohttit>"i)) ;



SELECT ("spire"i) IF  (0 ("<bohciidit>"i)) (0* Sem/Plant) ;
SELECT:fallback ("oppstå"i) IF  (0 ("<bohciidit>"i)) ;

SELECT ("ta# på"i) IF  (0 ("<coggat>"i)) (1 Sem/Clth) ;
SELECT:fallback ("putte"i) IF  (0 ("<coggat>"i)) ;

SELECT ("ta"i) IF  (0 ("<nahkehit>"i) ) (1 Sem/Clth) ;
SELECT:fallback ("putte"i) IF  (0 ("<nahkehit>"i)) ;

SELECT:fallback ("redusere"i) IF  (0 ("<unnidit>"i)) ;


SELECT ("fremme"i) IF  (0 ("<ovddidit>"i) LINK 1 Acc) (*1 Ill) ;
SELECT:fallback ("utvikle"i) IF  (0 ("<ovddidit>"i)) ;

SELECT:fallback ("gå"i) IF  (0 ("<lávket>"i) LINK *1 Ill BARRIER NOT-Attr) ;
SELECT:fallback ("skritte"i) IF  (0 ("<lávket>"i)) ;


SELECT ("kalve"i) IF  (0 ("<guoddit>"i) LINK -1 ("<ala>"i) OR  Ill) ;
SELECT ("kalve"i) IF  (0 ("<guoddit>"i) LINK *0 ("<áldu>"i)) ;
SELECT:fallback ("bære"i) IF  (0 ("<guoddit>"i)) ;


SELECT ("felle"i) IF  (0 ("<njeaidit>"i)) (0* Sem/Ani OR Sem/Plant BARRIER SV-BOUNDARY ) ;
SELECT:fallback ("velte"i) IF  (0 ("<njeaidit>"i)) ;

SELECT ("joike"i) IF  (0 ("<rohttestit>"i) OR ("<rohttet>"i)) (0* ("<luohti>"i) BARRIER SV-BOUNDARY ) ;
SELECT:fallback ("rykke"i) IF  (0 ("<rohttestit>"i)) ;


SELECT:fallback ("gjennomføre"i) IF  (0 ("<doibmiibidjat>"i)) ;


SELECT ("ville# ha"i) IF  (0 ("<háliidit>"i) + FMAINV LINK *1 N + Acc BARRIER NOT-NPMOD LINK NOT 1 TRANS-V ) ;
SELECT ("ville# ha"i) IF  (0 ("<háliidit>"i) + FMAINV LINK 1 Num ) ;
SELECT ("ville# ha"i) IF  (0 ("<háliidit>"i) + FMAINV LINK 1 Qst LINK *1 N + Acc BARRIER NOT-NPMOD ) ;
SELECT:fallback ("ville"i) IF  (0 ("<háliidit>"i)) ;


SELECT ("sette# fast"i) IF  (0 ("<darvánit>"i) LINK *0 Sem/Veh ) ;
SELECT:fallback ("feste"i) IF  (0 ("<darvánit>"i)) ;

SELECT:fallback ("berøre"i) IF  (0 ("<čuohcat>"i)) ;
SELECT:fallback ("berøre"i) IF  (0 ("<čuohcit>"i)) ;


SELECT ("turnere"i) IF  (0 ("<johtit>"i) LINK *0 Prop + Nom ) ;
SELECT ("turnere"i) IF  (0 ("<johtit>"i) LINK 0 Der/InchL ) ;
SELECT ("flytte"i) IF  (0 ("<johtit>"i) LINK 0 PrsPrc ) ;
SELECT ("flytte"i) IF  (0 ("<johtit>"i) LINK *0 ("<eallu>"i) OR ("<boazu>"i) OR ("<siida>"i) ) ;
SELECT:fallback ("flytte"i) IF  (0 ("<johtit>"i)) ;


SELECT ("knyttet"i) IF  (0 ("<čadnot>"i) LINK 1 Ill + Sem/Plc ) ;
SELECT:fallback ("binde"i) IF  (0 ("<čadnot>"i)) ;

REMOVE pasv IF  (0 ("<riegádit>"i) LINK 0 PrfPrc ) ;
SELECT:fallback pasv IF  (0 ("<riegádit>"i)) ;


SELECT ("bevare"i) IF  (0 ("<bisuhit>"i) LINK *0 Sem/Lang OR ("<kultuvra>"i) ) ;
SELECT:fallback ("beholde"i) IF  (0 ("<bisuhit>"i)) ;

SELECT ("veie"i) IF  (0 ("<deaddit>"i) LINK *0 Sem/Measr OR Sem/Ani ) ;
SELECT:fallback ("trykke"i) IF  (0 ("<deaddit>"i)) ;


SELECT ("forbruke"i) IF  (0 ("<loaktit>"i) LINK 1 Acc ) ;
SELECT:fallback ("trives"i) IF  (0 ("<loaktit>"i)) ;


SELECT ("nå"i) IF  (0 ("<joksat>"i)) (0* Sem/Veh) ;
SELECT ("nå"i) IF  (0 ("<joksat>"i)) (1 Ill) ;
SELECT:fallback ("oppnå"i) IF  (0 ("<joksat>"i)) ;

SELECT ("heve"i) IF  (0 ("<lonuhit>"i)) (0*  ("<ruhta>"i)) ;
SELECT:fallback ("bytte"i) IF  (0 ("<lonuhit>"i)) ;

SELECT:fallback ("samordne"i) IF  (0 ("<ovttastit>"i)) ;


SELECT ("veve"i) IF  (0 ("<gođđit>"i)) (0* ("<liidni>"i)) ;
SELECT:fallback ("strikke"i) IF  (0 ("<gođđit>"i)) ;

SELECT ("sirkulere"i) IF  (0 ("<jorrat>"i)) (0* (Sem/Semcon) ) ;
SELECT:fallback ("dreie"i) IF  (0 ("<jorrat>"i)) ;

SELECT ("ta"i) IF  (0 ("<goddit>"i) LINK 0 Der/Pass) (0* Sem/Ani-fish) ;
SELECT ("få"i) IF  (0 ("<goddit>"i)) (0* Sem/Ani-fish) ;
SELECT:fallback ("drepe"i) IF  (0 ("<goddit>"i)) ;


SELECT ("samle"i) IF  (0 ("<čoaggit>"i)) (0* ("<ruhta>"i) + Acc OR Sem/Curr + Acc OR Sem/Curr + Gen OR ("<namma>"i) + Acc OR ("<namma>"i) + Gen) ;
SELECT:fallback ("plukke"i) IF  (0 ("<čoaggit>"i)) ;

SELECT ("regne# ut"i) IF  (0 ("<rehkenastit>"i)) (1 ("<gallis>"i) OR ("<galle>"i)) ;
SELECT:fallback ("regne"i) IF  (0 ("<rehkenastit>"i)) ;


SELECT ("tilegne"i) IF  (0 ("<oamastit>"i)) ((1 Ill) OR (-1 Ill)) ;
SELECT:fallback ("eie"i) IF  (0 ("<oamastit>"i)) ;

SELECT ("innvie"i) IF  (0 ("<vihahit>"i)) (*0 ("<áltár>") BARRIER SV-BOUNDARY  LINK 0 Nom OR Acc) ;
SELECT:fallback ("vie"i) IF  (0 ("<vihahit>"i)) ;

SELECT ("bli"i) IF  (0 ("<boahtit>"i)) (1 ("<ovtta oaivilii>")) ;
SELECT:fallback ("komme"i) IF  (0 ("<boahtit>"i)) ;

SELECT ("utdanne"i) IF  (0 ("<oahppat>"i) LINK 0 PrfPrc + @>N) ;
SELECT:fallback ("lære"i) IF  (0 ("<oahppat>"i)) ;


SELECT:fallback ("ferde"i) IF  (0 ("<vánddardit>"i)) ;
SELECT:fallback ("bruke"i) IF  (0 ("<ádjánit>"i)) ;


SELECT ("stenge"i) IF  (0 ("<giddet>"i) LINK *0 Sem/Route OR ("<.*luodda>"r) OR ("<.*geaidnu>"r)) ;
SELECT:fallback ("lukke"i) IF  (0 ("<giddet>"i)) ;

SELECT:fallback ("avskjede"i) IF  (0 ("<lihccut>"i)) ;


SELECT ("utelate"i) IF  (0 ("<guođđit>"i)) (*1 ("<eret>")) ;
SELECT:fallback ("forlate"i) IF  (0 ("<guođđit>"i)) ;

SELECT ("møtes"i) IF  (0 ("<deaivvadit>"i) LINK NOT *1 Com BARRIER SV-BOUNDARY) ;
SELECT:fallback ("møte"i) IF  (0 ("<deaivvadit>"i)) ;


SELECT ("fotografere"i) IF  (0 ("<govvet>"i)) (*1 Prop) ;
SELECT ("fotografere"i) IF  (0 ("<govvet>"i) LINK 0 PrfPrc) (-1 Sem/Sur OR FIRSTNAME) ;
SELECT ("fotografere"i) IF  (0 ("<govvet>"i)) (1 ("<:>")) ;
SELECT ("fotografere"i) IF  (0 ("<govvet>"i)) (*0 ("<govva>"i)) ;
SELECT:fallback ("fotografere"i) IF  (0 ("<govvet>"i)) ;


SELECT:fallback ("oppleve"i) IF  (0 ("<vásihit>"i)) ;


SELECT ("legge# til rette"i) IF  (0 ("<láhčit>"i)) (1 CS OR ("<sadji>")) ;
SELECT ("legge# opp"i) IF  (0 ("<láhčit>"i)) (1 Ill) ;
SELECT ("legge# til rette"i) IF  (0 ("<láhčit>"i)) (-1 @OBJ> + Acc) ;
SELECT ("legge# til rette"i) IF  (0 ("<láhčit>"i)) (1 @<OBJ + Acc) ;
SELECT:fallback ("legge# opp til"i) IF  (0 ("<láhčit>"i)) ;


# orrut 0 = synes, 1 = bo, 2 = bli, 3 = være
SELECT:dego ("synes"i) (0 ("<orrut>"i) OR ("<orrot>"i)) (1 ("<dego>"i) OR (Actio Ess) OR ("<bures>"i) OR ("<ballu>"i) OR ("<illu>"i)) ;
SELECT:dego ("synes"i) (0 ("<orrut>"i) OR ("<orrot>"i)) (2 ("<miella>"i) + Loc OR ("<mielas>"i) OR ("<bures>"i) OR ("<ballu>"i) OR ("<illu>"i)) ;
SELECT:maid ("synes"i) (0 ("<orrut>"i) OR ("<orrot>"i)) (-1 ("<mii>"i)) ;
SELECT:jaska ("synes"i) (0 ("<orrut>"i) OR ("<orrot>"i)) (*1 ("<oahpis>"i)) ;
SELECT:jaska ("være"i) (0 ("<orrut>"i) OR ("<orrot>"i)) (1 ("<jaska>"i)) ;
SELECT:dego ("virke"i) (0 ("<orrut>"i) OR ("<orrot>"i)) (1 ("<nu>"i) OR A + Nom) ;
SELECT:bli ("bli"i) (0 ("<orrut>"i) OR ("<orrot>"i)) (-1 ("<go>"i)) ;
SELECT:orron-doppe ("bo"i) (0 ("<orrut>"i) OR ("<orrot>"i)) (*1 Loc OR DOPPE OR ("<bealde>"i) BARRIER SV-BOUNDARY) ;
#This rule should have another barrier, a set of all words except TIME-ADV.
#For sentences like: Mun orron diibmá Romssas.
#Check SET ORRUT-BO
SELECT:doppe-son-orui ("bo"i) (0 ("<orrut>"i) OR ("<orrot>"i)) (-1 @SUBJ>) (-2 Loc OR DOPPE) ;
SELECT:doppe-son-orui ("bo"i) (0 ("<orrut>"i) OR ("<orrot>"i)) (-1 Sem/Plc + Loc OR DOPPE) ;
SELECT ("bo"i) (0 ("<orrut>"i) OR ("<orrot>"i) LINK NEGATE *1 Actio + Ess ); 

SELECT:fallback ("synes"i) (0 ("<orrut>"i) OR ("<orrot>"i)); # says parallel corpus

## Sii orrot goit čeahpit hutkat vugiid movt ávkkástallat sin sámegielmáhtuin, čilge son.
## Mun orun Romssas.
## Oro jaska.

# šaddat 0 = bli, 1 = vokse, 2 = komme til å, 3 = vokse, 4 = bli, 5 = få, 6 = føde

SELECT ("vokse"i) (0 ("<šaddat>"i)) (1 ("<bajás>"i)) ;
SELECT ("få"i) (0 ("<šaddat>"i)) (*-1 HUMAN + Ill OR HUMAN + Loc BARRIER NOT-ADV) ;
# Sutnje šattai hoahppu.
# Sutnje šattai álo nu hoahppu.
SELECT ("få"i) (0 ("<šaddat>"i)) (-1 Neg) (*-2 <hab> BARRIER NOT-ADV) ;

# «føde» sounds much worse when it's wrong than «bli», need to work on this:
SELECT ("føde"i) (0 ("<šaddat>"i)) (1 Prop + Sem/Plc + Loc) (NEGATE *0 SPRED)(*-1 HUMAN + Nom) ;
# Mun lean šaddan Kárášjogas.
# Kárášjogas mun lean šaddan.

SELECT:fallback ("bli"i) + (agreem-pro) (0 ("<šaddat>"i)) ;

# bargat 0 = arbeide, 1 = gjøre
SELECT ("gjøre"i) (0 ("<bargat>"i)) (*-1 ("<mii>"i Pron Acc) BARRIER V-IND-FIN) ;
SELECT ("gjøre"i) (0 ("<bargat>"i)) (*0 @OBJ> OR @<OBJ OR @-F<OBJ BARRIER S-BOUNDARY) ;
SELECT ("arbeide"i) (0 ("<bargat>"i)) (*0 Com OR ("<dainna>"i)) ;
SELECT:fallback ("arbeide"i) (0 ("<bargat>"i));

# beassat 0 = få, 1 = slippe, 2 = komme Refl til
## Sii leat beassan eallit dego gonagasat.

SELECT ("slippe"i) (0 ("<beassat>"i)) (*1 (@-F<ADVL-ela) OR (@<ADVL-ela) OR DOHKO OR Actio + Loc BARRIER SV-BOUNDARY) ;
	#$ Váttis beassat dien bahádagus eret.
	## Mun bessen vuolgimis.
SELECT ("komme"i) (0 ("<beassat>"i)) (*1 Ill OR DOHKO BARRIER SV-BOUNDARY) ;
SELECT ("komme"i) (0 ("<beassat>"i) LINK *1 ("<searvái>")) ;
SELECT ("komme"i) (0 ("<beassat>"i) LINK *1 (@<ADVL-ela) BARRIER SV-BOUNDARY) ;
## In beassan skuvlii dan beaivve.  Jeg kom meg ikke på skolen den dagen.
## Maiddái Ranghild Nystad beassá Sámediggái. Også RN kommer seg inn på Sametinget.
## Sii ledje gáibidan ahte son galgá beassat riikastivrii. Du hadde krevd at han skulle komme seg inn i landsstyret.
## Mun nu illudan beassat duoddarii. Jeg gleder meg så til å komme meg på vidda.
## Nuoraidklubba nuorat besset dál Internehttii. Ungdomssklubbens ungdommer kommer seg nå på Internett.
SELECT:fallback ("få"i) (0 ("<beassat>"i));

# bivdit 0 = be, 1 = spørre, 2 = fiske, 3 = jakte
SELECT ("be"i) (0 ("<bivdit>"i) LINK *1 Qst OR ("<veahkki>"i) OR ("<doarjja>"i) OR Sem/Act + Acc BARRIER SV-BOUNDARY);
SELECT ("be"i) (0 ("<bivdit>"i) LINK 1 ("<ahte>"i) OR ("<veahkki>"i));
SELECT ("fiske"i) (0 ("<bivdit>"i)) (*0 ("<.*mearra>"r) OR ("<.*fanas>"r) OR ("<.*johka>"r) OR ("<.*jávri>"r)  OR ("<.*čázádat>"r) OR ("<sáibma>"r) OR ("<.*fierbmi>"r)  OR Sem/Ani-fish OR ("<reahkká>"i) OR ("<stággu>"i) OR ("<birrajándora>"i) OR ("<gonagasreabbá>"i) );
SELECT ("fisker"i) (0 ("<bivdi>"i)) (*0 ("<.*mearra>"r) OR ("<.*johka>"r) OR ("<.*jávri>"r) OR ("<.*čázádat>"r)  OR ("<sáibma>"i) OR ("<.*fierbmi>"r) OR ("<stággu>"i)  OR Sem/Ani-fish  OR ("<gonagasreabbá>"i) OR ("<.*reabbábivdu>"ri) );
SELECT ("jakte"i) (0 ("<bivdit>"i)) (*0 Sem/Ani LINK 0 Acc OR Gen);
SELECT:fallback ("be"i) (0 ("<bivdit>"i));
SELECT:fallback ("jeger"i) (0 ("<bivdi>"i));

SELECT ("ta# hensyn"i) (0 ("<váldit>"i)) (*1 ("<vuhtii>"i)) ;
SELECT ("ta# hensyn"i) (0 ("<váldit>"i)) (-1 ("<vuhtii>"i)) ;
SELECT ("bake"i) (0 ("<gáhkket>"i)) (*1 @<OBJ BARRIER NOT-NPMOD) ;

# borahit 0 = mate, 1 = fôre
SELECT ("fôre"i) (0 ("<borahit>"i)) (*0 Sem/Ani);
SELECT ("mate"i) (0 ("<borahit>"i)) (NOT *0 Sem/Ani);
## Son borahii máná. Son borahii spiinniid.
SELECT:fallback ("mate"i) (0 ("<borahit>"i));

SELECT ("bry# om"i) (0 ("<fuollat>"i) LINK *1 Loc BARRIER NOT-NPMODADV);
SELECT:fallback ("ville# ha"i) (0 ("<fuollat>"i)) ;


# čuohppat: skjære vs klippe
SELECT ("klippe"i) (0 ("<čuohppat>"i)) (*0 ("<vuokta>"i) OR ("<liidni>"i));
SELECT ("skjære"i) (0 ("<čuohppat>"i)) ;

# Sámediggi ja Sámi oahpahusráđđi gárttaiga čilget máŋgii vuođđojurdagiid man vuođul gáibideimmet ollislaš sámi oahppoplána
SELECT ("utgreie"i) (0 ("<čilget>"i)) (NOT 1 ("<.*skuvla>"ri) OR ("<ossodat>"i)) ;

SELECT ("oversette"i) (0 ("<jorgalit>"i)) (NOT *0 ("fisk"i)) ;
SELECT ("oversette"i) (0 ("<jorgalit>"i)) (*0 Sem/Lang OR Sem/Txt) ;
SELECT:fallback ("snu"i) (0 ("<jorgalit>"i)) ;

SELECT ("oversette"i) (0 ("<jorgalahttit>"i)) (*0 Sem/Lang OR Sem/Txt) ;
SELECT:fallback ("snu"i) (0 ("<jorgalahttit>"i)) ;

SELECT:fallback ("betjene"i) (0 ("<bálvalit>"i)) ;

SELECT:vedta ("vedta"i) (0 ("<dohkkehit>"i)) ((*-1 Sem/Rule) OR (*1 Sem/Rule)) ;
SELECT:fallback ("godkjenne"i) (0 ("<dohkkehit>"i)) ;

SELECT:anmelde ("anmelde"i) (0 ("<váidit>"i) LINK 0 Der/Pass) ((-1 Sem/Hum OR HUMAN OR Coll LINK 0 Nom)) ;
SELECT:anmelde ("anmelde"i) (0 ("<váidit>"i)) ((*-1 ("<politiija>"i) LINK 0 Nom)) ;
SELECT:fallback ("klage"i) (0 ("<váidit>"i)) ;


#SELECT:vedta ("vrake"i) (0 ("<hilgut>"i))  ;
SELECT:fallback ("avvise"i) (0 ("<hilgut>"i)) ;

SELECT:savne ("savne"i) (0 ("<láhppot>"i) LINK 0 @>N)  ;
SELECT ("savne"i) (0 ("<láhppot>"i) LINK -1 HUMAN OR ("<gii>"i) LINK 0 Nom OR Coll) ;
SELECT ("savne"i) (0 ("<láhppot>"i) LINK *-1 ("<jahki>"i)  BARRIER SV-BOUNDARY LINK 0 Der/sasj ) ;
SELECT ("gå vill"i) (0 ("<láhppot>"i) LINK -1 Sg1 LINK 0 Nom) ;
SELECT:fallback ("miste"i) (0 ("<láhppot>"i))  ;


SELECT ("havne"i) (0 ("<geavvat>"i)) (1 Ill LINK NOT 0 HUMAN) ;
SELECT ("heve"i) (0 ("<geavvat>"i)) (*0 Sem/Food LINK 0 SUBJ) ;
#  láibbit eai geargan geavvat ovdal go olbmot fertejedje hoahpus johttát .
SELECT:fallback ("hende"i) (0 ("<geavvat>"i)) ;
# Mii sáhttá leat geavvan?



SELECT ("igangsette"i) (0 ("<álggahit>"i)) ;

SELECT ("legge"i) (0 ("<lágidit>"i)) (1 ("forhold"i)) (2 ("til rette for"i)) ;
SELECT ("ordne"i) (0 ("<lágidit>"i)) (*1 Ill BARRIER V OR S-BOUNDARY) ; # lágidit sáhtu buohccivissui
SELECT ("arrangere"i) (0 ("<lágidit>"i)) ; # passar i fleire kontekstar enn «ordne»


LIST CURRENCY = "<denara>" "<dollár>" "<euro>" "<kruvdnu>" "<kr>" "<ru>" "<rubel>" "<ruvdno>" "<ruvdnu>" "<¢>" "<€>" "<$>" ;


# lohkat 0 = lese, 1 = si, 2 = telle

SELECT ("si"i) (0 ("<lohkat>"i)) (0 (<vdic>)) ;
SELECT ("si"i) (0 ("<lohkat>"i)) (1 ("<:>")) ;
SELECT ("si"i) (0 ("<lohkat>"i)) (-1 ("<,>") OR Dem + Acc) ;

SELECT ("lese"i) (0 ("<lohkat>"i)) (-1 BOS)(1 ("<eambbo>"i) OR ("<eanet>"i) LINK 1 EOS) ;
SELECT ("telle"i) (0 ("<lohkat>"i)) (*0 ("<giehta>"i) + Pl + Com BARRIER SV-BOUNDARY) ;
SELECT ("telle"i) (0 ("<lohkat>"i)) (*0 Sem/Ani + Pl + Acc BARRIER SV-BOUNDARY) ;


SELECT ("lese"i) (0 ("<lohkat>"i)) ((1 Sem/Txt OR Sem/Domain OR ("<cealkámuš>"i) OR ("<Ávvir>") LINK 0 Acc) OR (-1 Sem/Txt OR Sem/Domain LINK 0 Acc )  OR (1 ("<eksámen>"i))) ;
# Son lohká ahte lea buorre doppe.

SELECT:lese-samisk ("lese"i) (0 ("<lohkat>"i)) (1 LANGUAGE LINK 0 Acc OR Loc) ;
SELECT:lese ("lese"i) (0 ("<lohkat>"i)) (*1 Sem/Edu LINK 0 Loc) ;
SELECT:lese ("lese"i) (0 ("<lohkat>"i)) (1 Sem/Lang) ;
# Ruth Larsena mielas dát vuoseha ahte lea vejolaš lohkagoahtit sámegiela easkka joatkkaskuvllas
SELECT:lese ("lese"i) (0 ("<lohkat>"i) LINK 0 Der/InchL) ;

SELECT ("si"i) (0 ("<lohkat>"i))(-1 HUMAN) (*1 Ill BARRIER NOT-NPMOD) ;
SELECT ("si"i) (0 ("<lohkat>"i)) (1 ("<ahte>"i) OR Refl + Acc OR Refl + Loc OR PrfPrc OR A - Attr) ;
SELECT ("si"i) (0 ("<lohkat>"i)) (*1 Ess) ;

SELECT ("si"i) (0 ("<lohkat>"i)) (*1 FMAINV OR Actio OR PrfPrc OR Inf BARRIER S-BOUNDARY OR ("<galle>"i) OR ("<man>"i)) (NEGATE *0 Acc + Sem/Txt BARRIER S-BOUNDARY)   ;
## Ovddeš bargi Yle Sámi Radios, Ánne Risten Juuso, lohká ahte Gárasavvonis livčče eará latnja leamaš Yle Sámi radio doaimmahussii. -  Den tidligere arbeideren Yle på Samelands Radio, Ánne Risten Juuso, hun sier at ...
## Son lohká máddin Sámis lea sámit garrasabbot deddon dahje vealahuvvon go davvin. - Han sier sørfra har Sameland samer hardere trykt eller berøvd nordpå.
## Lars Anders Baer ii eahpit ii veahášge go lohká dákkáraš álbmotsirren lea lága ja álbmotrievtti vuostá. - Lars Anders Baer tviler ikke ikke *veahášge når han sier *dákkáraš en folkeisolering er loven og folkeretten mot.
## Son lohká ádjá boahtit. - Han sier at bestefar skulle komme.
## Soai siđaiga dávjá Liná lohkat jitnosit go sis lei lohkan-hárjehallan.


#SELECT ("si"i) (0 ("<lohkat>"i)) (-1 COMMA) (*1 (@<SUBJ) BARRIER VFIN);
#SELECT ("si"i) (0 ("<lohkat>"i)) (-1 (@SUBJ>) LINK -1 COMMA);
#SELECT ("si"i) (0 ("<lohkat>"i)) (1 Sem/Hum + Nom OR Prop + Nom) ;
## Dat lea duohta, lohká Trond.

SELECT ("si"i) (0 ("<lohkat>"i)) (-1 ("<nu>"i));
SELECT:fallback ("lese"i) (0 ("<lohkat>"i)) ;


SELECT ("telle"i) (0 ("<lohkat>"i))
	(1 ("<galle>"i) OR ("<man>"i) LINK NOT 0 Sem/Txt + Nom);
## Son lohká ruđaid.
## Son lohká galle girjji mis leat.
SELECT:fallback ("si"i) (0 ("<lohkat>"i));

SELECT:fallback ("høve"i) (0 ("<soahpat>"i) LINK 1 Ill);

SELECT:fallback ("forlike"i) (0 ("<soahpat>"i));

SELECT ("lese"i) (0 ("<lohkkot>"i) LINK -1 ("<eanemus>"i));
SELECT:fallback ("avregne"i) (0 ("<lohkkot>"i));


# mannat 0 = dra, 1 = gå
SELECT ("sist"i) IF (0 ("<mannat>"i) LINK 0 PrfPrc + @>N );
	
SELECT ("gå"i) IF (0 ("<mannat>"i)) (*-1 ("<mo>"i) OR ("<dat>"i)) (0 Sg3);
## Mo manná dál?
SELECT ("gå"i) IF (0 ("<mannat>"i)) (*0 ("<bures>"i) OR ("<duššái>"i) BARRIER V);
SELECT ("gå"i) IF (0 ("<mannat>"i)) (1 ("<ovdalii>"i));

## Mun manan dál.
#SELECT ("gå"i) IF (0 ("<mannat>"i)) (*0 Sem/Time + SUBJ BARRIER SV-BOUNDARY);
SELECT ("dra"i) IF (0 ("<mannat>"i)) (*1 Sem/Plc + Ill OR Sem/Org + Ill);
SELECT:fallback ("gå"i) (0 ("<mannat>"i) LINK NOT 0 @>N) ;

SELECT ("bety"i) IF (0 ("<máksit>"i) ) (*0 ("<sátni>"i) + Nom BARRIER NOT-NPMODADV);
SELECT ("bety"i) IF (0 ("<máksit>"i) )  (*1 ("<ahte>"i) BARRIER WORD);
#SELECT ("bety"i) IF (0 ("<máksit>"i) )  (1 COMMA) (2 ("<ahte>"i));
## Dat máksá, ahte mun dárbbašan dakkár njuolgadusa

SELECT ("betale"i) IF (0 ("<máksit>"i) ) (*-1 (@SUBJ>) LINK 0 HUMAN OR Sem/Org OR Pers ) ;
## Máhtte máksá guokte ruvnnu.
SELECT ("betale"i) IF (0 ("<máksit>"i) ) (*-1 ("<vejolašvuohta>"i) OR ("<bággu>"i) OR ("<ráđđi>"i) OR ("<áigemeari>"i) OR ("<divat>"i)  OR ("<rehket>"i) OR Sem/Money ) ;
SELECT ("betale"i) IF (0 ("<máksit>"i) ) (*-1 Loc BARRIER NOT-ADV-PCLE) ;
SELECT ("betale"i) IF (0 ("<máksit>"i) ) (*1 ("<.*vearru>"r) OR ("<áigemearri>"i) OR ("<.*divat>"r) OR Sem/Money) ;
SELECT ("betale"i) IF (0 ("<máksit>"i) ) (1 Ill OR ("<ruovttoluotta>") OR Sem/Money) ;
SELECT ("betale"i) IF (0 ("<máksit>"i) ) (0 @<OBJ) ;



SELECT ("koste"i) IF (0 ("<máksit>"i) ) (*-1 (@SUBJ>) LINK NOT 0 HUMAN OR Pers) (0* CURRENCY OR QUANT-PRON OR Num BARRIER Ill OR S-BOUNDARY) ;
## Girji máksá guokte ruvnnu.

SELECT ("tilsøle"i) (0 ("<durdut>"i)) ;

SELECT:fallback ("skje"i) (0 ("<dáhpáhuvvat>"i));

SELECT:berømt-forfatter ("berømme"i) (0 ("<beaggit>"i)) (0 @>N + PrfPrc) (NOT 1 CLB) ; #  vaikko čálli lei beaggán girječálli
SELECT:kjent-som ("kjenne"i) (0 ("<beaggit>"i)) (0 PrfPrc) (*1 Loc BARRIER CLB OR V); # mu ovddabealde bekkii Skuvvanvárrái boahtit sámásteaddji dáža oahpaheaddji
SELECT:ble-kjent-i ("kjenne"i) (0 ("<beaggit>"i)) (0 Prt) (*1 Ill BARRIER CLB OR V); # Son lea maiddái beaggán Sámi soga lávlaga čállin
SELECT:fallback ("kjenne"i) (0 ("<beaggit>"i)); # Maŋimuš áiggiid lea beaggán , maŋimustá

SELECT:reparere ("reparere"i) (0 ("<divvut>"i) LINK *0 ("<bátni>"i) OR Sem/Veh OR Sem/Route);
SELECT:fallback ("rette"i) (0 ("<divvut>"i));

SELECT:reparere ("innkalle"i) (0 ("<gohččut>"i) LINK *0 ("<diibmu>"i) OR ("<čoahkkin>"i));
SELECT:fallback ("be"i) (0 ("<gohččut>"i));

SELECT:reparere ("smitte"i) (0 ("<njoammut>"i) LINK *0 ("<.*dávda>"r) OR ("<oaivevuorri>"i) OR ("<CWD>"i)  OR Sem/State-sick);
SELECT:fallback ("smitte"i) (0 ("<njoammut>"i));

SELECT:fallback ("sette# opp"i) (0 ("<cegget>"i));


SELECT:fallback ("rette"i) (0 ("<njulget>"i));

SELECT:ta-en-tur ("ta en tur"i) (0 ("<fitnat>"i) + Inf )  ; 
SELECT:fallback ("være"i) (0 ("<fitnat>"i));

SELECT:publisere ("lansere"i) (0 ("<almmuhit>"i) LINK *0 ("<skearru>"i) OR ("<girji>"i) OR ("<lávlla>"i))  ; 
SELECT:publisere ("annonsere"i) (0 ("<almmuhit>"i) LINK *0 ("<.*virgi>"ir))  ; 
SELECT:publisere ("publisere"i) (0 ("<almmuhit>"i) LINK *-1 Sem/Txt  OR Sem/Rule OR Sem/Prod-ling LINK NOT 0 Loc )  ; 
SELECT:publisere ("publisere"i) (0 ("<almmuhit>"i) LINK *1 Sem/Txt  OR Sem/Rule OR Sem/Prod-ling LINK NOT 0 Loc )  ; 
SELECT:publisere ("publisere"i) (0 ("<almmuhit>"i) LINK 1 Sem/Time )  ; 
SELECT:fallback ("publisere"i) (0 ("<almmuhit>"i));

SELECT:beherske ("beherske"i) (0 ("<hálddašit>"i) LINK *0 Sem/Lang);
SELECT:fallback ("forvalte"i) (0 ("<hálddašit>"i));

SELECT ("tilegne"i) (0 ("<gazzat>"i) LINK *0 ("<.*oahppu>"r) + Acc);
SELECT:fallback ("spise"i) (0 ("<gazzat>"i));


SELECT ("oppdatere"i) (0 ("<ođastit>"i) LINK 1 ("<:>") OR Arab OR Sem/Date);
SELECT:fallback ("fornye"i) (0 ("<ođastit>"i));


SELECT:vedta ("vedta"i) (0 ("<mearridit>"i) LINK *-1 ("<.*čoahkkin>"r) OR ("<.*njuolggadus>"r));
SELECT:vedta ("vedta"i) (0 ("<mearridit>"i) LINK 1 Sem/Prod-cogn OR Sem/Txt) ;
SELECT:fallback ("bestemme"i) (0 ("<mearridit>"i));

SELECT:vite ("vite"i) (0 ("<dovdat>"i) LINK 1 Rel);
SELECT:fallback ("kjenne"i) (0 ("<dovdat>"i));


SELECT:skyte ("skyte"i) (0 ("<bávkalit>"i) LINK *0 ("<rakeahtta>"r)); 
SELECT:fallback ("smelle"i) (0 ("<bávkalit>"i));

SELECT:påkjøre ("påkjøre"i) (0 ("<vuodjit>"i) + pasv);
SELECT:fallback ("kjøre"i) (0 ("<vuodjit>"i));
SELECT:fallback ("skuffe"i) (0 ("<beahttit>"i));

SELECT:påkjøre ("konsentrere"i) (0 ("<vuodjut>"i) + Sg3 LINK *0 Sem/Edu) ;
SELECT:fallback ("synke"i) (0 ("<vuodjut>"i));


SELECT:kalle ("kalle"i) (0 ("<navdit>"i) LINK 1 Acc LINK 1 Ess );
SELECT:kalle ("kalle"i) (0 ("<navdit>"i) LINK 1 Ess );
SELECT:fallback ("anta"i) (0 ("<navdit>"i));
SELECT:fallback ("etablere"i) (0 ("<ásahit>"i));

SELECT:advare ("advare"i) (0 ("<váruhit>"i) LINK 1 ("<ahte>"i) OR Adv OR A OR Inf OR Actio);
SELECT:advare ("advare"i) (0 ("<váruhit>"i) LINK 1 Sem/Hum OR Prop);
SELECT:fallback ("advare"i) (0 ("<váruhit>"i));

SELECT:ringe ("ringe"i) (0 ("<čuodjat>"i) LINK *0 ("<telefovdna>"i)) ;
SELECT:fallback ("klinge"i) (0 ("<čuodjat>"i) LINK NEGATE *0 ("<telefuvdna>"i) ) ;

SELECT:fallback ("forbli"i) (0 ("<bissut>"i) ) ;


SELECT:fallback ("kommunisere"i) (0 ("<gulahallat>"i) ) ;

SELECT:stå ("bestå"i) (0 ("<ceavzit>"i) LINK *0 ("<eksámen>"i) OR Sem/Edu OR Sem/Domain);
SELECT:fallback ("klare"i) (0 ("<ceavzit>"i));

SELECT:be ("be"i) (0 ("<dáhttut>"i) LINK 1 Acc OR Inf);
SELECT:fallback ("be"i) (0 ("<dáhttut>"i));

SELECT ("fordele"i) (0 ("<juohkit>"i) LINK 0 Der/Pass) ;
SELECT:fallback ("dele"i) (0 ("<juohkit>"i));


SELECT ("oppnå"i) (0 ("<olahit>"i) LINK 1 ("<.*vuohta>"r) OR ("<árvosátni>"r) LINK 0 Acc) ;
SELECT ("oppnå"i) (0 ("<olahit>"i) LINK *1 Sem/Edu BARRIER NOT-NPMOD LINK 0 Acc) ;
SELECT:fallback ("rekke"i) (0 ("<olahit>"i));

SELECT ("tørke"i) (0 ("<sihkkut>"i))(*0 ("<beavdi>"i) OR ("<njunni>"i) OR ("<távval>"i) LINK 0 Acc) ;
SELECT:fallback ("stryke"i) (0 ("<sihkkut>"i)) ;

SELECT ("oppdra"i) (0 ("<geassit>"i))(*0 ("<mánná>"i) LINK 0 Acc OR Gen) ;
SELECT:fallback ("trekke"i) (0 ("<geassit>"i));

SELECT ("utveksle"i) (0 ("<lonohallat>"i) LINK *0 ("<vásáhus>"i));
SELECT:fallback ("skifte"i) (0 ("<lonohallat>"i));

SELECT ("slå# sammen"i) (0 ("<ovttastahttit>"i) LINK *0 Sem/Org OR Sem/Pos);
SELECT:fallback ("forene"i) (0 ("<ovttastahttit>"i));

SELECT ("smelle"i) (0 ("<bávkkehit>"i) LINK *0 ("<rakeahtta>"i));
SELECT:fallback ("eksplodere"i) (0 ("<bávkkehit>"i));

SELECT ("advare"i) (0 ("<várret>"i) LINK 1 ("<nominašuvdna>"i));
SELECT ("reservere"i) (0 ("<várret>"i) LINK *0 Acc OR Ill BARRIER SV-BOUNDARY);
SELECT:fallback ("advare"i) (0 ("<várret>"i));

SELECT ("skyve"i) (0 ("<duvdit>"i) LINK *1 ("<eret>"i) BARRIER SV-BOUNDARY);
SELECT:fallback ("støtte"i) (0 ("<duvdit>"i));

SELECT ("tilegne"i) (0 ("<oččodit>"i) LINK *1 Sem/Lang BARRIER SV-BOUNDARY LINK NEGATE 0 Gen LINK 1 N);
SELECT:fallback ("få"i) (0 ("<oččodit>"i));


SELECT:fallback ("fortsette"i) (0 ("<joatkit>"i));


# Verbs that were 0-marked in the dix:
SELECT:fallback ("rise"i) IF  (0 ("<risset>"i)) ;
SELECT:fallback ("behandle"i) (0 ("<meannudit>"i));
SELECT:fallback ("bevilge"i) (0 ("<juolludit>"i));
SELECT:fallback ("sette"i) (0 ("<bidjat>"i));
SELECT:fallback ("avslå"i) (0 ("<biehttalit>"i));
SELECT:fallback ("påvirke"i) (0 ("<báidnit>"i));
SELECT:fallback ("kvitre"i) (0 ("<civkkádit>"i));
SELECT:fallback ("forårsake"i) (0 ("<dagahit>"i));
SELECT:fallback ("overdra"i) (0 ("<daguhit>"i));
SELECT:fallback ("respektere"i) (0 ("<doahttalit>"i));
SELECT:fallback ("tro"i) (0 ("<doaivut>"i));
SELECT:fallback ("føre"i) (0 ("<doalvut>"i));
SELECT:fallback ("stole"i) (0 ("<dorvvastit>"i));
SELECT:fallback ("omkomme"i) (0 ("<duššat>"i));
SELECT:fallback ("bekrefte"i) (0 ("<dáhkidit>"i));
SELECT:fallback ("besøke"i) (0 ("<finadit>"i));
SELECT:fallback ("tilby"i) (0 ("<fállat>"i));
SELECT:fallback ("grave"i) (0 ("<goaivut>"i));
SELECT:fallback ("lenke"i) (0 ("<goallostit>"i));
SELECT:fallback ("gløde"i) (0 ("<goarddašit>"i));
SELECT:fallback ("redusere"i) (0 ("<geahpedit>"i));
SELECT:fallback ("svette"i) (0 ("<golggahit>"i));
SELECT:fallback ("slutte"i) (0 ("<guorrasit>"i));
SELECT:fallback ("sky"i) (0 ("<hirrut>"i));
SELECT:fallback ("forme"i) (0 ("<hábmet>"i));
SELECT:fallback ("mishandle"i) (0 ("<illastit>"i));
SELECT:fallback ("trene"i) (0 ("<hárjehit>"i));
SELECT:fallback ("forstå"i) (0 ("<ipmirdit>"i));
SELECT:fallback ("fryde"i) (0 ("<jierásmuvvat>"i));
SELECT:fallback ("nervøs"i) (0 ("<jierásmuvvat>"i));
SELECT:fallback ("forlenge"i) (0 ("<joatkkašit>"i));
SELECT:fallback ("slarke"i) (0 ("<johtalit>"i));
SELECT:fallback ("snu"i) (0 ("<jorahit>"i));
SELECT:fallback ("få"i) (0 ("<juollut>"i));
SELECT:fallback ("utslette"i) (0 ("<jávkadit>"i));
SELECT:fallback ("avslutte"i) (0 ("<loahpahit>"i));
SELECT:fallback ("lese"i) (0 ("<lohkalit>"i));
SELECT:fallback ("stole"i) (0 ("<luohttit>"i));
SELECT:fallback ("gå"i) (0 ("<luoitádit>"i));
SELECT:fallback ("stige"i) (0 ("<luoitádit>"i));
SELECT:fallback ("bety"i) (0 ("<mearkkašit>"i));
SELECT:fallback ("styrke"i) (0 ("<nannet>"i));
SELECT:fallback ("slutte"i) (0 ("<nohkat>"i));
SELECT:fallback ("sove"i) (0 ("<nohkkat>"i));
SELECT:fallback ("berolige"i) (0 ("<oadjudit>"i));
SELECT:fallback ("undervise"i) (0 ("<oahpahit>"i));
SELECT:fallback ("søke"i) (0 ("<ohcat>"i));
SELECT:fallback ("oppholde"i) (0 ("<orostaddat>"i));
SELECT:fallback ("skaffe"i) (0 ("<rabbat>"i));
SELECT:fallback ("åpne"i) (0 ("<rabestit>"i));
SELECT:fallback ("forandre"i) (0 ("<rievdat>"i));
SELECT:fallback ("skryte av"i) (0 ("<rábmot>"i));
SELECT:fallback ("forberede"i) (0 ("<ráhkkanahttit>"i));
SELECT:fallback ("bevare"i) (0 ("<seailut>"i));
SELECT:fallback ("hente"i) (0 ("<viežžat>"i));
SELECT:fallback ("gjemme"i) (0 ("<čiehkádit>"i));
SELECT:fallback ("spille"i) (0 ("<čuojahit>"i));
SELECT:fallback ("følge"i) (0 ("<čuovvolit>"i));
SELECT:fallback ("følge"i) (0 ("<čuovvulit>"i));
SELECT:fallback ("pynte"i) (0 ("<čábbudit>"i));
SELECT:fallback ("dyrke"i) (0 ("<šaddadit>"i));

# Based on frequency in parallel text:
SELECT ("slåss"i) (0 ("<doarrut>"i)) ;
SELECT ("skille"i) (0 ("<earuhit>"i)) ;
SELECT ("forsvare"i) (0 ("<bealuštit>"i)) ;
SELECT ("vise"i) (0 ("<čujuhit>"i)) ; 

# Nouns
# ============

SELECT ("kjeks"i) (0 ("<čeaksa>"i) + Pl) ;
SELECT ("kjeks"i) (0 ("<čeaksa>"i) LINK -1 ("<garas>"i) OR ("<njálggat>"i)  ) ;
SELECT:fallback ("bladmage"i) (0 ("<čeaksa>"i)) ;


SELECT ("tale"i) (*-1 ("<doallat>"i)) (0 ("sáhka"i));

SELECT ("skrott"i) (0 ("<gorut>"i) LINK -1 Num) ;
SELECT ("skrott"i) (0 ("<gorut>"i) + Pl) ;
SELECT:fallback ("kropp"i) (0 ("<gorut>"i) OR ("<rumaš>"i)) ;

SELECT:fallback ("differensiering"i) (0 ("<sirren>"i) ) ;
SELECT:fallback ("utgangspunkt"i) (0 ("<álgovuorru>"i) ) ;
SELECT:fallback ("godkjenning"i) (0 ("<dohkkeheapmi>"i) ) ;

SELECT ("oppbygging"i) (0 ("<huksehus>"i)  LINK -1 Sem/Txt ) ;
SELECT:fallback ("bygg"i) (0 ("<huksehus>"i)) ;

SELECT ("tale"i) (0 ("<hupman>"i)  LINK -1 ("<syntehtalaš>"i) ) ;
SELECT:fallback ("snakk"i) (0 ("<hupman>"i)) ;


SELECT ("nødvendig"i) (0 ("<bággu>"i)  LINK 1 Inf ) ;
SELECT:fallback ("tvang"i) (0 ("<bággu>"i)) ;

SELECT ("posisjon"i) (0 ("<sajádat>"i)  LINK -1 Cmp ) ;
SELECT:fallback ("beliggenhet"i) (0 ("<sajádat>"i)) ;

SELECT ("veigrøft"i) (0 ("<doaresbealli>"i) LINK *0 Sem/Veh BARRIER S-BOUNDARY)  ;
SELECT:fallback ("tvang"i) (0 ("<doaresbealli>"i)) ;


SELECT ("eldre"i) (0 ("<boaresolmmoš>"i) LINK 0 Pl ) ;
SELECT:fallback ("gamling"i) (0 ("<boaresolmmoš>"i)) ;

SELECT ("datter"i) (0 ("<nieida>"i) LINK -1 FIRSTNAME + Gen ) ;
SELECT:fallback ("jente"i) (0 ("<nieida>"i)) ;

SELECT:fallback ("mindreårig"i) (0 ("<vuolleahkásaš>"i)) ;


SELECT ("leder"i) (0 ("<láidesteaddji>"i) LINK -1 Sem/Edu + Gen ) ;
SELECT:fallback ("konferansier"i) (0 ("<láidesteaddji>"i)) ;



SELECT:fallback ("begivenhet"i) (0 ("<dáhpáhus>"i) LINK -1 ("<rabas>"i) ) ;
SELECT:fallback ("hendelse"i) (0 ("<dáhpáhus>"i) ) ;

SELECT ("hardt vær"i) (0 ("<biegga>"i) LINK 1 ("<siste>"i) ) ;
SELECT:fallback ("vind"i) (0 ("<biegga>"i) ) ;

SELECT ("virkelighet"i) (0 ("<duohtavuohta>"i) LINK 0 Loc ) ;
SELECT ("virkelighet"i) (0 ("<duohtavuohta>"i) LINK *0 ("<šaddat>"i) BARRIER SV-BOUNDARY) ;
SELECT:fallback ("sannhet"i) (0 ("<duohtavuohta>"i) ) ;

SELECT ("faste medlem"i) (0 ("<fástalahttu>"i) LINK 0 Pl ) ;
SELECT:fallback ("fast medlem"i) (0 ("<fástalahttu>"i) ) ;

SELECT:fallback ("juks"i) (0 ("<vearridahku>"i) ) ;


SELECT ("småkopper"i) (0 ("<boahkku>"i) LINK 0 Pl ) ;
SELECT:fallback ("vaksine"i) (0 ("<boahkku>"i) ) ;

SELECT ("vare"i) (0 ("<várra>"i) LINK *0 ("<váldit>"i) BARRIER SV-BOUNDARY) ;
SELECT:fallback ("fare"i) (0 ("<várra>"i) ) ;

SELECT ("kule"i) (0 ("<spábba>"i) LINK -1 ("<dolla>"i)) ;
SELECT:fallback ("ball"i) (0 ("<spábba>"i)) ;
SELECT ("ild"i) (0 ("<dolla>"i) LINK 1 ("<spábba>"i));
SELECT:fallback ("bål"i) (0 ("<dolla>"i));


SELECT:fallback ("tillatelse"i) (0 ("<lohpi>"i)) ;

SELECT:fallback ("slåsskamp"i) (0 ("<doarrun>"i)) ;

SELECT:fallback ("kontroll"i) (0 ("<dárkkisteapmi>"i)) ;

SELECT ("bane"i) (0 ("<šillju>"i))(*0 ("<čiekči>"i) OR ("<čiekčat>"i)) ;
SELECT:fallback ("gårdsplass"i) (0 ("<šillju>"i)) ;

SELECT ("lengde"i) (0 ("<guhkkodat>"i) LINK *0 ("<mehter>"i) OR ("<kilomehter>"i)) ;
SELECT:fallback ("varighet"i) (0 ("<guhkkodat>"i)) ;


SELECT ("heldig"i) (0 ("<lihkku>"i) LINK 0 (<ext>) LINK *-1 <hab>) ;
SELECT:fallback ("lykke"i) (0 ("<lihkku>"i)) ;

SELECT ("matrett"i) (0 ("<biebmu>"i) LINK 0 Pl) ;
SELECT:fallback ("mat"i) (0 ("<biebmu>"i)) ;

SELECT ("bånd"i) (0 ("<báddi>"i) LINK *0 ("<goarrut>"i) OR ("<gákti>"i)) ;
SELECT:fallback ("tau"i) (0 ("<báddi>"i)) ;


SELECT ("innstilling"i) (0 ("<áššeguoddu>"i) LINK -1 ("<ráđđealmmái>"i)) ;
SELECT:fallback ("holdning"i) (0 ("<áššeguoddu>"i)) ;

SELECT ("vår"i) (0 ("<bievla>"i) LINK -1 Det) ;
SELECT:fallback ("barmark"i) (0 ("<bievla>"i)) ;


SELECT ("verge"i) (0 ("<áittardeaddji>"i) LINK -1 ("<veahkki>"i)) ;
SELECT:fallback ("ombud"i) (0 ("<áittardeaddji>"i)) ;

SELECT ("buesnitt"i) (0 ("<hoaŋka>"i) LINK 1 ("<beallji>"i)) ;
SELECT:fallback ("bergvegg"i) (0 ("<hoaŋka>"i)) ;


SELECT ("katalog"i) (0 ("<ohcu>"i) + Pl) ;
SELECT:fallback ("søk"i) (0 ("<ohcu>"i)) ;

SELECT ("geskjeft"i) (0 ("<fidnu>"i) LINK -1 Cmp) ;
SELECT:fallback ("yrke"i) (0 ("<fidnu>"i)) ;

SELECT ("satsing"i) (0 ("<áŋgiruššan>"i) LINK -1 Cmp OR Sem/Org ) ;
SELECT:fallback ("iver"i) (0 ("<áŋgiruššan>"i)) ;

SELECT ("stamme"i) (0 ("<nálli>"i) LINK -1 Sem/Ani ) ;
SELECT:fallback ("rase"i) (0 ("<nálli>"i)) ;


SELECT ("motto"i) (0 ("<čurvestat>"i) LINK -1 Cmp) ;
SELECT ("motto"i) (0 ("<čurvestat>"i) LINK 0 Cmp) ;
SELECT:fallback ("rop"i) (0 ("<čurvestat>"i)) ;


SELECT ("tegn"i) (0 ("<mearka>"i) LINK -1 Attr) ;
SELECT:fallback ("merke"i) (0 ("<mearka>"i)) ;

SELECT ("lås"i) (0 ("<lássa>"i) LINK -1 ("<alkohola>"i)) ;
SELECT ("lås"i) (0 ("<lássa>"i) LINK *-1 Sem/Veh BARRIER S-BOUNDARY) ;
SELECT:fallback ("glass"i) (0 ("<lássa>"i)) ;

SELECT:fallback ("påmelding"i) (0 ("<dieđiheapmi>"i)) ;

SELECT:fallback ("praksisperiode"i) (0 ("<hárjehallanáigodat>"i)) ;

SELECT:fallback ("par"i) (0 ("<bárra>"i)) ;

SELECT ("distanse"i) (0 ("<mátki>"i) LINK *0 ("<kilomehter>"i)) ;
SELECT:fallback ("reise"i) (0 ("<mátki>"i)) ;

SELECT ("pris"i) (0 ("<bálkkašupmi>"i) LINK -1 Prop) ;
SELECT:fallback ("pris"i) (0 ("<bálkkašupmi>"i)) ;

SELECT ("arrangement"i) (0 ("<lágideapmi>"i) + Pl) ;
SELECT:fallback ("organisering"i) (0 ("<lágideapmi>"i)) ;


SELECT:fallback ("publisering"i) (0 ("<almmuheapmi>"i)) ;


SELECT ("forhold"i) (0 ("<dilli>"i) LINK -1 ("<buorre>"i) LINK -1 COPULAS) ; # tid
SELECT ("") (0 ("<dilli>"i) LINK -1 ("<láhčit>"i)) ; # 
SELECT:fallback ("situasjon"i) (0 ("<dilli>"i)) ;


SELECT ("grunn"i) (0 ("<ágga>"i) LINK -1 ("<navdit>"i)) ;
SELECT:fallback ("argument"i) (0 ("<ágga>"i)) ;


SELECT:fallback ("utredning"i) (0 ("<guorahallan>"i)) ;

SELECT:fallback ("bransje"i) (0 ("<suorgi>"i));


SELECT:fallback ("start"i) (0 ("<vuolgga>"i)) ;

	
SELECT ("villrein"i) (*-1 ("<bivdit>"i) OR ("dápmat"i) OR ("vuojihit"i)) (0 ("<goddi>"i));
SELECT ("komite"i) (0 ("<goddi>"i) LINK -1 Cmp);
SELECT:fallback ("villrein"i) (0 ("<goddi>"i));

SELECT ("grunnlag"i) (0 ("<vuođđu>"i)) (0 Ess LINK 1 Inf);
SELECT ("grunn"i) (0 ("<vuođđu>"i)) (0 Ess);
SELECT:fallback ("grunnlag"i) (0 ("<vuođđu>"i));

SELECT ("avdeling"i) (0 ("<ossodat>"i)); # parkorp har masse «avdeling»-døme, ingen «andel»

SELECT ("grad"i) (0 ("<muddu>"i)) (NOT -1 Ord) ;

SELECT ("arrangement"i) (0 ("<dilálašvuohta>"i)) (-1 Sem/Time);
SELECT ("forhold"i) (0 ("<dilálašvuohta>"i)) (NOT -1 ("<virggálaš>"i)) (NOT -2 ("<virggálaš>"i));
SELECT:fallback ("situasjon"i) (0 ("<dilálašvuohta>"i)) ;

# áddjá: bestefar vs gamling
SELECT ("gamling"i) (0 ("<áddjá>"i) LINK -1 Num LINK NOT *-1 <hab>);
SELECT ("gamling"i) (0 ("<áddjá>"i) LINK -1 Attr );
SELECT ("bestefar"i) (0 ("<áddjá>"i));
## Mus leat guokte ádjá.
## Doppe čohkkába guokte ádjá.

SELECT ("opplukk"i) (0 ("<čuoldin>"i));

SELECT ("fattigdom"i) (0 ("<geafi>"i) LINK 0 N);

# áhkku: bestemor vs eldre kvinne
REMOVE ("bestemor"i) (0 ("<áhkku>"i) LINK -1 Num LINK NOT *-1 <hab>);
SELECT ("bestemor"i) (0 ("<áhkku>"i));
## Mus leat šiega áhkku.
## Doppe čohkkába guokte áhkku.


# beaivi 0 = dag, 1 = sol
SELECT ("sol"i) (0 ("<beaivi>"i) LINK 0* ("<báitit>"i) OR ("<luoitádit>"i) OR ("<goardit>"i) OR ("<ligget>"i));
## Beaivi báitá.
SELECT ("sol"i) (0 ("<beaivi>"i) LINK 0 @>N LINK 1 ("<bárdni>"i) OR ("<mánná>"i) OR ("<nieida>"i)); 
SELECT:fallback ("dag"i) (0 ("<beaivi>"i));

SELECT ("oppmerksomhet"i) IF (0 ("<fuomášupmi>"i)) (*-1 ("<giddet>"i) OR ("<olahit>"i) OR ("<oažžut>"i) OR ("<sávakeahtes>"i) BARRIER SV-BOUNDARY) ;
SELECT:fallback ("ide"i) IF (0 ("<fuomášupmi>"i)) ;

SELECT ("institutt"i) IF (0 ("<goahti>"i) LINK -1 ("<.*dieđa>"ri)  OR ("<.*fága>"ri)  OR ("<.*dutkan>"ri)   OR ("<servodat>"i) OR ("<jođihit>"i)) ;
SELECT ("institutt"i) IF (0 ("<goahti>"i) LINK 1 ("<jođiheaddji>"i) OR ("<struktuvra>"i)) ;
SELECT ("institutt"i) IF (0 ("<goahti>"i) LINK *0 ("<.*dutkan>"ri) OR ("<.*fága>"ri)  OR ("<.*dieđa>"ri)  OR ("<.*oahppu>"ri)  OR ("<.*oahpahus>"ri)) ;
SELECT:fallback ("gamme"i) IF (0 ("<goahti>"i)) ;


# luohkká 0 = bakke, 1 = klasse
SELECT ("klasse"i) (0 ("<luohkká>"i) LINK *0 ("<oahpaheaddji>"i) OR ("<.*skuvla>"i) OR ("<skuvlamátki>"i) OR ("<čoahkkin>"i));
SELECT ("klasse"i) (0 ("<luohkká>"i) LINK -1 ("<deaddu>"i));
SELECT ("bakke"i) (0 ("<luohkká>"i) LINK *-1 ("<fierrat>"i) BARRIER SV-BOUNDARY);


SELECT ("klasse"i) (0 ("<luohkká>"i) LINK -1 Num OR Ord OR @>N OR Sem/Edu);
# Son lea vuosttaš luohkás.
# Son lea 1A luohkás.
# Biera vázzá sámi luohkás.
# Biera vázzá sámegiel luohkás.
# Bireha luohkás leat eanaš nieiddat.
# Mu luohkás leat vihtta nieidda ja golbma bártni.
# Earát su luohkás ledje juo vissa njeallje siiddu su ovdalis matematihkka-girjjis.

SELECT:fallback ("bakke"i) (0 ("<luohkká>"i));

# diibmu 0 = time, 1 = klokke
SELECT ("klokke"i) (0 ("<diibmu>"i) OR ("<tiibmu>"i) OR ("<tiibma>"i) LINK 1 Num OR Ord) ;
# Boahtte gaskavahku diibmu 11.00 rahpá kurdarbearaš Mehidi Kárášjohkii ođđa kaféa.
SELECT ("klokke"i) (0 ("<diibmu>"i)  OR ("<tiibmu>"i) OR ("<tiibma>"i) LINK *1 ("<sirdit>"i) LINK *1 ("<diibmu>"i)  OR ("<tiibmu>"i) OR ("<tiibma>"i) OR ("<goas>"i)) ;
# Diibmu guovttis galgá diimmu sirdit ovtta diimmu ovddos.
# eai muitte riekta guđe guvlui diimmu galgá sirdit goas.
# Ord because of possible incorrect analysis of Num + punctuation.
SELECT ("klokke"i) (0 ("<diibmu>"i) OR ("<tiibmu>"i) OR ("<tiibma>"i) LINK *0 ("<ollu>"i) OR ("<geahččat>"i) OR ("<čuodjat>"i)) ;
# Ollugo diibmu lea.
SELECT ("klokke"i) (0 ("<diibmu>"i) OR ("<tiibmu>"i) OR ("<tiibma>"i) LINK 1 COPULAS LINK *1 Num) ;
# Dál diibmu lea fargga vihtta.
SELECT:fallback ("time"i) (0 ("<diibmu>"i) OR ("<tiibmu>"i) OR ("<tiibma>"i));

# hávvi Gen as sår is the exceptional/rare case:
SELECT ("sår"i) (0 ("<hávvi>"i) LINK 0 Gen) (1 ("<vuostá>"i));
SELECT ("gang"i) (0 ("<hávvi>"i) LINK 0 Gen);
SELECT ("sår"i) (0 ("<hávvi>"i) LINK NOT 0 Gen);
# genitive háve is always gang in corpus, and much more frequent than «sår»

# miella 0 = sinn, 1 = oppfatning, 2 = behag
SELECT ("oppfatning"i) (0 ("<miella>"i) LINK 0 Loc LINK -1 @>N) ;
SELECT ("lyst"i) (0 ("<miella>"i)  LINK 0 Nom LINK -1 ("<leat>"i)) ;
SELECT ("enig"i) (0 ("<miella>"i)  LINK 0 Loc LINK -1 ("<leat>"i) LINK 0 ConNeg) ;
SELECT ("lyst"i) (0 ("<miella>"i)  LINK 0 (<ext>)) ;

SELECT:fallback ("sinn"i) (0 ("<miella>"i));


# gonagas 0 = konge, 1 = kong
SELECT ("kong"i) (0 ("<gonagas>"i) LINK 1 Sem/Mal)(NOT -1 Cmp) ;
# Konge Harald => Kong Harald
SELECT:fallback ("konge"i) (0 ("<gonagas>"i));


# johtu 0 = fart, 1 = bevegelse, 2 = gang
SELECT ("veg"i) (0 ("<johtu>"i) LINK 0 Loc LINK 1 Sem/Plc + Ill) ;
SELECT ("gang"i) (0 ("<johtu>"i) LINK 0 Loc) ;
SELECT ("gang"i) (0 ("<johtu>"i) LINK 0 Ill) ;
SELECT ("omsetning"i) (0 ("<johtu>"i) LINK -1 Sem/Food) ;
# til farten => i gang
SELECT:fallback ("fart"i) (0 ("<johtu>"i));

# oktavuohta 0 = kontakt, 1 = henvendelse, 2 = forbindelse, 3 = sammenheng
SELECT ("sammenheng"i) (0 ("<oktavuohta>"i)  LINK 0 Loc)(NEGATE *1 Com BARRIER NOT-NPMODADV) ;
SELECT ("forbindelse"i) (0 ("<oktavuohta>"i) LINK 1 (Sg Loc) OR Ill) ;
SELECT ("forbindelse"i) (0 ("<oktavuohta>"i @<ADVL Sg)) ;
# dan oktavuođas go => i den forbindelse når
SELECT ("kontakt"i) (0 ("<oktavuohta>"i) LINK 0 (<ext>)) ;
SELECT ("kontakt"i) (0 ("<oktavuohta>"i) LINK -1 BOS LINK 2 EOS) ;
#SELECT ("kontakt"i) (0 ("<oktavuohta>"i) LINK 0 Loc LINK -2 V) ;
SELECT ("kontakt"i) (0 ("<oktavuohta>"i) LINK *-1 ("<váldit>"i)) ;
SELECT ("sammenheng"i) (0 ("<oktavuohta>"i) LINK 1 Loc LINK -2 Num or Gen) ; #?
# máŋgga oktavuođas => i mange sammenhenger
# máŋggain oktavuođain => i mange sammenhenger
SELECT ("forhold"i) (0 ("<oktavuohta>"i) LINK -1 ("<lagaš>"i) OR ("<lagas>"i)) ; #?
SELECT:fallback ("kontakt"i) (0 ("<oktavuohta>"i));



SELECT ("husdyr"i) IF (0 ("<šibit>"i)) ;

# soadji 0 = vinge, 1 = skovl, 2 = fløy, 3 = erme
SELECT ("fløy"i) (0 ("<soadji>"i)) (0* Sem/Org);
# Bellodaga radikála soajis bođii garra proteasta.

SELECT ("erme"i) (0 ("<soadji>"i)) (0* Sem/Clth);
# Mu báiddi soajis lea ráigi.
SELECT:fallback ("vinge"i) (0 ("<soadji>"i));

# searvi 0 = forening, 1 = selskap
SELECT ("forening"i) (0 ("<searvi>"i)) (-1 ("<sápmi>"i));
SELECT:fallback ("forening"i) (0 ("<searvi>"i));

# stuibmi 0 = bråk, 1 = konflikt
SELECT ("bråk"i) (0 ("<stuibmi>"i) LINK -1 Prop) ;
SELECT:fallback ("bråk"i) (0 ("<stuibmi>"i));

# goddi 0 = komite, 1 = villrein
#SELECT ("goddi"i) ("goddi:1"i) ("goddi"i) (NOT 0/1 (*)) ;

# diehtu 0 = informasjon,  3 = beskjed
SELECT ("beskjed"i) (0 ("<diehtu>"i) LINK 0 Nom OR Acc) (*0 ("<mobiilatelefuvdna>"i) OR ("<mobiila>"i) OR ("<rápmi>"i)) ;
SELECT ("beskjed"i) (0 ("<diehtu>"i) LINK 0 Sg + Acc) (*0 ("<sáddet>"i) OR ("<čállit>"i) OR ("<lohkat>"i)) ;
## Lihkus juste de civkkádii mobiltelefuvnnas sutnje diehtu.
## Lei Ájlin gii sáddii dieđu.
SELECT:fallback ("viten"i) (0 ("<diehtu>"i) LINK -1 ("<árbevirolaš>"i));
SELECT ("informasjon"i) (0 ("<diehtu>"i) LINK 0 Pl);
SELECT ("informasjon"i) (0 ("<diehtu>"i) LINK *-1 Loc BARRIER S-BOUNDARY);
SELECT:fallback ("viten"i) (0 ("<diehtu>"i));


SELECT ("hus"i) (0 ("<stohpu>"i) LINK *0 ("<stohpoeaiggát>"i));
SELECT ("hus"i) (0 ("<stohpu>"i) LINK 0 Pl);
SELECT ("hus"i) (0 ("<stohpu>"i) LINK *0 ("<buollit>"i));
SELECT:fallback ("stue"i) (0 ("<stohpu>"i));

# lávki 0 = skritt, 1 = løk
SELECT ("løk"i) (0 ("<lávki>"i))  (*1 ("<leat>"i) LINK 0 VFIN LINK *1 ("<čuohppat>"i) OR ("<čuohpadit>"i) LINK 0 PrfPrc) ;
## 	Danne go 	lávki 	lea antiseptalaš , de dat veahkeha go lea čuohpadan , gaskkahallan dahje go leat nárážat .
##  Lilja 	lávkkit 	vuovdit !
SELECT ("skritt"i) (0 ("<lávki>"i)) ;
## Sámi vuođđoskuvlaoahpaheaddjioahpu láhkaásahus lea 	lávkin 	dan guvlui , mainna sámiid iešmearrideapmi dahkko duohtan ja čalmmustahttojuvvo Norggas ja eará Davviriikkain .
## Joavkku bealis deattuhuvvo ahte raporta lea vuosttaš 	lávki 	stuorát ovddidanbarggus .
SELECT:fallback ("skritt"i) (0 ("<lávki>"i));


# gorka 0 = kork (badekar, flaske etc.), 1 = dupp, 2 = kjeft
SELECT ("kjeft"i) (0 ("<gorka>"i) OR ("<goarka>"i))  (*-1 ("<doallat>"i)) (*1 ("<gitta>"i)) ;
## 	Go ain rádjá ja garruda, de Vállán meron rogáda: «Doala gorkkat gitta!» Gohčui orrut jaska billa vuolin.
SELECT ("kjeft"i) (0 ("<gorka>"i) OR ("<goarka>"i))  (-1 ("<gallji>"i)) ;
## Mannan ija don leat mu buoremus vuojána gaikkodan , biro , beargalat , helveha sáhtánas , galjes 	gorka 	, guhkes bátni !
#SELECT ("kjeft"i) (0 ("<gorka>"i))  (-1 Sem/Hum LINK 0 Gen) ;
#SEMTAG rule: Hum
SELECT ("dupp"i) (0 ("<gorka>"i) OR ("<goarka>"i)) (*-1 ("<siibma>"i)) ;
##	Siimma giddejedje erenoamáš 	korkii.
#SEMTAG rule: Tool-catch
	SELECT ("kork"i) (0 ("<gorka>"i) OR ("<goarka>"i)) ;
## Son sruvii 	goarkka 	boahtalii ja rájai loahpa boahtte háve várás . - kork.
## Olmmoš oppaáigge guoraha 	goarkkaid 	čázis.
SELECT:fallback ("kork"i) (0 ("<gorka>"i));

# johtolat 0 = trafikk, 1 = flyttevei
SELECT ("trafikk"i) (0 ("<johtolat>"i) LINK NOT 0 Pl) (-1 ("<ollu>"i) OR ("<eanet>"i));
## 1938 rádjái lei Porsáŋggu-Kárášjoga máđija ráigge eanemus 	johtolat 	, go Kárášjoga ja Suoma gaskka vudje eanas dálvet , muhto maŋŋel go Kárášjohgeaidnu gárvánii.
SELECT ("flyttevei"i) (0 ("<johtolat>"i) LINK 0 Pl) ;
## 	Ii leat dasto čielggas ledje go dát vuotnasápmelaččat dalle juo álggahan guhkit johtolagaid.
SELECT ("flyttevei"i) (0 ("<johtolat>"i) LINK *0 ("<.*orohat>"ri)) ;
## Oallugat deattuhedje man deaŧalaš 	johtolat 	lei boazodollui . ???
## Dákkár johtin ja 	johtolat 	gaskal dálveorohagaid siseatnamis ja geasseorohagaid mearragátteváriin lea ekologalaš heiveheapmi mii gottiin lei ja masa boazobargi lea iežas eallima heivehan .
## lea šaddan nu ahte hámmandilálašvuođat ja guollebivdohámmana guovddáš sajádat riddoruvttu985 johtolaga ektui lea deaŧalaččat go lagamus 	johtolat 	guollebáikái .
SELECT:fallback ("trafikk"i) (0 ("<johtolat>"i));

#Geaidnopolitiijat leat disdaga dárkkistan johtolaga Stállogárgotuneallas

# vealgi 0 = gjeld, 1 = lån
SELECT ("lån"i) (0 ("<vealgi>"i) LINK 0 Pl) (*-1 ("<dárbbašit>"i)) ;
## Gáivuona suohkan áigo nannet ruhtadeamiid dakkár biergasiidda , jos olbmot dárbbašit 	velggiid 	go galget ruhtadit oastimiid .
SELECT ("lån"i) (0 ("<vealgi>"i) LINK 0 Pl) (*1 ("<guhkesáiggivealgi>"i)) ;
## Dat 	vealgi 	lea guhkesáiggivealgi , nu ahte dat gal mákso dál ruovttoluotta nu movt galgá .
## Fylkkagieldda guhkesáiggi 	vealgi 	lea lassánan 289,3 miljovnnain ruvnnuin 2009 rájes 2010 rádjái .
## Vealggit lassánedje sullii 8 mill kr , mas oanehisáiggi 	vealgi 	lassánii sullii 4 mill kr.
## Mii mihtidit likviditehta go geahččat differánssa gaskal johtoomiid ( kássa // báŋkui sisabidju ja oanehisáigge bearramat ) ja oanehisáigge 	velggiid 	, man gohčoda bargokapitálan .
SELECT:fallback ("gjeld"i) (0 ("<vealgi>"i));

# goansta 0 = kunst, 1 = triks, 2 = ferdighet, 3 = påfunn

SELECT ("påfunn"i) (0 ("<goansta>"i)) (-1 ("<buorre>"i)) ;
## Juste dál hálidivččet atnit eambbo áiggi iežat guoibmái , muhto dat liikká ii leat nu buorre 	goansta.
## Ii lean várra šat nu buorre 	goansta 	vuodjit , go eaiggát lei sihkkarit lensmánnái dieđihan .  ---påfunn

SELECT ("ferdighet"i) (0 ("<goansta>"i) LINK 0 Pl) (*-1 ("<ieš>"i)) ;
## Fuobmájin iežan 	goansttaid 	ja álgen hárjehallat viesus .

SELECT ("triks"i) (0 ("<goansta>"i)) (*-1 ("<fuobmát>"i) OR ("<dahkat>"i)) ;
## Áltálaš Jon Røkenes lea fuobmán álkit 	goansttaid 	ráhkadit dola . ---triks (måtene)
## De jearrá rieban bussás : – Galle 	goanstta 	leat dus ?
## Muhto go son manná vuostebiggii , dahje go son diehtá , gosa dan báikkis háliida boazu , de son manná ja guldala ja dainna 	goansttain 	gávdná ealu .
## Filbmemis dahket ollu 	goansttaid 	, nugohčoduvvon filmtriks ja muhtomin eai sáhte diktit neavttáriid neaktit jus ballet sin lápmahuvvat .

SELECT ("kunst"i) (0 ("<goansta>"i)) ;
## Dalle ii leat mihkke ge 	goansttaid 	jeakki rasttildit . (maybe translated in singular?)
## – Rektor doppe lei hui mielas ja oahpaheaddjit maiddái , ja go álggiimet hupmat dan birra , de ii orron goanstage 	.
SELECT:fallback ("kunst"i) (0 ("<goansta>"i));

# jietna 0 = stemme, 1 = lyd

SELECT ("lyd"i) (0 ("<jietna>"i)) (1 CC OR COMMA LINK 1 ("<govva>"i)) ;
## Ođđaáigásaš servodagas lea dárbbašlaš máhttit hálddašit iešguđet mediaid ja teavsttaid main leat ollu iešguđetlágan oasit biddjon oktii , nugo čála , 	jietna 	ja govva ja seammás oaidnit oktavuođaid giela ja árbemáhtu gaskkas .
## Multifunkšunála oahpponeavvuin sáhttet leat olu iešguđetlágán komponeanttat ja heivehuvvon oasit, nugo jienat, govat ja teavsttat , eaige dat dárbbaš leat dušše ovtta vásedin ulbmila váste ráhkaduvvon .
SELECT ("lyd"i) (0 ("<jietna>"i)) (-1 Gen LINK 0 ("<luondu>"i) OR ("<skuter>"i));
## Go gullá luonddu jienaid, go oaidná - de sáhttá maid bidjat sániid sihke jienaide ja dasa maid oaidná luonddus .
#Sem/Plc OR Sem/Veh

SELECT ("lyd"i) (0 ("<jietna>"i)) (-1 ("<geaidut>"i) OR ("<ráhkadit>"i));
## Skutera 	jietna 	juoga sajis gullo .
## Nils Petter Molvær geaidu jienaid iežas trompehtain .
## Eará ii ávkkut , nugo čuoikabalddonasat mat ráhkadit jiena, lohká divredutki Preben Ottesen .
## De soai gullaba issoras ártegis 	jiena 	.

SELECT ("stemme"i) (0 ("<jietna>"i));
## - Sámediggi cealká earret eará ahte dat stuora erohusat mat leat dan ektui galle 	jiena 	leat juohke áirasa duohken geanohuhttet Sámedikki lobálašvuođa sihke sámi servodagas ja eará eisseválddiid ektui .
## ( 1 ) Jus jienasteaddji ii goastta válgalatnjii , de sáhttá son addit 	jiena 	guovtti jietnavuostáváldái dastán válgalanja olggobealde .
SELECT:fallback ("stemme"i) (0 ("<jietna>"i));

SELECT:fallback ("problem"i) (0 ("<čuolbma>"i));


# vuoján 0 = kjøretøy, 1 = kjørerein

LIST VUOJAN-ANI-WORDS = ("<čearpmat>"i) ("<varit>"i) ("<vuoitit>"i) ("<boazu>"i) ("<gabba>"i) ("<reahka>"i) ("<juovlanigá>"i) ("<juovlastállu>"i) ("<heargi>"i) ("<sprinta>"i) ("<eallu>"i) ("<SHL-#máilmmicup"i) ("<reahkavuodjin>"i) ("<gonagasgilvu>"i) ("<SVL-hearge#cup>"i) ("<heargevuodjingilvu>"i) ;
#possibly semantic category Ani-reindeer usefull?
LIST VUOJAN-ANI-ADJ = ("<sávri>"i) ("<buorre>"i) ("<sápmi>"i) ("<falli>"i) ("<nuorra>"i) ("<beakkán>"i) ;
LIST VUOJAN-ANI-V = ("<biebmat>"i) ("<hárjehahttit>"i) ("<njuovvat>"i) ("<ruohttat>"i) ("<vuoitit>"i);

SELECT ("kjørerein"i) (0 ("<vuoján>"i)) (*0 VUOJAN-ANI-WORDS OR VUOJAN-ANI-V) ;
#SELECT ("kjørerein"i) (0 ("<vuoján>"i) LINK 0 Ess) ;
SELECT ("kjørerein"i) (0 ("<vuoján>"i)) (-1 VUOJAN-ANI-ADJ + Attr) ;
## Bikko Máhte luohti lea dovddus Sančuari hámis “ Stállangazza ” , mii lei beakkán vuoján 	Bikko Máhtes . #disambiguation rule needs to fix beakkán analysis
## Dat lei erenoamáš fales vuoján , dadjá Eira , dan botta go njuovvá iežas vuojána máid massii .
SELECT ("kjørerein"i) (0 ("<vuoján>"i)) (1 COMMA LINK 1 ("«^.*"r));
## Vuosttaš máilmmiolahus John Inge Eiras dán dálvvi iežas vuojániin, «Limoin».
## Máhtte Niillas Gaup 	vuoján 	Ieš vuittii reahkavuodjima ja Máret Áile Sara vuoján Dolgii vuittii ges sabetvuodjimiid Sámi Grand Prix gilvvuin  beassášlávvordaga Guovdageainnus .
## Nils Henrik Eira vuojániin Summitiin , mas lei buoremus áigi olles gilvvuin ja oaččui ge Máze Gilisearvvis dan ovddas  dan stuorámus pokála .
## Sara vuot čájehii ahte son lea okta Sámi buoremus vuddjiin ja sus leat buorre 	vuoján, go mannan vahkkoloahpa vuittii SVL-heargecupa maŋemus vuodjima Mázes .
## Dát ledje várra 	vuojánat 	ja geahččobohccot .
## Ámtta 1866-70 viđajagidieđáhusas muitaluvvo boazodoalu birra ahte riddosuohkaniin ledje olbmuin bohccot 	vuojánin 	, dahje mearrasápmelaččat ledje árben bohccuid boazosáminieiddaiguin náitalemiid bokte .
## Guhkes gaskkaid ii leat gánnáhahtti dákkar 	vuojániiguin 	vuodjit .  - fartøy
## Diesel 	vuojánat 	main ollislaš deaddu lea 3500 gilus gitta 12000 gilui 990,- ru. .
## Njealjejuvllat 	vuoján 	roasmmohuvai vehá .
## Registrerekeahtes 	vuojániid 	lea muđui váttis doalvut tuollu meattá , Nieminen muitala .
## – Dát lei baicce somá , láhttestii Vicky Tauli-Corpus , ja leaikkastalai go lei sihke beassan vuodjit Juovlastálu 	vuojániin 	ja borrat bohccobierggu . ???
SELECT:fallback ("kjøretøy"i) (0 ("<vuoján>"i));


# bárti 0 = problem, 1 = uhell, 2 = skade, 3 = ulykke

SELECT ("skade"i) (0 ("<bárti>"i)) (-1 ("<dagahit>"i)) ;
## Dálki lei ge ikte nu garas Finnmárkkus ahte dagahii 	bárttiid 	.  --- skapte skader

SELECT ("uhell"i) (0 ("<bárti>"i)) (-1 ("<oalle>"i)) ;
## - Lei oalle 	bárti 	mus odne , go láhppen ruhtaburssa vuovdái , ja dál ii leat ruhtabinná ge .  -- uhell


SELECT:fallback ("problem"i) (0 ("<bárti>"i));
## Ollu fierbmeguolásteaddjit erenoamážit Nuorta-Finnmárkkus leat gártan stuorra 	bárttiide 	go gonagasreabbá lea darvánan guollefirpmiide .  -- problemer
## Dasa lassin čatnasa stuorit riska 	bárttiide 	, roasmmuhuvvamiidda ja lihkuhisvuođaide alkohola návddašemiin . -- ulykke
## Porsáŋggu suohkanis leat ovdal leamaš 	bárttit 	go olbmot eai mávsse rehkegiid suohkanii rievttes áigái .  - problemer
## Gilvaleaddjit lávejit vaikko makkár 	bárttiid 	vásihit go leat mátkkis , muhto dábálaččat dat gal manná bures .
## Olu vuoddjit leat vásihan ahte sii leat vajálduhttán juste dan mii dalle adnui go sii bohte 	bárttiid 	sisa , vaikko lei geahččalan ráhkkanit nu bures go vejolaš . - havner i problemer
## – Mus lea seamma 	bárti 	, viessu ii oba lieggange .  - problem
## – Mis lea dávjá 	bárti 	gávdnat rievttes viesu dušše čujuhusa vuođul .  -- problem
## Son lávii hui dávjá iežas dagahit 	bárttiid 	sisa , iešguđetlágan bárttiid sisa , muhto dábálaččat dat manai bures loahpas . -- uheldige situasjoner
## Danin sáhttá stuorit vejolašvuohta leat boahtit 	bárttiid 	sisa , lohká Buljo .  -- havne i problemer



# riekkis 0 = sirkel Geom and Org, 1 = dekk Obj

SELECT ("dekk"i) (0 ("<riekkis>"i)) (1 CC LINK 1 ("<juvla>"i)) ;
SELECT ("dekk"i) (0 ("<riekkis>"i)) (-1 ("<biila>"i) LINK 0 Gen) ;	# Sem/Veh instead of biila
## Iskka iežat biilla ovdal go vuoddját gosage , earenoamžiid 	rieggáid 	dahje juvllaid . (Sem/Obj)
## Dalle sii masset vejolašvuođa Sámi bargguid ektui ja 	riekkis 	giddana Sámi guvlui máhccamis , Riitta Orti-Berg ( 41 ) máinnaša .
## – Oainnát , piikkat leat darvánan ja hárjánan vissis guvlui jorrat ja jus bidjá 	rieggá 	jorrat nuppe guvlui , de čolgada eret daid piikkaid .

SELECT ("sirkel"i) (0 ("<riekkis>"i)) ;
## Jose Moncada álggahii kurssa nu go álgoálbmogat dávjá dahket , ahte čuožžut 	riekkisin 	, ja nu ovttastahttit fámuid ja dagahit oktavuođa .
## Álggos galgá ráhkadit stuora 	rieggá 	muohttagii . (Sem/Geom)
## Sámi váhnemiid 	rieggá 	ulbmilin lea , maid sii ieža , mo sii ieža háliidit ja mat vejolašvuođaid sis lea ovddidit ja loktet sápmelaš kultuvrra ieža .  (Sem/Org)
## Álggos ráhkadii Mihkkal hui unna 	rieggáža 	, ja dan olggobeallái fas veaháš stuorit rieggá .
## OVTTAS : Ruošša álgoálbmotguossit bovdejedje gaskan konseartta olbmuid šilljui dánsut 	rieggás 	.
## Oválavuodjima loahppavuorus golbma falimusa vulget oktanaga čáhcebána ala ja vudjet vihtta 	rieggá 	boijaid birra .
SELECT:fallback ("sirkel"i) (0 ("<riekkis>"i));

SELECT:lang-speakers (".*talende"ri) (0 Sem/Lang LINK 0 N + Pl) ;
# not sure about this analysis, but it does give nicer translations

SELECT ("nok"i) (0 ("<doarvi>"i)) (0 Ill) ;
SELECT:fallback ("mengde"i) (0 ("<doarvi>"i)) ;

SELECT ("milepæl"i) (0 ("<olahus>"i)) (1 Ill LINK 0 HUMAN OR Pron) ;
SELECT:fallback ("rekord"i) (0 ("<olahus>"i)) ;



SELECT ("middel"i) (0 ("<doarjja>"i)) (-1 ("<ruoná>"i)) ;
SELECT:fallback ("støtte"i) (0 ("<doarjja>"i)) ;

SELECT ("diakritisk tegn"i) (0 ("<dárkka>"i)) (*-1 ("<merket>"i)) ;
SELECT:fallback ("pålitelighet"i) (0 ("<dárkka>"i)) ;


SELECT ("stamme"i) (0 ("<mátta>"i)) (-1 Cmp) ;
SELECT ("sør"i) (0 ("<mátta>"i) LINK 0 Sg) (1 Prop or Sem/Plc or ("<sápmi>"i)) ;
SELECT ("sør"i) (0 ("<mátta>"i) LINK 0 Sg) (0 Cmp/Splitr) ;
SELECT:fallback ("sør"i) (0 ("<mátta>"i)  LINK 0 Sg)  ;	
SELECT ("stamme"i) (0 ("<mátta>"i) LINK 0 Pl) ;

SELECT ("samskipnad"i) (0 ("<ovttastus>"i)) (-1 ("<studeanta>"i)) ;
SELECT:fallback ("forbindelse"i) (0 ("<ovttastus>"i))  ;	

SELECT:fallback ("nordmann"i) (0 ("<dáža>"i))  ;	

SELECT ("handskrift"i) (0 ("<giehtačálus>"i) LINK *0 ("<bábir>"i) + Loc)  ;	
SELECT:fallback ("manus"i) (0 ("<giehtačálus>"i))  ;	


SELECT ("press"i) (0 ("<deaddu>"i) + Acc) (*-1 ("<bidjat>"i) OR ("<bargat>"i)  BARRIER SV-BOUNDARY) ;
SELECT:fallback ("tyngde"i) (0 ("<deaddu>"i)) ;
SELECT:fallback ("byrde"i) (0 ("<noađđi>"i)) ;


SELECT ("premie"i) (0 ("<vuoitu>"i) LINK 0 Cmp) (1 Sem/Veh) ;
SELECT ("gevinst"i) (0 ("<vuoitu>"i)) (-1 ("<oppalaš>"i) OR ("<fasket>"i)) ;
SELECT ("gevinst"i) (0 ("<vuoitu>"i)) (*0 CURRENCY OR ("<goastadit>"i)  OR ("<oažžut>"i)  OR ("<geiget>"i)  OR ("<fasket>"i)) ;	
SELECT ("gevinst"i) (0 ("<vuoitu>"i) LINK -1 ("<smávis>"i) OR ("<stuoris>"i))  ;	
SELECT:fallback ("seier"i) (0 ("<vuoitu>"i));

SELECT:finsk ("finsk"i) (0 ("<Suopma>"i) LINK 0 Gen LINK 1 ("<bealde>"i) OR ("<bealli>"i) OR ("<beallai>"i));
SELECT:fallback ("Finland"i) (0 ("<Suopma>"i));

SELECT:svensk ("svensk"i) (0 ("<Ruoŧŧa>"i) LINK 0 Gen LINK 1 ("<bealde>"i) OR ("<bealli>"i) OR ("<beallai>"i));
SELECT ("svensk"i) (0 ("<Ruoŧŧa>"i) LINK 0 @>N)(NEGATE -1 Num LINK NOT 2 N + Sg + Gen OR N + Sg + Acc);
SELECT:fallback ("Sverige"i) (0 ("<Ruoŧŧa>"i));

SELECT:norsk ("norsk"i) (0 ("<Norga>"i) LINK 0 Gen LINK 1 ("<bealde>"i) OR ("<bealli>"i) OR ("<beallai>"i));

SELECT:fallback ("Sverige"i) (0 ("<Norga>"i));

SELECT:russisk ("russisk"i) (0 ("<Ruošša>"i) LINK 0 Gen LINK 1 ("<bealde>"i) OR ("<bealli>"i) OR ("<beallai>"i));

SELECT:fallback ("Sverige"i) (0 ("<Ruošša>"i));

SELECT:fallback ("hvor mange"i) (0 ("<gallis>"i) + N);

SELECT ("levning"i) (0 ("<bázahus>"i) LINK -1 HUMAN OR ("<rumaš>"i));
SELECT:fallback ("avfall"i) (0 ("<bázahus>"i));



SELECT ("sentrum"i) (0 ("<guovddáš>"i) LINK 0 Sg + Loc)(*-1 Sem/Org + Nom);
SELECT ("fokus"i) (0 ("<guovddáš>"i) LINK 0 Sg + Ill) (-1 ("<bidjat>"i));
SELECT ("fokus"i) (0 ("<guovddáš>"i) LINK 0 Sg + Loc) (*-1 ("<.*vuohta>"r) OR Sem/Rule OR ("<jurddašeapmi>"i) OR ("<árvu>"i) OR Sem/Semcon  OR Sem/Domain + Gen);
SELECT ("sentrum"i) (0 ("<guovddáš>"i) LINK 0 Sg + Loc)(*-1 ("<leat>"i) BARRIER SV-BOUNDARY);
SELECT:fallback ("senter"i) (0 ("<guovddáš>"i));

SELECT:fallback ("skive"i) (0 ("<skearru>"i));
SELECT:fallback ("jernbane"i) (0 ("<ruovDemáđidja>"i));

SELECT ("løype"i) (0 ("<máđidja>"i) LINK -1 ("<dihkká>"i));
SELECT:fallback ("vei"i) (0 ("<máđidja>"i));


SELECT ("pensjon"i) (0 ("<ealáhat>"i) LINK 0 Ill LINK *-1 ("<mannat>"i) OR ("<báhcit>"i) BARRIER SV-BOUNDARY);
SELECT:fallback ("beite"i) (0 ("<skearru>"i));


SELECT:part ("part"i) (0 ("<bealli>"i) LINK *1 ("<deaivvadit>"i) OR ("<soabadit>"i) BARRIER SV-BOUNDARY);
SELECT:part ("part"i) (0 ("<bealli>"i) LINK -1 ("<bargoeallin>"i) OR ("<ášši>"i) OR ("<nubbi>"i));
SELECT:side ("side"i) (0 ("<bealli>"i) LINK *-1 ("<muitalit>"i) OR ("<čájehit>"i)  BARRIER SV-BOUNDARY);
SELECT:side ("side"i) (0 ("<bealli>"i) LINK -1 A + @>N OR Prop + @>N);
SELECT:side ("side"i) (0 ("<bealli>"i) LINK 0 Pl);
SELECT:side ("side"i) (0 ("<bealli>"i) LINK *1 Sem/Domain + Loc);
SELECT:halvpart ("halvpart"i) (0 ("<bealli>"i) LINK 1 N + Pl);
SELECT:fallback ("halvpart"i) (0 ("<bealli>"i));

SELECT:fallback ("hete"i) (0 ("<báhkka>"i));

SELECT ("ved"i) (0 ("<muorra>"i) LINK 0 Loc);
SELECT ("ved"i) (0 ("<muorra>"i) LINK *0 ("<cahkkehit>"i) OR ("<omman>"i) OR ("<uvdna>"i) OR ("<goikat>"i) OR ("<buollat>"i) OR ("<buollát>"i));
SELECT ("ved"i) (0 ("<muorra>"i) LINK -1 ("<njuoskkas>"i));
SELECT:fallback ("tre"i) (0 ("<muorra>"i));

SELECT:fallback ("fremføring"i) (0 ("<ovdanbuktin>"i));


SELECT ("glad"i) (0 ("<illu>"i) LINK 0 Loc);
SELECT:fallback ("glede"i) (0 ("<illu>"i));

SELECT ("redd"i) (0 ("<ballu>"i) LINK 0 Loc);
SELECT:fallback ("frykt"i) (0 ("<ballu>"i));


SELECT ("tale"i) (0 ("<ságat>"i) LINK 0 Ill);
SELECT ("tale"i) (0 ("<ságat>"i) LINK 0 Loc LINK -1 HUMAN);
SELECT:fallback ("nyhet"i) (0 ("<ságat>"i));

SELECT ("engasjement"i) (0 ("<mokta>"i) LINK *0 ("<buolli>"i) OR ("<buollát>"i) OR ("<buollit>"i));
SELECT:fallback ("humør"i) (0 ("<mokta>"i));


SELECT:fallback ("tilbud"i) (0 ("<fálaldat>"i));
SELECT:fallback ("innlegg"i) (0 ("<sátnevuorru>"i));


SELECT ("preken"i) (0 ("<sárdni>"i) LINK *-1 ("<báhppa>"i) OR ("<girku>"i));
SELECT:fallback ("tale"i) (0 ("<sárdni>"i));

SELECT ("samiske språk"i) (0 ("<sámegiella>"i) LINK 0 Pl);
SELECT ("samiske språk"i) (0 ("<sámegiella>"i) LINK 0 Gen LINK -1 Num);
SELECT ("samisk språk"i) (0 ("<sámegiella>"i) LINK 1 CC LINK 1 ("<kultuvra>"i) OR ("<sápmi>"i) + Gen);
SELECT ("samisk språk"i) (0 ("<sámegiella>"i) LINK 1 ("<ovdáneapmi>"i) OR Sem/State OR ("<ipmil>"i));
SELECT:fallback ("samisk"i) (0 ("<sámegiella>"i));

SELECT ("adresse"i) (0 ("<čujuhus>"i) LINK 0 Pl OR Ill);
SELECT ("adresse"i) (0 ("<čujuhus>"i) LINK 1 ("<namma>"i) OR ("<šilta>"i) );
SELECT ("adresse"i) (0 ("<čujuhus>"i) LINK -1 Gen);
SELECT:fallback ("henvisning"i) (0 ("<čujuhus>"i));

SELECT ("tale"i) (0 ("<sáhka>"i) LINK *-1 ("<leat>"i)) (1 Loc);
SELECT ("tale"i) (0 ("<sáhka>"i) LINK *-1 ("<leat>"i)) (1 Gen LINK 1 ("<birra>"i));
SELECT ("tale"i) (0 ("<sáhka>"i) LINK *-1 ("<leat>"i)) (-1 ("<birra>"i));
SELECT ("tale"i) (0 ("<sáhka>"i) LINK *-1 ("<leat>"i)) (1 Cmp LINK 1 Loc);
SELECT ("tale om"i) (0 ("<sáhka>"i) LINK -1 ("<leat>"i)) (NEGATE 1 Loc);
SELECT:fallback ("budskap"i) (0 ("<sáhka>"i));

SELECT ("utseende"i) (0 ("<hápmi>"i) LINK -1 ("<movttet>"i));
SELECT ("måte"i) (0 ("<hápmi>"i) LINK 0 Com LINK -1 A + Attr);
SELECT:fallback ("form"i) (0 ("<hápmi>"i));
SELECT:fallback ("skilt"i) IF (0 ("<galba>"i)) ;

SELECT:fallback ("tur"i) (0 ("<vuorru>"i) LINK -1 Pers + Gen OR Prop + Gen);
SELECT:fallback ("gang"i) (0 ("<vuorru>"i) LINK -1 Dem + Gen);
SELECT:fallback ("omgang"i) (0 ("<vuorru>"i));

SELECT ("måte"i) (0 ("<láhki>"i) LINK -1 A OR Pron);
SELECT:fallback ("måte"i) (0 ("<láhki>"i));


SELECT ("jobb"i) (0 ("<bargu>"i) LINK *-1 ("<álgit>"i) OR ("<heaitit>"i) BARRIER SV-BOUNDARY);
SELECT:fallback ("arbeid"i) (0 ("<bargu>"i));

REMOVE (maydetindef) (0 ("<sadji>"i) LINK *-1 ("<boahtit>"i) OR ("<addit>"i) OR ("<oažžut>"i) BARRIER SV-BOUNDARY);
SELECT ("plass"i) (0 ("<sadji>"i) LINK *-1 ("<boahtit>"i) OR ("<addit>"i) OR ("<oažžut>"i) BARRIER SV-BOUNDARY);
SELECT ("plass"i) (0 ("<sadji>"i) LINK -1 Ord OR ("<nubbi>"i) OR ("<pálla>"i) OR ("<sihkar>"i) OR ("<eahpesihkar>"i) OR ("<cup>"i));
SELECT ("plass"i) (0 ("<sadji>"i) LINK 1 Po);
SELECT:fallback ("sted"i) (0 ("<sadji>"i));

SELECT ("skyld"i) (0 ("<sivva>"i) LINK -1 Gen);
SELECT:fallback ("grunn"i) (0 ("<sivva>"i));

SELECT ("leting"i) (0 ("<ohcan>"i) LINK -1 ("<diehtu>"i));
SELECT:fallback ("søknad"i) (0 ("<ohcan>"i));

SELECT ("stolt"i) (0 ("<rápmi>"i) LINK 0 Loc);
SELECT:fallback ("ros"i) (0 ("<rápmi>"i));

SELECT:fallback ("ekstra"i) (0 ("<liige>"i));

SELECT ("vei"i) (0 ("<geinnodat>"i) LINK -1 ACR);
SELECT:fallback ("flyttevei"i) (0 ("<geinnodat>"i));


SELECT ("antall"i) (0 ("<lohku>"i) LINK -1 Pl + Gen + Sem/Hum OR Pl + Gen + Sem/Ani OR Sem/Cat) ;
SELECT:fallback ("tall"i) (0 ("<lohku>"i));

SELECT ("omveg"i) (0 ("<mohkki>"i) + Pl) ;
SELECT:fallback ("bukt"i) (0 ("<mohkki>"i));


SELECT:fallback ("forskning"i) (0 ("<dutkan>"i));


SELECT ("anmeldelse"i) (0 ("<árvvoštallan>"i) LINK -1 Sem/Txt + Acc OR ("<filbma>"i) + Acc) ;
SELECT:fallback ("vurdering"i) (0 ("<árvvoštallan>"i));


SELECT ("driftsenhet"i) (0 ("<doallu>"i) LINK *0 ("<orohat>"i) OR ("<siida>"i) OR ("<boazu>"i)) ;
SELECT:fallback ("arrangement"i) (0 ("<doallu>"i)) ;

SELECT ("reinbeitedistrikt"i) (0 ("<orohat>"i) LINK 1 (Arab) OR ("<ovdaolmmoš>"i) OR ("<siida>"i)) ;
SELECT ("reinbeitedistrikt"i) (0 ("<orohat>"i) LINK *0 ("<boazu>"i) OR ("<boazolohku>"i)) ;
SELECT:fallback ("reinbeitedistrikt"i) (0 ("<orohat>"i));

SELECT ("topp"i) (0 ("<njunuš>"i))(*0 ("<artista>"i) OR ("<listu>"i) OR ("<válga.*>"r));
SELECT ("toppfolk"i) (0 ("<njunuš>"i) + Pl) ;
SELECT:fallback ("topp"i) (0 ("<njunuš>"i));

SELECT:fallback ("forsvar"i) (0 ("<suodjalus>"i));


SELECT ("avstand"i) (0 ("<gaska>"i) LINK -1 ("<stuoris>"i));
SELECT ("strekning"i) (0 ("<gaska>"i) LINK *0 CURRENCY OR ("<prográmmaguovlu>"i));
SELECT ("strekning"i) (0 ("<gaska>"i) LINK 0 Pl);
SELECT ("stund"i) (-1 ("<okta>"i))(0 ("<gaska>"i));
SELECT:fallback ("mellomrom"i) (0 ("<gaska>"i));

SELECT ("sjikt"i) (0 ("<geardi>"i) LINK -1 Comp + Attr);
SELECT:fallback ("gang"i) (0 ("<geardi>"i));

SELECT ("tagg"i) (0 ("<gilkor>"i));
#SELECT:fallback ("navnemerke"i) (0 ("<geardi>"i));


SELECT ("besøk"i) (0 ("<guossi>"i) LINK 0 Ess);
SELECT:fallback ("gjest"i) (0 ("<guossi>"i));


SELECT:fallback ("insekt"i) (0 ("<divri>"i));

SELECT ("lag"i) (0 ("<joavku>"i) LINK *0 ("<čiekčat>"i) OR ("<divišuvdna>"i) OR ("<ráidočiekčan>"i) OR ("<čiekčan>"i) OR ("<čiekčat>"i) OR ("<čiekči>"i));
SELECT:fallback ("gruppe"i) (0 ("<joavku>"i)) ;

SELECT ("venn"i) (0 ("<olmmái>"i) LINK -1 HUMAN + Gen OR DUPRON);
SELECT:fallback ("mann"i) (0 ("<olmmái>"i));

SELECT ("vern"i) (0 ("<suodji>"i) LINK -1 ("<kultuvra>"i) OR Cmp );
SELECT:fallback ("ly"i) (0 ("<suodji>"i));

SELECT ("gård"i) (0 ("<dállu>"i) LINK *0 ("<.*vuoigatvuohta>"r) OR ("<eana>"i));
SELECT:fallback ("hus"i) (0 ("<dállu>"i));

SELECT:sønn ("sønn"i) (0 ("<bárdni>"i) LINK -1 HUMAN  OR ("<beaivi>"i) LINK 0 @>N);
SELECT:sønn ("sønn"i) (0 ("<bárdni>"i) LINK *-1 COPULAS BARRIER NOT-NPMOD LINK *-1 <hab> LINK 0 HUMAN);
SELECT:fallback ("gutt"i) (0 ("<bárdni>"i));

SELECT ("tiltak"i) (0 ("<doaibma>"i) LINK -1 Cmp) ;
SELECT ("virksomhet"i) (0 ("<doaibma>"i) LINK 0 PX) ;
SELECT ("virksomhet"i) (0 ("<doaibma>"i) LINK -1 Gen ) ;
SELECT:fallback ("oppgave"i) (0 ("<doaibma>"i));

SELECT ("yrkes"i) (0 ("<ámmát>"i) LINK 0 Cmp) ;
SELECT:fallback ("embete"i) (0 ("<ámmát>"i));

SELECT ("ekstern"i) (0 ("<olggobealle>"i) LINK 0 Gen) ;
SELECT:fallback ("ytterside"i) (0 ("<olggobealle>"i));


SELECT ("torske"i) (0 ("<dorski>"i) LINK 0 Cmp) ;
SELECT:fallback ("torsk"i) (0 ("<dorski>"i));

SELECT:fallback ("utmark"i) (0 ("<meahcci>"i));

SELECT:fallback ("velsignelse"i) (0 ("<sivdnideapmi>"i));

SELECT:fallback ("hage"i) (0 ("<gárdi>"i) LINK -1 ("<mánná>"i) + Cmp);
SELECT:fallback ("gjerde"i) (0 ("<gárdi>"i));

SELECT ("vindusrute"i) (0 ("<láse>"i) + Acc LINK *0 ("<rahpat>"i) OR ("<rabastit>"i));
SELECT:fallback ("glass"i) (0 ("<láse>"i));

SELECT ("markeds"i) (0 ("<márkan>"i) LINK 0 Cmp);
SELECT:fallback ("marked"i) (0 ("<márkan>"i));


SELECT ("part"i) (0 ("<oassi>"i) LINK -1 ("<eanaš>"i) OR ("<eanas>"i));
SELECT:fallback ("del"i) (0 ("<oassi>"i));

SELECT ("landskap"i) (0 ("<eana>"i) LINK 0 Pl);
SELECT:fallback ("jord"i) (0 ("<eana>"i));


SELECT ("studium"i) (0 ("<oahppu>"i) LINK 0 Pl);
SELECT ("studium"i) (0 ("<oahppu>"i) LINK -1 ("<ohcat>"i));
SELECT ("studie"i) (0 ("<oahppu>"i) LINK 1 CC LINK 1 ("<dutkan>"i));
SELECT ("studie"i) (0 ("<oahppu>"i) LINK 1 ("<bagadallan>"i));
SELECT:fallback ("studium"i) (0 ("<oahppu>"i));


SELECT ("fiske"i) (0 ("<bivdu>"i) LINK *0 Sem/Ani-fish OR ("<reahkká>"i) OR ("<gonagasreabbá>"i)  OR ("<.*reabbábivdu>"ri)) ;
SELECT:fallback ("jakt"i) (0 ("<bivdu>"i));

SELECT:fallback ("kreps"i) (0 ("<reabbá>"i) LINK -1 BOS)(1 EOS);
SELECT ("krabbe"i) (0 ("<reabbá>"i));


SELECT:fallback ("berømt"i) (0 ("<beakkán>"i) LINK 0 Sg + Nom OR Attr);
SELECT ("kjendis"i) (0 ("<beakkán>"i));

SELECT ("kaos"i) (0 ("<moivi>"i) LINK -1 ("<muohta>"i) LINK 0 Cmp);
SELECT:fallback ("rot"i) (0 ("<moivi>"i));

SELECT ("svømmer"i) (0 ("<vuoddji>"i) LINK *0 ("<vuodjat>"i) OR ("<vuodjan>"i) );
SELECT:fallback ("sjåfør"i) (0 ("<vuoddji>"i));


SELECT ("doktor"i) (0 ("<doavttir>"i) LINK 1 FIRSTNAME OR Sem/Sur);
SELECT:fallback ("lege"i) (0 ("<doavttir>"i));
SELECT:fallback ("bilideapmi"i) (0 ("<ødeleggelse>"i));

# Nouns that were all 0-marked in the dix:
SELECT:fallback ("norsk"i) (0 ("<dáčča>"i));
SELECT:fallback ("flokk"i) (0 ("<eallu>"i));
SELECT:fallback ("hustru"i) (0 ("<eamit>"i));

SELECT:fallback ("skall"i) (0 ("<garra>"i));
SELECT:fallback ("negl"i) (0 ("<gazza>"i));
SELECT:fallback ("lettelse"i) (0 ("<geahpádus>"i));
SELECT:fallback ("eng"i) (0 ("<gieddi>"i));
SELECT:fallback ("hånd"i) (0 ("<giehta>"i));
SELECT:fallback ("fly"i) (0 ("<girdi>"i));
SELECT:fallback ("kamerat"i) (0 ("<guoibmi>"i));
SELECT:fallback ("tak"i) (0 ("<gáhttu>"i));
SELECT:fallback ("navnebror"i) (0 ("<gáibmi>"i));
SELECT:fallback ("vare"i) (0 ("<gálvu>"i));
SELECT:fallback ("kasse"i) (0 ("<gássa>"i));
SELECT:fallback ("butikk"i) (0 ("<gávpi>"i));
SELECT:fallback ("herre"i) (0 ("<hearrá>"i));
SELECT:fallback ("pynt"i) (0 ("<hearva>"i));
SELECT:fallback ("vestsame"i) (0 ("<hoammá>"i));

SELECT:fallback ("tale"i) (0 ("<hállan>"i));

SELECT:fallback ("kjæreste"i) (0 ("<irgi>"i));
SELECT:fallback ("ektemann"i) (0 ("<isit>"i));
SELECT:fallback ("forstand"i) (0 ("<jierbmi>"i));
SELECT:fallback ("elv"i) (0 ("<johka>"i));
SELECT:fallback ("trafikant"i) (0 ("<johtaleaddji>"i));
SELECT:fallback ("elvebredd"i) (0 ("<jávregáttis>"i));
SELECT:fallback ("medlem"i) (0 ("<lahttu>"i));
SELECT:fallback ("rom"i) (0 ("<latnja>"i));
SELECT:fallback ("enke"i) (0 ("<leaska>"i));
SELECT:fallback ("rørelse"i) (0 ("<lihkadus>"i));
SELECT:fallback ("studie"i) (0 ("<lohkan>"i));
SELECT:fallback ("vei"i) (0 ("<luodda>"i));
SELECT:fallback ("geværpatron"i) (0 ("<ládda>"i));
SELECT:fallback ("garn"i) (0 ("<láigi>"i));
SELECT:fallback ("haug"i) (0 ("<látna>"i));
SELECT:fallback ("venn"i) (0 ("<lávvi>"i));
SELECT:fallback ("betydning"i) (0 ("<mearkkašupmi>"i));
SELECT:fallback ("mengde"i) (0 ("<mearri>"i));
SELECT:fallback ("vedlegg"i) (0 ("<mielddus>"i));
SELECT:fallback ("mål"i) (0 ("<mihttu>"i));
SELECT:fallback ("mål"i) (0 ("<moalla>"i));
SELECT:fallback ("smule"i) (0 ("<moallu>"i));
SELECT:fallback ("vrede"i) (0 ("<moarri>"i));
SELECT:fallback ("minne"i) (0 ("<muitu>"i));
SELECT:fallback ("mold"i) (0 ("<muolda>"i));
SELECT:fallback ("betaling"i) (0 ("<máksu>"i));
SELECT:fallback ("Superlpe"i) (0 ("<mális>"i));
SELECT:fallback ("mønster"i) (0 ("<málle>"i));
SELECT:fallback ("skaft"i) (0 ("<nađđa>"i));
SELECT:fallback ("grunne"i) (0 ("<njuorra>"i));
SELECT:fallback ("skinn"i) (0 ("<náhkki>"i));
SELECT:fallback ("eie"i) (0 ("<oamastus>"i));
SELECT:fallback ("medvirkende"i) (0 ("<oasálaš>"i));
SELECT:fallback ("ordning"i) (0 ("<ortnet>"i));
SELECT:fallback ("representant"i) (0 ("<ovddasteaddji>"i));
SELECT:fallback ("rett"i) (0 ("<riekti>"i));
SELECT:fallback ("komma"i) (0 ("<rihkku>"i));
SELECT:fallback ("krangel"i) (0 ("<riidu>"i));
SELECT:fallback ("land"i) (0 ("<riika>"i));
SELECT:fallback ("landsforening"i) (0 ("<riikkasearvi>"i));
SELECT:fallback ("fyrstikk"i) (0 ("<rišša>"i));
SELECT:fallback ("skvett"i) (0 ("<rišša>"i));
SELECT:fallback ("rulle"i) (0 ("<rulla>"i));
SELECT:fallback ("trekubbe"i) (0 ("<ráddi>"i));
SELECT:fallback ("gras"i) (0 ("<rássi>"i));
SELECT:fallback ("agn"i) (0 ("<seakti>"i));
SELECT:fallback ("frø"i) (0 ("<siepman>"i));
SELECT:fallback ("siida"i) (0 ("<siida>"i));
SELECT:fallback ("skoletur"i) (0 ("<skuvlamátki>"i));
SELECT:fallback ("trekk"i) (0 ("<skoađas>"i));
SELECT:fallback ("blankett"i) (0 ("<skovvi>"i));
SELECT:fallback ("gris"i) (0 ("<spiidni>"i));
SELECT:fallback ("dialekt"i) (0 ("<suopman>"i));
SELECT:fallback ("venn"i) (0 ("<ustit>"i));
SELECT:fallback ("hundeflokk"i) (0 ("<valvi>"i));
SELECT:fallback ("hefte"i) (0 ("<veahtu>"i));
SELECT:fallback ("lignelse"i) (0 ("<veardádus>"i));
SELECT:fallback ("skatt"i) (0 ("<vearru>"i));
SELECT:fallback ("skikk"i) (0 ("<vierru>"i));
SELECT:fallback ("stilling"i) (0 ("<virgi>"i));
SELECT:fallback ("hus"i) (0 ("<visti>"i));
SELECT:fallback ("smør"i) (0 ("<vuodja>"i));
SELECT:fallback ("måte"i) (0 ("<vuohki>"i));
SELECT:fallback ("styrke"i) (0 ("<vuoibmi>"i));
SELECT:fallback ("rekreasjon"i) (0 ("<vuoiŋŋasteapmi>"i));
SELECT:fallback ("skade"i) (0 ("<váddu>"i));
SELECT:fallback ("mangel"i) (0 ("<váili>"i));
SELECT:fallback ("besvær"i) (0 ("<váivi>"i));
SELECT:fallback ("fullmakt"i) (0 ("<váldi>"i));
SELECT:fallback ("pågriper"i) (0 ("<váldi>"i));
SELECT:fallback ("taker"i) (0 ("<váldi>"i));
SELECT:fallback ("advarsel"i) (0 ("<várrehus>"i));
SELECT:fallback ("hustru"i) (0 ("<áhkká>"i));
SELECT:fallback ("forslag"i) (0 ("<árvalus>"i));
SELECT:fallback ("styrking"i) (0 ("<nannen>"i));
SELECT:fallback ("hjørne"i) (0 ("<čiehka>"i));
SELECT:fallback ("pynt"i) (0 ("<čikŋa>"i));
SELECT:fallback ("sammendrag"i) (0 ("<čoahkkáigeassu>"i));
SELECT:fallback ("tekst"i) (0 ("<čálus>"i));
SELECT:fallback ("slag"i) (0 ("<šládja>"i));
SELECT:fallback ("surr"i) (0 ("<šurra>"i));

SELECT:fallback ("ende"i) (0 ("<loahppa>"i) LINK -1 ("<máilbmi>"i)) ;
SELECT:fallback ("slutt"i) (0 ("<loahppa>"i)) ;

SELECT ("poeng"i) (0 ("<čuokkis>"i) LINK 0 Acc LINK *0 ("<oažžut>"i));
SELECT ("poeng"i) (0 ("<čuokkis>"i) LINK -1 Sem/Edu);
SELECT:fallback ("punkt"i) (0 ("<čuokkis>"i)) ;


SELECT:fallback ("hovedforslag"i) (0 ("<váldoevttohus>"i)) ;

SELECT ("raide"i) (0 ("<ráidu>"i) LINK 1 ("<vuojan>"i)) ;
SELECT ("raide"i) (0 ("<ráidu>"i) LINK *0 ("<boahtit>"i) OR ("<njolgi>"i) OR ("<leahttu>"i)) ;
SELECT ("kø"i) (0 ("<ráidu>"i) LINK *0 ("<vuordit>"i) OR ("<čuožžut>"i)) ;
SELECT:fallback ("serie"i) (0 ("<ráidu>"i)) ;

SELECT ("retning"i) (0 ("<guovlu>"i) + Ill LINK -1 ("heajos"i) OR (Comp) + (Attr) OR Sem/Time OR Sem/Event) ;
SELECT ("veg"i) (0 ("<guovlu>"i) + Ill LINK -1 Indef) ;
SELECT ("veg"i) (0 ("<guovlu>"i) + Ill LINK -1 ("<ge>") LINK -1 Indef) ;
SELECT:fallback ("område"i) (0 ("<guovlu>"i)) ;

SELECT ("live"i) (0 ("<heagga>"i) LINK 0 Loc) ;
SELECT ("rein"i) (0 ("<heagga>"i) LINK -1 Num - ("<okta>"i)) ;
SELECT:fallback ("liv"i) (0 ("<heagga>"i)) ;

SELECT ("middel"i) (0 ("<ávnnas>"i) LINK -1 ("<kárten>"i)) ;
SELECT:fallback ("råvare"i) (0 ("<ávnnas>"i)) ;

SELECT ("horn"i) (0 ("<ládju>"i) LINK *-1 ("<.*gahpir>"ri)) ;
SELECT:fallback ("slåttonn"i) (0 ("<ládju>"i)) ;


SELECT:fallback ("betaling"i) (0 ("<máksámuš>"i)) ;
SELECT:fallback ("kvote"i) (0 ("<earri>"i)) ;

SELECT ("rett"i) (0 ("<diggi>"i) LINK 0 Ill) ;
SELECT:fallback ("rett"i) (0 ("<diggi>"i)) ;

SELECT ("måne"i) (0 ("<mánnu>"i) LINK 0 SUBJ) ;
SELECT:fallback ("måned"i) (0 ("<mánnu>"i)) ;

# Based on frequency in parallel text:
SELECT ("periode"i) (0 ("<áigodat>"i));
SELECT ("sameby"i) (0 ("<čearru>"i));
SELECT ("urin"i) (0 ("<gužža>"i)) ;
SELECT ("grunntanke"i) (0 ("<vuođđojurdda>"i)) ;


# Adpositions > Prepositions
# ==========================
SELECT ("for"i) (0 ("<bealis>"i)) ;
# TODO: can we do "fra NP side" / "for NP del" ?

SELECT ("i henhold til"i) (0 ("<olis>"i)) ;

SELECT:fallback ("etter"i) (0 ("<maŋis>"i)) ;

SELECT ("hos"i) (0 ("<luhtte>"i) LINK -1 HUMAN) ;
SELECT:fallback ("ved"i) (0 ("<luhtte>"i)) ;

SELECT ("på"i) (0 ("<njeaiga>"i) LINK -1 Gen LINK *-1 ("<vuodjit>"i) BARRIER SV-BOUNDARY) ;
SELECT:fallback ("mot"i) (0 ("<njeaiga>"i)) ;


SELECT ("blant"i) (0 ("<gaskkas>"i) LINK -1 HUMAN + Pl + Gen) ;
SELECT:fallback ("mellom"i) (0 ("<gaskkas>"i)) ;

SELECT ("om"i) (0 ("<geahčen>"i) LINK -1 Sem/Time) ;
SELECT:fallback ("hos"i) (0 ("<geahčen>"i)) ;

SELECT ("for"i) (0 ("<ektui>"i) LINK -1 Sem/Perc-phys) ;
SELECT ("sammenlignet med"i) (0 ("<ektui>"i) LINK -1 ("<diimmá>"i) OR ("<diibmá>"i)) ;
SELECT:fallback ("mot"i) (0 ("<ektui>"i)) ;

SELECT ("med"i) (0 ("<mielde>"i) LINK -1 Sem/Veh OR HUMAN) ;
SELECT:fallback ("etter"i) (0 ("<mielde>"i) + Po) ;

SELECT:fallback ("i"i) (0 ("<siste>"i)) ;

SELECT ("på grunn av"i) (0 ("<dihte>"i) LINK *-1 ("<rámis>"i) BARRIER SV-BOUNDARY) ;
SELECT ("for å"i) (0 ("<dihte>"i) LINK -1 (Actio Gen) ) ;
SELECT:fallback ("for"i) (0 ("<dihte>"i) + Po) ;


SELECT:fallback ("fra"i) (0 ("<rájes>"i)) ;

SELECT:fallback ("i henhold til"i) (0 ("<vuođul>"i)) ;


# Pronouns, relativisers, conjuctions
# ==========================

# SELECT:todo ("denne"i nt) (0 ("<dat>"i) LINK 0 Ill LINK 1 ("<leat>"i)) ;
SELECT Pers (0 ("<dat>"i) LINK 0 OBJ) ;
SELECT ("den"i nt) (0 ("<dat>"i) LINK 1 ("<leat>"i)) ;
SELECT:fallback ("den"i nt) (0 ("<dat>"i)) ;


# han/hun
# -------

# New exiperimental version: W added to look out of the sentence

SELECT ("hun"i) (0 ("<son>"i) LINK *-1W ("<nieida>"i) OR ("<nisu>"i) OR Sem/Fem BARRIER Sem/Mal) ;
SELECT ("hun"i) (0 ("<son>"i) LINK *1W ("<nieida>"i) OR ("<nisu>"i)  BARRIER Sem/Mal) ; # OR Sem/Fem BARRIER Pron OR N) ;
SELECT ("hun"i) (0 ("<son>"i) LINK 1 ("<namma>"i) LINK *1 Sem/Fem BARRIER Pron OR N) ;
SELECT ("han"i) + (m) (0 ("<son>"i)  LINK *1 ("<bárdni>"i) OR ("<dievdu>"i) OR Sem/Mal BARRIER Pron OR N) ;
SELECT ("han"i) + (m) (0 ("<son>"i)  LINK *-1W ("<bárdni>"i) OR ("<dievdu>"i) OR Sem/Mal BARRIER Sem/Fem) ;


# han/hun for remote subject (perhaps object or habitive is as likely)
SELECT:HunRemoteSubject ("hun"i) (0 ("<son>"i)) (*-1WA (Sem/Fem @SUBJ>) OR Sem/Fem);



# dát

SELECT ("nå"i)  (0 ("<dát>"i) LINK 0 Gen LINK 1 ("<rádjai>"i) LINK 0 Po) ;
SELECT:fallback ("denne"i)  (0 ("<dát>"i)) ;

SELECT:fallback ("han"i) + (GD_Pers) (0 ("<son>"i)) ;


SELECT:pl ("noen"i) (0 ("<muhtun>"i) + Pl) ;
SELECT:Leimmet-muhtun ("noen"i) (0 ("<muhtun>"i)) (-1 LEAT + Pl) ;
SELECT:muhtun-sániid ("noen"i) (0 ("<muhtun>"i)) (1 N + Pl) ;
SELECT:muhtun-sániid ("noen"i) (0 ("<muhtun>"i)) (2 N + Pl) ;
SELECT:Leimmet-muhtun ("noen"i) (0 ("<muhtin>"i)) (-1 LEAT + Pl) ;
SELECT:muhtun-sániid ("noen"i) (0 ("<muhtin>"i)) (1 N + Pl) ;
SELECT:muhtun-sániid ("noen"i) (0 ("<muhtin>"i)) (2 N + Pl) ;
SELECT:muhtun-sániid ("noen"i) (0 ("<muhtin>"i) LINK 0 Pl) ;

SELECT:klokken-tolv-eller-ett ("én"i) (0 ("<okta>"i)) (*-1 ("<diibmu>"i) BARRIER CLB OR V OR Adv) ;
SELECT:ett-om-natten ("én"i) (0 ("<okta>"i)) (1 ("<ihkku>"i)) ;
SELECT:fallback ("en"i) (0 ("<okta>"i)) ;

SELECT:movt ("som"i) (0 ("<movt>"i)) (-1 ("<nie>"i) OR ("<nu>"i)) ;
SELECT:mot ("som"i) (0 ("<mot>"i)) (-1 ("<nie>"i) OR ("<nu>"i)) ;
SELECT:mo ("som"i) (0 ("<mo>"i)) (-1 ("<nie>"i) OR ("<nu>"i)) ;
SELECT:fallback ("hvordan"i) (0 ("<movt>"i)) ;
SELECT:fallback ("hvordan"i) (0 ("<mot>"i)) ;
SELECT:fallback ("hvordan"i) (0 ("<mo>"i)) ;

SELECT:oba ("i det hele tatt"i) (0 ("<oba>"i)) ((-1 ConNeg) OR (-1 Neg) OR (1 ConNeg)) ;
SELECT:fallback ("aldeles"i) (0 ("<oba>"i)) ;

SELECT:ge ("heller"i) (0 ("<ge>"i)) (*-1 Neg) ;
SELECT:fallback ("også"i) (0 ("<ge>"i)) ;

SELECT ("ene sin"i) (0 ("<nubbi>"i) + Gen) (*1 ("<nubbi>"i)) ;
SELECT ("andre sin"i) (0 ("<nubbi>"i) + Gen) (*-1 ("<nubbi>"i)) ;
SELECT:fallback ("annen"i) (0 ("<nubbi>"i)) ;

SELECT ("nest"i) (0 ("<nubbi>"i) + Ord LINK 1 Superl) ;
SELECT:fallback ("andre"i) (0 ("<nubbi>"i) + Ord) ;


SELECT:hans-egen ("egen"i) (0 ("<ieš>"i)) (-1 Pron + Pers + Gen) ;
# Dá lea mu iežan girji => Her er min egen bok

SELECT:oss-selv ("selv"i) (0 ("<ieš>"i) LINK 0 Acc) (-1 Pron + Pers + Acc) ;
# eai galgga soardit min iežamet > ikke skal gjøre vondt for oss selv

SELECT:til-meg-selv ("selv"i) (0 ("<ieš>"i) LINK 0  Ill) (-1 Pers + Ill) ;
SELECT:på-seg-selv ("seg selv"i) (0 ("<ieš>"i) LINK 0 Ill) (NOT -1 Pers + Ill) ;
#SELECT:fra-seg-selv ("seg selv"i) (0 ("<ieš>"i) LINK 0 Loc LINK 0 (@ADVL-ela))  ;

SELECT:skadet-seg-selv ("seg selv"i) (0 ("<ieš>"i) LINK 0 Acc LINK NOT -1 Pron + Pers + Acc) ; # (NOT *1 V BARRIER S-BOUNDARY) ;
SELECT:fallback ("selv"i) (0 ("<ieš>"i) LINK 0 Loc )  ;

SELECT:med-deg Pron (0 ("<ieš>"i)) (0 @>P OR @P<) ;
# Váldde biergasiid iežat fárrui > Ta sakene med deg
SELECT:mitt-rom PX (0 ("<ieš>"i)) (NOT 0 @>P OR @P<) ;
# Mun ferten čorget iežan lanja > Jeg må rydde mitt rom

SELECT:fallback ("prPers"i) (0 ("<ieš>"i) LINK 0 Acc) ;

SELECT ("hvor mange"i) (0 ("<galle>"i)) (-1 V) ;
#SELECT:fallback ("mange"i) (0 ("<galle>"i)) ;

SELECT ("noe slik"i) (0 ("<dakkár>"i)) (*-1 Neg BARRIER S-BOUNDARY)(NOT 0 Attr) ;
SELECT:fallback ("slik"i) (0 ("<dakkár>"i)) ;

SELECT ("forskjellig"i) (0 ("<iešguhte>"i) LINK 0 Foc/Pos-ge) ;
SELECT ("forskjellig"i) (0 ("<iešguhte>"i) LINK 0 Foc/Neg-ge) ;
SELECT:fallback ("hver"i) (0 ("<iešguhte>"i)) ;


SELECT ("hvilken"i) (0 ("<guhte>"i) LINK 0 Attr) ;
SELECT:fallback ("hvem"i) (0 ("<guhte>"i)) ;

# Numerals
# =======

SET NT-BEAL-NUM-NOB =  ("ni og et halvt"i) OR ("åtte og et halvt"i) OR ("sju og et halvt"i) OR ("seks og et halvt"i) OR ("fem og et halvt"i) OR ("fire og et halvt"i)  OR ("tre og et halvt"i) OR ("to og et halvt"i) ;
SET BEAL-NUM-SME =  ("<beallogát>"i) OR ("<bealovccát>"i) OR  ("<bealgávccát>"i) OR  ("<bealčihččet>"i) OR ("<bealguđat>"i) OR ("<bealviđat>"i) OR ("<bealnjealját>"i)  OR ("<bealgoalmmát>"i) ;


SELECT NT-BEAL-NUM-NOB (0 BEAL-NUM-SME LINK *1 (nt) BARRIER WORD - Attr) ;  
REMOVE:fallback NT-BEAL-NUM-NOB (0 BEAL-NUM-SME) ;


# Adverbs
# =======
SELECT:ble-mye-verre ("mye"i) (0 ("<sakka>"i) LINK 0 Adv) (-1 A + pasv LINK 0 V) ; # vearránii sakka
SELECT ("til"i) (0 ("<vuhtii>"i)) (*-1 ("<váldit>"i)) ;

SELECT ("slik"i) (0 ("<nu>"i) LINK -1 ("<ja>"i)) ;     # Ja nu leat sii
SELECT ("til rette for"i) (0 ("<nu>"i)) (-1 ("<dilálašvuohta>"i)) (1 ("<ahte>"i)) ;
SELECT ("så"i) (0 ("<nu>"i)) (1 A or ("<galle>"i) or ("<gealdagas>"i) or ("<bures>"i)) ; # dat skuvla nu johtil ahte
SELECT:så-langt-som ("så"i) (0 ("<nu>"i)) (1 Adv) (2 CS) ;
SELECT:fallback ("slik"i) (0 ("<nu>"i)) ;     # Ja nu leat sii

SELECT ("fast"i) (0 ("<gitta>"i)) (NOT 1 NP-MEMBER);
SELECT ("til"i) (0 ("<gitta>"i)) ; # looks more like a prep?


REMOVE ("opp"i) (0 ("<bajás>"i))(*0 ("<mánná>"i) LINK 0 Acc OR Gen) ;
SELECT:fallback ("opp"i) (0 ("<bajás>"i)) ;


SELECT ("enda"i) (0 ("<vuos>"i)) (-1 ConNeg);
SELECT ("først"i) (0 ("<vuos>"i)) ; 

SELECT:fallback ("mindre"i) (0 ("<unnit>"i)) ; 
SELECT:fallback ("selvfølgelig"i) (0 ("<dieđus>"i)) ; 

SELECT ("aller"i) (0 ("<buot>"i) LINK 1 Superl) ; 
SELECT:fallback ("alt"i) (0 ("<buot>"i)) ; 


SELECT ("være synlig"i) (0 ("<oidnosis>"i) LINK NOT *-1 COPULAS BARRIER SV-BOUNDARY) ; 
SELECT:fallback ("synlig"i) (0 ("<oidnosis>"i)) ; 

SELECT ("positiv til"i) (0 ("<mielas>"i) LINK -1 COPULAS)(NOT 1 Ill) ; 
SELECT ("positiv"i) (0 ("<mielas>"i) LINK -1 COPULAS) ; 
SELECT:fallback ("gjerne"i) (0 ("<mielas>"i)) ; 


SELECT ("forhånds"i) (0 ("<ovddalgihtii>"i) LINK 1 ("<jietna>"i)) ; 
SELECT:fallback ("på forhånd"i) (0 ("<ovddalgihtii>"i)) ; 


SELECT ("opp"i) (0 ("<eret>"i)) (-1 ("<cealkit>"i)) ;
SELECT ("fra"i) + Pr (0 ("<eret>"i)) (-1 ("<leat>"i) OR CC) ;
SELECT ("bort"i) (0 ("<eret>"i)) (-1 V)(NEGATE 1 Loc) ;
SELECT ("bort"i) (0 ("<eret>"i)) (1 Loc) ;
SELECT ("av"i) (0 ("<eret>"i)) (-1 ("<sahát>"i)) ;
SELECT:fallback ("fra"i) + Pr (0 ("<eret>"i)) ;

SELECT ("sørpå"i) (0 ("<máddin>"i) LINK -1 DOPPE) ;
SELECT ("sørfra"i) (0 ("<máddin>"i) LINK 0 (@<ADVL-ela) OR (@ADVL-ela>)) ;
SELECT:fallback ("sørpå"i) (0 ("<máddin>"i)) ;
SELECT ("nordpå"i) (0 ("<davvin>"i) LINK -1 DOPPE) ;
SELECT ("nordfra"i) (0 ("<davvin>"i) LINK 0 (@<ADVL-ela) OR (@ADVL-ela>)) ;
SELECT:fallback ("nordpå"i) (0 ("<davvin>"i)) ;
SELECT ("vestpå"i) (0 ("<oarjin>"i) LINK -1 DOPPE) ;
SELECT ("vestfra"i) (0 ("<oarjin>"i) LINK 0 (@<ADVL-ela) OR (@ADVL-ela>)) ;
SELECT:fallback ("vestpå"i) (0 ("<oarjin>"i)) ;
SELECT ("østpå"i) (0 ("<nuortan>"i) LINK -1 DOPPE) ;
SELECT ("østfra"i) (0 ("<nuortan>"i) LINK 0 (@<ADVL-ela) OR (@ADVL-ela>)) ;
SELECT:fallback ("østpå"i) (0 ("<nuortan>"i)) ;



SELECT ("dobbelt"i) (0 ("<beali>"i) LINK 1 ("<eanet>"i)) ;
SELECT:fallback ("halve"i) (0 ("<beali>"i)) ;

SELECT ("sammen"i) (0 ("<oktii>"i) LINK -1 ("<bidjat>"i) OR ("<časkit>"i) OR ("<laktit>"i) OR ("<beaškkehit>"i)) ;
SELECT:fallback ("en gang"i) (0 ("<oktii>"i)) ;


SELECT ("masse"i) (0 ("<dievva>"i) LINK 1 N + Pl) ;
SELECT:fallback ("full"i) (0 ("<dievva>"i) + Adv) ;

SELECT ("lite"i) (0 ("<unnán>"i) LINK 1 Gen LINK 1 Po) ;
SELECT ("få"i) (0 ("<unnán>"i) LINK *1 N + Pl BARRIER NOT-A - Cmp) ;
SELECT:fallback ("lite"i) (0 ("<unnán>"i) + Adv) ;



SELECT:fallback ("fra gamle dager"i) (0 ("<don doložis>"i)) ;

SELECT ("fordi"i) (0 ("<dan dihte>"i) LINK 1 ("<go>"i)) ;
SELECT:fallback ("derfor"i) (0 ("<dan dihte>"i)) ;


SELECT ("like"i) (0 ("<liikka>"i) LINK 1 A + Nom) ;
SELECT:fallback ("likevel"i) (0 ("<liikka>"i)) ;

SELECT ("altfor"i) (0 ("<beare>"i) LINK 1 ("<unnán>"i) OR ("<ollu>"i) OR ("<máŋga>"i) OR ("<ollugat>"i) OR A + Nom OR A + Attr) ;
SELECT:fallback ("bare"i) (0 ("<beare>"i)) ;


SELECT ("på hvilken måte"i) (0 ("<guđe ládje>"i)) ;


SELECT ("mulig"i) (0 ("<vejolaččat>"i) LINK -1 ("<go>"i)) ;
SELECT:fallback ("muligens"i) (0 ("<vejolaččat>"i)) ;

SELECT ("offisielt"i) (0 ("<almmolaččat>"i) LINK -1 ("<rahpat>"i)) ;
SELECT:fallback ("offentlig"i) (0 ("<almmolaččat>"i)) ;


SELECT ("hva"i) (0 ("<manin>"i) LINK *1 ("<gohčodit>"i)) ;
SELECT:fallback ("hvorfor"i) (0 ("<manin>"i)) ;

SELECT ("mot"i) (0 ("<vuostálaga>"i) OR ("<vuostálagaid>"i) LINK *1 Acc) ;
SELECT:fallback ("mot hverandre"i) (0 ("<vuostálaga>"i) OR ("<vuostálagaid>"i)) ;


SELECT:fallback ("så pass"i) (0 ("<mađe>"i) LINK 1 A + Nom) ;
SELECT:fallback ("likeså"i) (0 ("<mađe>"i)) ;

SELECT:fallback ("noensinne"i) (0 ("<goasse>"i)) ;

SELECT:fallback ("over"i) (0 ("<badjelii>"i) + Adv) ;


SELECT ("halvferdig"i) (0 ("<gaskan>"i) LINK *-1 ("<guođđit>"i) OR ("<vuolgit>"i)) ;
SELECT:fallback ("sammen"i) (0 ("<gaskan>"i)) ;

SELECT:fallback ("da"i) (0 ("<fal>"i)) ;

SELECT:fallback ("like"i) (0 ("<seammá>"i) LINK 1 ("<ollu>"i) OR ("<olu>"i) OR A + Nom OR Adv) ;
SELECT:fallback ("samme"i) (0 ("<seammá>"i)) ;

# Based on frequency in parallel text:
SELECT ("lenger"i) (0 ("<šat>"i)) ;
SELECT:fallback ("til"i) (0 ("<vuhtii>"i)) ;

SELECT ("avsides"i) (0 ("<boaittobealde>"i)) ;


SELECT ("med"i) (0 ("<mii>"i) LINK 0 Rel + Sg + Gen LINK 1 ("<bokte>"i)) ;
SELECT ("som"i) (0 ("<mii>"i) LINK 0 Adv) ;

SELECT ("med"i) (0 ("<bokte>"i) LINK 0 Po LINK -1 ("<mii>"i) LINK 0  Rel + Sg + Gen) ;
SELECT ("ved"i) (0 ("<bokte>"i) LINK 0 Adv LINK -1 FIRSTNAME OR Pron) ;
SELECT:fallback ("via"i) (0 ("<bokte>"i)) ;

SELECT:fallback ("på"i) (0 ("<badjelis>"i) LINK -1 Sem/Clth) ;
SELECT:fallback ("ovenfor"i) (0 ("<badjelis>"i)) ;


SELECT ("ja"i) (0 ("<ja>"i)) (-1 CC) (1 ("<ja>"i)) ;
SELECT ("ja"i) (0 ("<ja>"i)) (1 CC)  (-1 ("<ja>"i)) ;
# Dajai, ahte ja ja.

SELECT:fallback ("og"i) (0 ("<ja>"i));


SELECT:bra ("bra"i) (0 ("<bures>"i) LINK *0 ("<mannat>"i) OR ("<heivet>"i) BARRIER SV-BOUNDARY) ;
SELECT:fallback ("godt"i) (0 ("<bures>"i)) ;




# Adjectives
# ==========


SELECT (N f Pl Indef) (-1 Num)(0 ("<ruvdnosaš>"i)); #??

SELECT (det) (0 ("<sierra>"i));
# Mii čujuhit ahte sámiin go lea sierra álbmot ja eamiálbmot

SELECT ("fjern"i) (0 ("<gáiddus>"i) LINK 0 Cmp);
REMOVE ("fjern"i) (0 ("<gáiddus>"i))(NOT 0 Cmp);

SELECT ("lojal"i) (0 ("<oskkáldas>"i) LINK 1 ("<jienasteaddji>"i));
SELECT:fallback ("pålitelig"i) (0 ("<oskkáldas>"i)) ;


SELECT ("fleksibel"i) (0 ("<geabbil>"i) LINK *1 Sem/Edu);
SELECT:fallback ("smidig"i) (0 ("<geabbil>"i)) ;


SELECT ("gammel"i) (0 ("<dološ>"i) LINK 0 Attr);
SELECT:fallback ("gammel tid"i) (0 ("<dološ>"i));

SELECT ("dyrebar"i) (0 ("<divrras>"i) LINK 0 Nom LINK *1 Sem/Hum LINK 0 Pl + Ill);
SELECT:fallback ("dyr"i) (0 ("<divrras>"i));


SELECT ("menneskelig"i) (0 ("<olmmošlaš>"i) LINK 1 ("<biidnašuvvat>"i));
SELECT:fallback ("høflig"i) (0 ("<olmmošlaš>"i));


SELECT ("fast"i) (0 ("<bissovaš>"i) LINK 1 ("<.*virgi>"ri));
SELECT:fallback ("vedvarende"i) (0 ("<bissovaš>"i));


SELECT ("-årig"i) (0 ("<jagáš>"i) LINK -1 Num);
SELECT ("årets"i) (0 ("<jagáš>"i));

SELECT ("sist"i) (0 ("<maŋit>"i) LINK 0 Attr);
SELECT ("sist"i) (0 ("<maŋit>"i) LINK 1 Num OR Sem/Time);
REMOVE ("sein"i) (0 ("<maŋit>"i));

SELECT ("sakte"i) (0 ("<njoahci>"i) LINK 0 Cmp/Attr);
SELECT ("sakte"i) (0 ("<njoahci>"i) LINK 1 ("<tv>"i));
REMOVE ("sein"i) (0 ("<njoahci>"i));


SELECT ("streif"i) (0 ("<golgu>"i) LINK 0 A + Cmp);
REMOVE ("streif"i) (NOT 0 A + Cmp);

SELECT:fallback ("særskilt"i) (0 ("<sierra>"i));

SELECT:fallback ("fersk"i) (0 ("<varas>"i));


# Sámediggi ja Sámi oahpahusráđđi gárttaiga čilget máŋgii vuođđojurdagiid man vuođul gáibideimmet ollislaš sámi oahppoplána
SELECT ("helhetlig"i) (0 ("<ollislaš>"i));

SELECT:fallback ("full"i) (0 ("<ollis>"i) LINK 1 ("<áigi>"i)) ; # (1 ("tid"i));
SELECT:fallback ("hel"i) (0 ("<ollis>"i)) ; # (1 ("tid"i));

SELECT:fallback ("sterk"i) (0 ("<nanus>"i));

SELECT:fallback ("virkelig"i) (0 ("<duohta>"i) LINK *-1 ("<dahkat>"i) OR ("<šaddat>"i) BARRIER SV-BOUNDARY);
SELECT:fallback ("virkelig"i) (0 ("<duohta>"i) LINK 1 ("<máilbmi>"i));
SELECT:fallback ("sant"i) (0 ("<duohta>"i));

SELECT ("næringsrik"i) (0 ("<beaktil>"i) LINK *0 Sem/Food);

SELECT:fallback ("effektiv"i) (0 ("<beaktil>"i));

SELECT ("forrige"i) (0 ("<ovddit>"i Comp)) (1 N + Sg);

SELECT ("trygg"i) (0 ("<luohttevaš>"i)) (0 A) (NOT 0 N);
SELECT:fallback ("tillitsfull"i) (0 ("<luohttevaš>"i));

SELECT ("rolig"i) (0 ("<jaskat>"i) LINK 0 Attr LINK 1 Sem/Time);
SELECT ("taus"i) (0 ("<jaskat>"i) LINK 0 Attr);
SELECT:fallback ("taus"i) (0 ("<jaskat>"i));


SELECT ("mangfoldig"i) (0 ("<girjái>"i)) (*0 Sem/Domain OR Sem/Edu);
SELECT ("mangfoldig"i) (0 ("<girjái>"i) LINK 0 Attr) (1 HUMAN);
SELECT:fallback ("spraglet"i) (0 ("<girjái>"i));


SELECT ("liten"i) (0 ("<unni>"i) LINK 0 Comp + Attr LINK 1 ("<doallu>"i) + Pl LINK 1 VFIN + Pl);
SELECT ("få"i) (0 ("<unni>"i) LINK 0 Comp + Attr LINK 1 N + Pl);
SELECT:fallback ("liten"i) (0 ("<unni>"i));


SELECT ("kommende"i) (0 ("<boahtte>"i)) (1 ("<áigi>"i));
SELECT:fallback ("neste"i) (0 ("<boahtte>"i));

SELECT ("moro skyld"i) (0 ("<suohtas>"i)) (1 ("<dihte>"i));
SELECT:plural ("spøk"i) (0 ("<suohtas>"i) LINK 0 Pl + Acc);
SELECT:fallback ("morsom"i) (0 ("<suohtas>"i));


SELECT ("ledig"i) (0 ("<rabas>"i)) (0 Attr LINK *1 ("<.*virgi>"ri) OR ("<.*sadji>"ri) OR Sem/Build-part BARRIER NOT-NPMODADV);
SELECT:fallback ("åpen"i) (0 ("<rabas>"i));


SELECT ("rik"i) (0 ("<ruđalaš>"i) LINK 1 Sem/Hum);
SELECT:fallback ("finansiell"i) (0 ("<ruđalaš>"i));


IFF ("-årig"i) (0 ("<jahkásaš>"i)) (1 ("<.*skuvla>"ri));

SELECT ("mange"i) (0 ("<eanet>"i) OR ("<eambbo>"i) LINK 0 (A Attr)) (*1 HUMAN + Pl BARRIER NOT-PRE-A-N );	
SELECT ("mange"i) (0 ("<eanet>"i) OR ("<eambbo>"i) LINK 0 (A Attr)) (1 CC LINK 1 Attr LINK *1 HUMAN + Pl BARRIER NOT-PRE-A-N );	
SELECT:fallback ("mye"i) (0 ("<eanet>"i)  OR ("<eambbo>"i));
	
## leage buorre (vær så god)

# buorre:0 > bra, buorre:1>god , så god

LIST IJ-TIME = ("<beaivi>"i) ("<eahket>"i) ("<iđit>"i)  ("<idja>"i)   ("<vahkkoloahppa>"i) ("<beassážat>"i) ("<juovllat>"i) ;
#SELECT ("vær så god"i) (0 ("<buorre>"i)) (-1 ("<leat>"i) LINK 0 Imprt);
SELECT ("stor"i) (0 ("<buorre>"i) LINK 1 ("<muddu>"i)) ;
SELECT ("god"i) (0 ("<buorre>"i)) (1 IJ-TIME OR Po OR Sem/Edu) ;
SELECT ("god"i) (0 ("<buorre>"i)) (1 Pl) ;
SELECT ("god"i) (0 ("<buorre>"i)) (1 ("<ođas>"i) LINK 1 ("<jahki>"i)) ;
SELECT ("god"i) (0 ("<buorre>"i) LINK 0 @>N) ;
SELECT:fallback ("bra"i) (0 ("<buorre>"i));
## Dat lei buorre girji (god)
## Dat lei buorre. (bra)

#REMCOHORT TARGET ("<leat>"i) (0 Imprt) (1 ("<buorre>"i));

SELECT:fallback ("ekstern"i) (0 ("<olgguldas>"i));

SELECT ("sint"i) (0 ("<bahá>"i) LINK 0 Attr LINK 1 Sem/Hum OR Sem/Ani);
SELECT:fallback ("dårlig"i) (0 ("<bahá>"i));

SELECT ("i tjue"i) (0 ("<goalmmát>"i) LINK 1 ("<lohki>"i));
SELECT ("i tretti"i) (0 ("<njealját>"i) LINK 1 ("<lohki>"i));
SELECT ("i førti"i) (0 ("<viđát>"i) LINK 1 ("<lohki>"i));
SELECT ("i femti"i) (0 ("<guđát>"i) LINK 1 ("<lohki>"i));
SELECT ("i femti"i) (0 ("<guđat>"i) LINK 1 ("<lohki>"i));
SELECT ("i seksti"i) (0 ("<čihččet>"i) LINK 1 ("<lohki>"i));
SELECT ("i sytti"i) (0 ("<gávccát>"i) LINK 1 ("<lohki>"i));
SELECT ("i åtti"i) (0 ("<ovccát>"i) LINK 1 ("<lohki>"i));
SELECT ("i nitti"i) (0 ("<logát>"i) LINK 1 ("<lohki>"i));
SELECT:fallback ("goalmmát"i) (0 ("<tredje>"i));
SELECT:fallback ("njealját"i) (0 ("<fjerde>"i));
SELECT:fallback ("viđát"i) (0 ("<femte>"i));
SELECT:fallback ("guđát"i) (0 ("<sjette>"i));
SELECT:fallback ("čihččet"i) (0 ("<sjuende>"i));
SELECT:fallback ("gávccát"i) (0 ("<åttende>"i));
SELECT:fallback ("ovccát"i) (0 ("<niende>"i));
SELECT:fallback ("logát"i) (0 ("<tiende>"i));


# vissis:0 > sikker, vissis:1 > viss
SELECT ("viss"i) (0 ("<vissis>"i)) (*1 N BARRIER NOT-A) ;
# muhtun vissis:1 áiggi maŋŋel, doallat viesu rabasin vissis:1 áiggiid
# (vs. mun lean vissis:0 ahte)

# DISSE ORDSPESIFIKKE REGLENE SKAL STÅ I DICT !!

SELECT ("ydmyk"i) (0 ("<vuollegaš>"i)) ((*-1 COPULAS BARRIER NOT-ADV-PCLE LINK -1 Sem/Hum OR Pers OR Prop ) OR (1 Sem/Hum));
SELECT:fallback ("lav"i) (0 ("<vuollegaš>"i));

SELECT:fallback ("dårlig"i) (0 ("<headju>"i));
SELECT:fallback ("saklig"i) (0 ("<áššálaš>"i));

SELECT:fallback ("dårlig"i) (0 ("<garas>"i) LINK 1 ("<dálki>"i));
SELECT:fallback ("kraftig"i) (0 ("<garas>"i)) (1 ("<biegga>"i)) ; # OR (*-1 ("<biegga>"i)));
SELECT:fallback ("kraftig"i) (0 ("<garas>"i)) (*-1 ("<biegga>"i));
SELECT:fallback ("hard"i) (0 ("<garas>"i));

SELECT ("måneder gammel"i) (0 ("<mánnosaš>"i)) (-1 Num);
SELECT:fallback ("månedlig"i) (0 ("<mánnosaš>"i));


# Subjunctions
# ============

SELECT ("at"i) (0 ("<nu ahte>"i)) (-1 ("sørge# for"i));
SELECT:fallback ("slik at"i) (0 ("<nu ahte>"i));

SELECT ("når"i) (0 ("<dalle go>"i)) (-1 ("<earret>"i));
SELECT:fallback ("da"i) (0 ("<dalle go>"i));

SELECT ("å"i) (0 ("<ahte>"i) LINK 0 CS) (1 Inf);
SELECT ("om at"i) (0 ("<ahte>"i) LINK 0 CS) (-1 ("<diehtu>"i) OR ("<muittuhit>"i) OR ("<váruhit>"i) OR ("<gáibádus>"i));


SELECT:fallback ("at"i) (0 ("<ahte>"i) LINK 0 CS);




# Proper nouns
# ============
SELECT:fallback ("Sørreisa"i) (0 ("<Ráisavuotna>"i));

SELECT ("Troms"i) (0 ("<Romsa>"i) LINK *1 ("<fylka>"i) OR ("<fylkkasuohkan>"i) OR ("<Finnmárku>"i));
SELECT ("Troms"i) (0 ("<Romsa>"i) LINK *-1 ("<Finnmárku>"i));
SELECT:fallback ("Tromsø"i) (0 ("<Romsa>"i));

SELECT ("Komsa"i) (0 ("<Gurraváráš>"i) LINK -1 ("<unni>"i) OR ("<uhcci>"i));
SELECT:fallback ("Lille Komsa"i) (0 ("<Gurraváráš>"i));

SELECT:fallback ("Nordkapp"i) (0 ("<Davvinjárga>"i));

### end of cglex.txt section




AFTER-SECTIONS

# Here come the general, not word-specific rules.

#Lhilosophy: First insertions, then movements



### pardef implementation

### Many pardefs are probably not necessary. Thus, information about gender is harvested by the fst itself, directly from the Norwegian lemma. And __verb and __adj should just be general rules for all Norwegian V and ADJ, I guess.

SUBSTITUTE (Pl) (Sg) TARGET (N) (0 (<sg^n>)) ; # sg__n



LIST LOC-PA = "tog" "tomt" "politistasjon" "stasjon" ;
LIST LOC-OM = "kveld" "morgen" "dag" ;

### infinitive marker

ADDCOHORT ("<å>" "å" <NOB:å> <insert> IM) BEFORE V + Inf IF (p Ind) (NONE p (@FAUX)) ;

### prepositions
LIST N/Prop = N PROP ;
LIST N/Prop/A = N PROP A ;
LIST NOMEN = N PROP PRON ;

ADDCOHORT (VSTR:"<$1>" VSTR:"$1" <insert> Pr) BEFORE (<NOB:\(.+\)=\\+.*>r) (0 (<noprp>)) ;
SETPARENT (<insert> Pr) TO (1 (<noprp>)) ;

## Locative

ADDCOHORT ("<i>" "i" <NOB:i> <insert> Pr) BEFORE ("humør") + Loc (NOT 0 (<hab>) OR (<noprp>) OR Adv)(NOT -1 Pr) ; 
ADDCOHORT ("<ved>" "ved" <NOB:ved> <insert> Pr) BEFORE ("makt") + Loc (NOT 0 (<hab>) OR (<noprp>) OR Adv)(NOT -1 Pr) ; 
ADDCOHORT ("<som>" "som" <NOB:som> <insert> Pr) BEFORE ("verdifull") IF (p ("atnit" V)) (NOT 0 (<hab>) OR (<noprp>) OR Adv)(NOT -1 Pr) ; 
ADDCOHORT ("<om>" "om" <NOB:om> <insert> Pr) BEFORE Sem/Semcon + Loc OR LOC-OM + Loc (NOT 0 (<hab>) OR (<noprp>) OR Adv)(NOT -1 Pr) ; 
ADDCOHORT ("<om>" "om" <NOB:om> <insert> Pr) BEFORE NOMEN + Loc (p ("beroštit" V)) (NOT 0 (<hab>) OR (<noprp>) OR Adv)(NOT -1 Pr) ; 
ADDCOHORT ("<med>" "med" <NOB:med> <insert> Pr) BEFORE N/Prop + Loc IF (p ("geargat" V))(NOT 0 (<hab>) OR (<noprp>) OR A OR Adv)(NOT -1 Pr) ; 
ADDCOHORT ("<av>" "av" <NOB:av> <insert> Pr) BEFORE N/Prop/A + Loc + (@ADVL-ela) IF (p ("gáibidit")); 
ADDCOHORT ("<fra>" "fra" <NOB:fra> <insert> Pr) BEFORE N/Prop + Loc + (@ADVL-ela) IF (NOT 0 (<hab>) OR (<noprp>) OR A OR Adv)(NOT -1 Pr); 
ADDCOHORT ("<på>" "på" <insert> Pr) BEFORE N/Prop + Loc IF (0 LOC-PA) (NOT 0 (<hab>) OR (<noprp>))(NOT -1 Pr)(NOT -1 Pr);  # på fungerer ikke, men av fungerer. utf8-problem?
ADDCOHORT ("<i>" "i" <NOB:i> <insert> Pr) BEFORE N/Prop + Loc IF (NOT 0 (<hab>) OR (<noprp>) OR A OR Adv)(NOT -1 Pr); 


## Illative

ADDCOHORT ("<til>" "til" <NOB:til> <insert> Pr) BEFORE NOMEN + Ill IF (NOT 0 (<noprp>)); 

## Com

ADDCOHORT ("<med>" "med" <NOB:med> <insert> Pr) BEFORE NOMEN + Com IF (NOT 0 (<noprp>));

## Essive

ADDCOHORT ("<som>" "som" <NOB:som> <insert> Pr) BEFORE NOMEN + Ess IF (NOT 0 (<noprp>)); 


SETPARENT (<insert> Pr) (NONE p (*)) TO (1 (*)) ;



# Reglane for det-insetting ordna etter subjekt-insetting, og bruker funksjon, ikkje form
#ADDCOHORT ("<en>" "en" <NOB:en> <insert> Det Dem Indef @>N) BEFORE (N Sg) - (Def) (NOT -1 A OR Det OR Gen OR Num);
#ADDCOHORT ("<en>" "en" <NOB:en> <insert> Det Dem Indef @>N) BEFORE A OR (N Sg) - (Def) (*1 (N Sg)  BARRIER (*) - Det - A - Gen) (NOT -1 Det OR A OR Gen) ; # simplified example for indef. article insertion 


## formal subject

ADDCOHORT ("<det>" "det" <NOB:det> <insert> Pron Pers Sg3 @SUBJ) BEFORE WITHCHILD (*) (<ext>) (NONE s (<hab>));
ADDCOHORT ("<det>" "det" <NOB:det> <insert> Pron Pers Sg3 @SUBJ) BEFORE (<weather>) ;
ADDCOHORT ("<det>" "det" <NOB:det> <insert> Pron Pers Sg3 @SUBJ) BEFORE (<esubj>) ;

ADDCOHORT ("<det>" "det" <NOB:det> <insert> Pron Pers Sg3 @SUBJ) BEFORE (V Sg3) (c ("leat" @IMV))(NEGATE c SUBJ);
SETPARENT:formalsubjdep (<insert>) (NONE p (*)) TO (1 V);


### indefinite determiners


## subject predicatives
# insert Det Indef before SPRED Det er en bil. Han er en lærer. (?)
ADDCOHORT ("<den>" "den" <NOB:den> <insert> Det Dem Def Msc @>N) BEFORE WITHCHILD (*) N + (Msc) + (<right>) + @SPRED (NONE c (PRON) OR Gen OR (Det))(NOT 0 (<unc>) OR Ess)(NONE p ("leat" @FMV));
ADDCOHORT ("<den>" "den" <NOB:den> <insert> Det Dem Def Fem @>N) BEFORE WITHCHILD (*) N + (Fem) + (<right>) + @SPRED (NONE c (PRON) OR Gen OR (Det))(NOT 0 (<unc>) OR Ess)(NONE p ("leat" @FMV));
ADDCOHORT ("<den>" "den" <NOB:den> <insert> Det Dem Def Neu @>N) BEFORE WITHCHILD (*) N + (Neu) + (<right>) + @SPRED (NONE c (PRON) OR Gen OR (Det))(NOT 0 (<unc>) OR Ess)(NONE p ("leat" @FMV));
SETPARENT:article (<insert> Det Dem) (NONE p (*)) TO (*1 N);
ADDCOHORT ("<en>" "en" <NOB:en> <insert> Det Dem Indef @>N) BEFORE WITHCHILD (*) N + (Msc) + (<right>) + @SPRED (NONE c (PRON) OR Gen OR (Det))(NOT 0 (<unc>) OR Ess);
SETPARENT:article (<insert> Det Dem) (NONE p (*)) TO (*1 N);
ADDCOHORT ("<et>" "et" <NOB:et> <insert> Det Dem Indef @>N) BEFORE WITHCHILD (*) N + (Neu) + (<right>) + @SPRED (NONE c (PRON) OR Gen OR (Det))(NOT 0 (<unc>));
SETPARENT:article (<insert> Det Dem) (NONE p (*)) TO (*1 N);
ADDCOHORT ("<ei>" "ei" <NOB:ei> <insert> Det Dem Indef @>N) BEFORE WITHCHILD (*) N + (Fem) + (<right>) + @SPRED (NONE c (PRON) OR Gen OR (Det))(NOT 0 (<unc>));

## e-subjects
# insert Det Indef before e-subject I byen er det en bil
ADDCOHORT ("<en>" "en" <NOB:en> <insert> Det Dem Indef @>N) BEFORE WITHCHILD (*) N + Sg + (Msc) + (<ext>);
ADDCOHORT ("<et>" "et" <NOB:et> <insert> Det Dem Indef @>N) BEFORE WITHCHILD (*) N + Sg + (Neu) + (<ext>);
ADDCOHORT ("<ei>" "ei" <NOB:ei> <insert> Det Dem Indef @>N) BEFORE WITHCHILD (*) N + Sg + (Fem) + (<ext>);

SETPARENT:article (<insert> Det Dem Indef) (NONE p (*)) TO (*1 N);

## objects
# Definite: dør, hand, veg, blikk, tid, sak, gang, spørsmål, verden, bil, munn, bok, rygg
# Definite: Part-of-whole, general reference
# Indefinite: gang, stund, del, bit, blikk, aning, kjensle, sjanse, bilde, rolle

## subjects

## pr complements


# Dette regelparet burde kunne bli slått saman med *1S som kombinasjon av 0 og *1, Eckhard ser på det.
#ADDCOHORT ("<en>" "en" <NOB:en> <insert> Det Dem Indef @>N) BEFORE (N Sg) - (Def) (NOT -1 A OR Det OR Gen);
#ADDCOHORT ("<en>" "en" <NOB:en> <insert> Det Dem Indef @>N) BEFORE A OR (N Sg) - (Def) (*1 (N Sg)  BARRIER (*) - Det - A - Gen) (NOT -1 Det OR A OR Gen)(NONE s ("det" Pron Pers @SUBJ)) ; # simplified example for indef. article insertion 


### pronouns
ADDCOHORT ("<jeg>" "jeg" <NOB:jeg> <insert> Pron Pers Sg1 Nom @<SUBJ) BEFORE V + Sg1 + Qst (NONE c SUBJ) ;
ADDCOHORT ("<du>" "du" <NOB:du> <insert> Pron Pers Sg2 Nom @<SUBJ) AFTER V + Sg2 + Qst (NONE c SUBJ) ;
ADDCOHORT ("<det>" "det" <NOB:det> <insert> Pron Pers Sg3 @<SUBJ) BEFORE V + Sg3 + Qst (NONE c SUBJ) ;
ADDCOHORT ("<vi>" "vi" <NOB:vi> <insert> Pron Pers Pl1 Nom @<SUBJ) BEFORE V + Pl1 + Qst (NONE c SUBJ) ;
ADDCOHORT ("<vi>" "vi" <NOB:vi> <insert> Pron Pers Pl1 Nom @<SUBJ) BEFORE V + Du1 + Qst (NONE c SUBJ) ;
ADDCOHORT ("<dere>" "dere" <NOB:dere> <insert> Pron Pers Pl2 Nom @<SUBJ) BEFORE V + Pl2 + Qst (NONE c SUBJ) ;
ADDCOHORT ("<dere>" "dere" <NOB:dere> <insert> Pron Pers Pl2 Nom @<SUBJ) BEFORE V + Du2 + Qst (NONE c SUBJ) ;
ADDCOHORT ("<de>" "de" <NOB:dere> <insert> Pron Pers Pl3 Nom @<SUBJ) BEFORE V + Pl3 + Qst (NONE c SUBJ) ;
ADDCOHORT ("<de>" "de" <NOB:dere> <insert> Pron Pers Pl3 Nom @<SUBJ) BEFORE V + Du3 + Qst (NONE c SUBJ) ;

ADDCOHORT ("<jeg>" "jeg" <NOB:jeg> <insert> Pron Pers Sg1 Nom @<SUBJ) BEFORE V + Sg1 (c Qst) (NONE c SUBJ) ;
ADDCOHORT ("<du>" "du" <NOB:du> <insert> Pron Pers Sg2 Nom @<SUBJ) AFTER V + Sg2 (c Qst) (NONE c SUBJ) ;
ADDCOHORT ("<det>" "det" <NOB:det> <insert> Pron Pers Sg3 @<SUBJ) BEFORE V + Sg3 (c Qst) (NONE c SUBJ) ;
ADDCOHORT ("<vi>" "vi" <NOB:vi> <insert> Pron Pers Pl1 Nom @<SUBJ) BEFORE V + Pl1 (c Qst) (NONE c SUBJ) ;
ADDCOHORT ("<vi>" "vi" <NOB:vi> <insert> Pron Pers Pl1 Nom @<SUBJ) BEFORE V + Du1 (c Qst) (NONE c SUBJ) ;
ADDCOHORT ("<dere>" "dere" <NOB:dere> <insert> Pron Pers Pl2 Nom @<SUBJ) BEFORE V + Pl2 (c Qst) (NONE c SUBJ) ;
ADDCOHORT ("<dere>" "dere" <NOB:dere> <insert> Pron Pers Pl2 Nom @<SUBJ) BEFORE V + Du2 (NONE c SUBJ) ;
ADDCOHORT ("<de>" "de" <NOB:dere> <insert> Pron Pers Pl3 Nom @<SUBJ) BEFORE V + Pl3 (c Qst) (NONE c SUBJ) ;
ADDCOHORT ("<de>" "de" <NOB:dere> <insert> Pron Pers Pl3 Nom @<SUBJ) BEFORE V + Du3 (c Qst) (NONE c SUBJ) ;

SETPARENT:formalsubjdep (<insert> @<SUBJ) (NONE p (*)) TO (-1 (@FAUX) OR (@FMV));

REMCOHORT:Qst ("<go>") IF (0 Qst) ;

ADDCOHORT ("<jeg>" "jeg" <NOB:jeg> <insert> Pron Pers Sg1 Nom @SUBJ>) BEFORE V + Sg1 (NONE c SUBJ) ;
ADDCOHORT ("<du>" "du" <NOB:du> <insert> Pron Pers Sg2 Nom @SUBJ>) BEFORE V + Sg2 (NEGATE 0 Imprt) (NONE c SUBJ) ;
#ADDCOHORT ("<hun>" "hun" <NOB:hun> <insert> Pron Pers Sg3 Nom @SUBJ>) BEFORE V + Sg3 (NONE c SUBJ) ;
ADDCOHORT ("<det>" "det" <NOB:det> <insert> Pron Pers Sg3 @SUBJ>) BEFORE V + Sg3 (NONE c SUBJ) ;
ADDCOHORT ("<vi>" "vi" <NOB:vi> <insert> Pron Pers Pl1 Nom @SUBJ>) BEFORE V + Pl1 (NONE c SUBJ) ;
ADDCOHORT ("<vi>" "vi" <NOB:vi> <insert> Pron Pers Pl1 Nom @SUBJ>) BEFORE V + Du1 (NONE c SUBJ) ;
ADDCOHORT ("<dere>" "dere" <NOB:dere> <insert> Pron Pers Pl2 Nom @SUBJ>) BEFORE V + Pl2 (NEGATE 0 Imprt) (NONE c SUBJ) ;
ADDCOHORT ("<dere>" "dere" <NOB:dere> <insert> Pron Pers Pl2 Nom @SUBJ>) BEFORE V + Du2 (NEGATE 0 Imprt) (NONE c SUBJ) ;
ADDCOHORT ("<de>" "de" <NOB:dere> <insert> Pron Pers Pl3 Nom @SUBJ>) BEFORE V + Pl3 (NONE c SUBJ) ;
ADDCOHORT ("<de>" "de" <NOB:dere> <insert> Pron Pers Pl3 Nom @SUBJ>) BEFORE V + Du3 (NONE c SUBJ) ;




ADDCOHORT ("<meg>" "jeg" <NOB:meg> <insert> Pron Pers Sg1 Acc @<OBJ) AFTER V + Sg1 + (".*=SUBJ"r) ;
ADDCOHORT ("<deg>" "du" <NOB:deg> <insert> Pron Pers Sg2 Acc @<OBJ) AFTER V + Sg2 + (".*=SUBJ"r) ;
ADDCOHORT ("<seg>" "seg" <NOB:seg> <insert> Pron Pers Sg3 Acc @<OBJ) AFTER V-3 + (".*=SUBJ"r) ;
ADDCOHORT ("<oss>" "vi" <NOB:vi> <insert> Pron Pers Pl1 Acc @<OBJ) AFTER V-DU-PL-1 + (".*=SUBJ"r) ;
ADDCOHORT ("<dere>" "dere" <NOB:dere> <insert> Pron Pers Pl2 Acc @<OBJ) AFTER V-DU-PL-2 + (".*=SUBJ"r) ;

SUBSTITUTE ("(.*)=SUBJ"r) (VSTR:"$1") TARGET V ; 
	## Basadan iđđes.

SETPARENT:formalsubjdep (<insert> @SUBJ>) (NONE p (*)) TO (1 (@FAUX) OR (@FMV));
SETPARENT:objdep (<insert> @<OBJ) (NONE p (*)) TO (-1 (@FMV));

### suffixes

SUBSTITUTE ("([^<]+)"r) (VSTR:"begynne=å=$1") TARGET (Der/InchL V) ; # vuoššagohtet Der/InchL => Inf
SUBSTITUTE ("([^<]+)"r) (VSTR:"bli=$1/PCP") TARGET (Der/PassL V) ; # vuššojuvvot
SUBSTITUTE ("([^<]+)"r) (VSTR:"bli=$1/PCP") TARGET (Der/PassS V) ; # vuššot
SUBSTITUTE ("([^<]+)"r) (VSTR:"bli=$1/PCP") TARGET (Der/halla V) ; # vuovddáhalai



SUBSTITUTE  ("([^<]+)e"r) (VSTR:"$1ing") TARGET (Ex/V Der/NomAct N) ; # čohkamiid Pl koking
SUBSTITUTE  ("([^<]+)e"r) (VSTR:"$1er") TARGET (Ex/V Der/NomAg N) ; # čohkamat Pl koker

SUBSTITUTE (V) (*) TARGET (Ex/V N) ; # remove the interim V again, so it doesn't confuse genmorf

### splitting off particles

ADDCOHORT ("<$1>"v "$1"v <insert> X @MV<) AFTER ("[^<=]+=(.+)"r V) ; # split off verb incorporates (particles or more)
SUBSTITUTE ("([^<=]+)=.*"r) ("$1"v) TARGET (V) (1 (<insert> X) LINK NONE p (*)) ; # remove split-off part from verb lemma
SETPARENT (<insert> X) (NONE p (*)) TO (-1 V) ; # dep-attach the split-offs

SUBSTITUTE (X) (VSTR:$1) TARGET ("[^<]+/\([A-Z]+\)"r <insert> X) ; # add POS to split-offs if specified
SUBSTITUTE ("([^<]+)/[A-Z]+"r) ("$1"v) TARGET (<insert>) ; # remove /POS information
SUBSTITUTE ("<([^<]+)/[A-Z]+>"r) ("<$1>"v) TARGET (<insert>) ; # remove /POS information

#SUBSTITUTE (A) (A Pos Msc Sg Indef) TARGET (<insert> A) ;
SUBSTITUTE (@MV<) (@SPRED) TARGET (<insert> A) (p ("bli") OR ("være")) ;
SUBSTITUTE (PCP) (V PrfPrc) TARGET (<insert> PCP)  ;
SUBSTITUTE:superl (A Superl Attr) (A Superl Indef) TARGET (A Superl Attr) ; # 

### propagating gender and number to adjectives and determiners (does not work for PRON)

SUBSTITUTE:num (A) (A VSTR:$1) TARGET (A) (p (N /^\(Sg|Pl\)$/r))(NEGATE 0 Superl) ; # number first
SUBSTITUTE:gen (A) (A VSTR:$1) TARGET (A) (p (N /^\(Msc|Fem|Neu\)$/r))(NEGATE 0 Superl) ; # then gender

SUBSTITUTE:IndefPossNum (PRON Indef) (Det Poss VSTR:$1) TARGET (PRON Indef @>N) (p (N /^\(Sg|Pl\)$/r)) ; # number first
SUBSTITUTE:IndefPossCas (PRON Indef) (Det Poss VSTR:$1) TARGET (PRON Indef @>N) (p (N /^\(Msc|Fem|Neu\)$/r)) ; # then gender
SUBSTITUTE:PersPossNum (PRON Pers) (Det Poss VSTR:$1) TARGET (PRON Pers @>N) (p (N /^\(Sg|Pl\)$/r)) ; # number first

#SUBSTITUTE:PersPossCas (PRON Pers) (Det Poss VSTR:$1) TARGET (PRON Pers @>N) (p (N /^\(Msc|Fem|Neu\)$/r)) ; # then gender
SUBSTITUTE:PersPossCas (Det Poss Msc) (Det Poss Neu) TARGET (Det Poss @>N) (p (N Neu)) ; # then gender
SUBSTITUTE:PersPossCas (Det Poss Msc) (Det Poss Fem) TARGET (Det Poss @>N) (p (N Fem)) ; # then gender

SUBSTITUTE:Anumpred (A) (A VSTR:$1) TARGET (A) (0 @SPRED) (s @SUBJ LINK 0 (/^\(Sg|Pl\)[123]?$/r)) ; # number for predicatives
SUBSTITUTE:Anum (A) (A Pl) TARGET (A) (0 @SPRED) (s @SUBJ LINK 0 (/^\(Du[123]\)$/r)) ; # number first
SUBSTITUTE:Agend (A) (A VSTR:$1) TARGET (A) (0 @SPRED) (s @SUBJ LINK 0 (/^\(Msc|Fem|Neu\)$/r)) ; # gender for predicatives, will also harvest gender from subject pronouns as soon as gender is mapped onto those (higher upper up this grammar, possibly using anaphora techniques etc.)

SUBSTITUTE (A) (A VSTR:$1) TARGET (A) (0 @OPRED) (s @OBJ LINK 0 (/^\(Sg|Pl\)[123]?$/r)) ; # number for predicatives
SUBSTITUTE (A) (A Pl) TARGET (A) (0 @OPRED) (s @OBJ LINK 0 (/^\(Du[123]\)$/r)) ; # number first
SUBSTITUTE (A) (A VSTR:$1) TARGET (A) (0 @OPRED) (s @OBJ LINK 0 (/^\(Msc|Fem|Neu\)$/r)) ; # gender for predicatives



### propagating to Det

#SUBSTITUTE (Sg) (Pl) TARGET Det OR Pron (p (N /^\(Sg|Pl\)$/r)) ; # forsto ikkje denne
SUBSTITUTE (Sg) (Pl) TARGET Det OR Pron (p (N /^\Pl$/r)) ; 
SUBSTITUTE (Sg) (Pl) TARGET Det OR Pron (p Num LINK pr (N /^\(Sg|Pl\)$/r)) ; 

### no gender for plural A og Det

#SUBSTITUTE (/^<\(Msc|Fem|Neu\)>$/r) (*) TARGET A + Pl OR Det + Pl ;

### pp-phrases

SUBSTITUTE:pp-compl (Gen) (Acc) TARGET (N Gen @>P) ; # (N @>P) ; 

### genitive 
SUBSTITUTE:clt (Gen) (Def Clt) TARGET (N Gen @>N)  ; # in genmorf_noq



### definiteness
#SUBSTITUTE (Der/vuota) (Def) TARGET (A) IF (0 Der/vuota) ; # vi har en bedre regel for dette: +het



### accusative to pronouns
SUBSTITUTE (Nom) (Acc) TARGET Pron (1 ("selv" @Pron<)) ; 
SUBSTITUTE (Loc) (Acc) TARGET Pron (-1 Pr) ; 
SUBSTITUTE (Ill) (Acc) TARGET Pron (-1 Pr) ; 

### reflexiive pronouns
SUBSTITUTE (PRON Refl Gen PxPl2) (DET Poss Pl2) TARGET (PRON Refl Gen PxPl2) ; 



### negation
SUBSTITUTE:cond (Cond Prs ConNeg) (Ind Prt) TARGET (V Cond Prs ConNeg) ; # Jus in livčče mun ieš.
SUBSTITUTE (Ind Prs ConNeg) (Ind Prs) TARGET (Ind Prs ConNeg) ; 
SUBSTITUTE (Ind Prt ConNeg) (Ind Prt) TARGET (Ind Prt ConNeg) ; 


### subordinating conjunctions / infinitive markers


ADDCOHORT ("<for=å>" "for=å" <NO:for=å> <insert> Sub @SUB) BEFORE (Inf @ADVL) ;
SETPARENT (<insert> Sub) TO (*1 V) ;

SUBSTITUTE (Sg3) (*) TARGET V + Sg3;
SUBSTITUTE (Sg2) (*) TARGET V + Sg2;
SUBSTITUTE (Sg1) (*) TARGET V + Sg1;
SUBSTITUTE (Sg3) (*) TARGET Pron + Sg3;
SUBSTITUTE (IV) (*) TARGET IV ;
SUBSTITUTE (TV) (*) TARGET TV ;
SUBSTITUTE (NomAg) (*) TARGET NomAg ;

SUBSTITUTE Nom (*) TARGET N + Nom ;
SUBSTITUTE Acc (*) TARGET N + Acc ;

#SUBSTITUTE (Sg) (Sg Indef) TARGET (<maydetind^n>) ;

SUBSTITUTE:clean (<W:.*>r) (*) TARGET (*) ;
SUBSTITUTE:clean (/Sem\/.*/r) (*) TARGET N ;

SELECT ("jeg") IF (1 V + Sg1); # todo: conditions

#SETPARENT (<insert> 

# MOVE rules

MOVE (PO) BEFORE WITHCHILD (*) (c (*)); # flytt foran barn med alle sine barn
MOVE (Det) BEFORE WITHCHILD (*) (c (*)); # flytt foran barn med alle sine barn
MOVE (<insert> Pr) BEFORE WITHCHILD (*) (p (*)) ; # move inserted preposition left of complete np

# VFIN after subjects

SETPARENT @SUBJ TO (s (ConNeg));

MOVE (Ind) - (Neg) AFTER WITHCHILD (*) (cl @SUBJ - Sem/Year) ;


# V2-inversions

MOVE WITHCHILD (*) (<left> @SUBJ) (sl (<left> @ADVL)) AFTER (p V) ;
MOVE WITHCHILD (*) (@SUBJ) (sl (ADV)) AFTER (p V) ; #Todo: (<left> @ADVL-ine

# clause-level

MOVE WITHCHILD (*) (<left> @OBJ) (NONE sr (@SUBJ)) AFTER (p V);

# compounds

#SUBSTITUTE (<cohort-with-dynamic-compound>) (<PREF:$1>v) TARGET (<cohort-with-dynamic-compound>) (-1 ("([^<]+)"r @PREF) - (<sme>)) ; # inserts first part of coumpound as <PREF:...> tag of the second part
SUBSTITUTE ("[^<]*"r) (VSTR:"$1" VSTR:<PREF:$2>) TARGET ("([^<]*)"r) (-1 ("([^<]+)"r @PREF) - (<sme>)) ; # alternative with the same effect as the preceding rule, but would work even without dynamic compound tag, i.e. with surviving split fst reading, where the long form was discarded
REMCOHORT (@PREF) ; # remove first part token


# upper case

SUBSTITUTE ("([^<]*)"r) (VSTR:"$1" <*>) TARGET WORD (*-1 BOS BARRIER WORD) ; # uppercasing sentence start

END
