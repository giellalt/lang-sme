## Process this file with automake to produce Makefile.in
## Copyright: SÃ¡mediggi/Divvun/UiT
## Licence: GPL v3+

# always build . last here, and tagsets have to be built after morphology
SUBDIRS = phonology morphology filters phonetics hyphenation orthography syntax transcriptions tagsets .

####### Automake targets: ########

if CAN_HFST
GT_ANALYSERS_HFST=analyser-gt-desc.hfst \
				  analyser-gt-norm.hfst
GT_GENERATORS_HFST=generator-gt-desc.hfst \
				   generator-gt-norm.hfst 
GT_TRANSFORMERS_HFST=transcriptor-clock2text-desc.hfst \
					 transcriptor-date2text-desc.hfst \
					 transcriptor-numbers2text-desc.hfst

#				   generator-tts-gt-norm.hfst
if WANT_APERTIUM
APERTIUM_ANALYSERS_HFST=analyser-apertium-desc.hfst \
						analyser-apertium-norm.hfst
APERTIUM_GENERATORS_HFST=generator-apertium-desc.hfst \
						generator-apertium-norm.hfst
endif # WANT_APERTIUM
endif # CAN_HFST

if CAN_XFST
GT_ANALYSERS_XFST=analyser-gt-desc.xfst analyser-gt-norm.xfst
GT_GENERATORS_XFST=generator-gt-desc.xfst generator-gt-norm.xfst
GT_TRANSFORMERS_XFST=transcriptor-clock2text-desc.xfst \
					 transcriptor-date2text-desc.xfst \
					 transcriptor-numbers2text-desc.xfst
endif

if WANT_OAHPA
if CAN_HFST
GT_GENERATORS_HFST+=generator-oahpa-gt-norm.hfst
endif # CAN_HFST
if CAN_XFST
GT_GENERATORS_XFST+=generator-oahpa-gt-norm.xfst
endif # CAN_XFST
endif # WANT_OAHPA

# HFST transducers
if CAN_HFST
GT_ANALYSERS_HFST+=
GT_GENERATORS_HFST+=
if WANT_APERTIUM
APERTIUM_ANALYSERS_HFST+=analyser-apertium-norm.att
endif
endif


#### Local modifications in *fst processing: ####
####
#### Copy the fallback targets, and rename them to the desired targets. Then:
#### Replace the 'cp' command (Xerox) / Prepend the hfst-invert command (Hfst -
#### remember to move the $<) with whatever you need to complete
#### the processing to get the final target transducer.
#### Remember to add the dependencies as well.
#### Also make sure that HFST and Xerox processing are the same.
####
#### If you add new transducers to be built, you need to add them to the
#### relevant variable, e.g.:
####
#### if CAN_HFST
#### GT_GENERATORS_HFST+=generator-oahpa-gt-norm.hfst
#### endif
####
#### NB!!!! The HFST targets should get a hyphen after 'analyser'/'generator'
#### respectively, to make the local targets minimally different from and
#### slightly more specific than the fallback targets. This is to avoid warnings
#### about duplicate targets. That is, the local targets should looke like:
####
#### analyser-%.hfst: analyser-%.tmp.hfst
#### generator-%.hfst: generator-%.tmp.hfst

#### BEGIN: Add local processing instructions BELOW this line ####

# A generator for producing word forms suitable for tts:
# * no circular constructions:
# ** no (arabic) cardinals
# ** no (arabic) ordinals
# ** no generated acronyms
# ** no dynamic compounding
# * no abbreviations (they should instead be expanded)
# * no punctuation
# * no substandard forms
# * no illegal derivations
# * only Guovdageaidnu dialect forms
generator-tts-gt-norm.hfst: analyser-raw-gt-desc.hfst              \
					filters/make-optional-semantic-tags.hfst       \
					filters/make-optional-transitivity-tags.hfst   \
					filters/make-optional-homonymy-tags.hfst       \
					filters/make-optional-variant-tags.hfst        \
					filters/remove-derivation-position-tags.hfst   \
					filters/remove-dialect-tags.hfst               \
					filters/remove-hyphenation-marks.hfst          \
					filters/remove-infl_deriv-borders.hfst         \
					filters/remove-norm-comp-tags.hfst             \
					filters/remove-number-string-tags.hfst         \
					filters/remove-usage-tags.hfst                 \
					filters/remove-sub-forms.hfst                  \
					filters/remove-ABBR-strings.hfst               \
					filters/remove-illegal-derivation-strings.hfst \
					filters/remove-PUNCT-strings.hfst              \
					filters/remove-UseCirc-strings.hfst            \
					filters/remove-RCmpnd-strings.hfst             \
					filters/remove-CLB-strings.hfst
	$(AM_V_GEN)$(HFST_COMPOSE) $(HFST_FLAGS) -F -1 $< \
			-2 filters/remove-infl_deriv-borders.hfst \
		| $(HFST_MINIMIZE) $(HFST_FLAGS) \
		| $(HFST_COMPOSE) $(HFST_FLAGS) -F \
			-1 filters/remove-sub-forms.hfst \
		| $(HFST_MINIMIZE) $(HFST_FLAGS) \
		| $(HFST_COMPOSE) $(HFST_FLAGS) -F \
			-1 filters/remove-ABBR-strings.hfst \
		| $(HFST_MINIMIZE) $(HFST_FLAGS) \
		| $(HFST_COMPOSE) $(HFST_FLAGS) -F \
			-1 filters/remove-illegal-derivation-strings.hfst \
		| $(HFST_MINIMIZE) $(HFST_FLAGS) \
		| $(HFST_COMPOSE) $(HFST_FLAGS) -F \
			-1 filters/remove-PUNCT-strings.hfst \
		| $(HFST_MINIMIZE) $(HFST_FLAGS) \
		| $(HFST_COMPOSE) $(HFST_FLAGS) -F \
			-1 filters/remove-UseCirc-strings.hfst \
		| $(HFST_MINIMIZE) $(HFST_FLAGS) \
		| $(HFST_COMPOSE) $(HFST_FLAGS) -F \
			-1 filters/remove-RCmpnd-strings.hfst \
		| $(HFST_MINIMIZE) $(HFST_FLAGS) \
		| $(HFST_COMPOSE) $(HFST_FLAGS) -F \
			-1 filters/remove-CLB-strings.hfst \
		| $(HFST_MINIMIZE) $(HFST_FLAGS) \
		| $(HFST_COMPOSE) $(HFST_FLAGS) -F \
			-1 filters/remove-usage-tags.hfst \
		| $(HFST_MINIMIZE) $(HFST_FLAGS) \
		| $(HFST_COMPOSE) $(HFST_FLAGS) -F \
			-1 filters/remove-number-string-tags.hfst \
		| $(HFST_MINIMIZE) $(HFST_FLAGS) \
		| $(HFST_COMPOSE) $(HFST_FLAGS) -F \
			-1 filters/remove-norm-comp-tags.hfst \
		| $(HFST_MINIMIZE) $(HFST_FLAGS) \
		| $(HFST_COMPOSE) $(HFST_FLAGS) -F \
			-1 filters/remove-dialect-tags.hfst \
		| $(HFST_MINIMIZE) $(HFST_FLAGS) \
		| $(HFST_COMPOSE) $(HFST_FLAGS) -F \
			-1 filters/remove-derivation-position-tags.hfst \
		| $(HFST_MINIMIZE) $(HFST_FLAGS) \
		| $(HFST_COMPOSE) $(HFST_FLAGS) -F \
			-1 filters/make-optional-homonymy-tags.hfst \
		| $(HFST_MINIMIZE) $(HFST_FLAGS) \
		| $(HFST_COMPOSE) $(HFST_FLAGS) -F \
			-1 filters/make-optional-variant-tags.hfst \
		| $(HFST_MINIMIZE) $(HFST_FLAGS) \
		| $(HFST_COMPOSE) $(HFST_FLAGS) -F \
			-1 filters/make-optional-transitivity-tags.hfst \
		| $(HFST_MINIMIZE) $(HFST_FLAGS) \
		| $(HFST_COMPOSE) $(HFST_FLAGS) -F \
			-1 filters/make-optional-semantic-tags.hfst \
		| $(HFST_MINIMIZE) $(HFST_FLAGS) \
		-o $@



analyser-apertium-norm.att: generator-raw-gt-desc.hfst \
					filters/remove-derivation-position-tags.hfst \
					filters/remove-dialect-tags.hfst \
                                        filters/make-optional-semantic-tags.hfst \
					filters/remove-homonymy-tags.hfst \
					filters/remove-variant-tags.hfst \
					filters/remove-norm-comp-tags.hfst \
					filters/remove-number-string-tags.hfst \
					filters/remove-usage-tags.hfst \
					filters/remove-g-tags.hfst \
					filters/remove-semantic-tags-except-prop.hfst \
					filters/remove-deriv-strings-MT-sma.hfst \
					filters/remove-sub-forms.hfst \
					filters/remove-hyphenation-marks.hfst        \
					filters/remove-infl_deriv-borders.hfst       \
					filters/remove-word-boundary.hfst \
					$(srcdir)/tagsets/apertium.relabel
	$(AM_V_GEN)$(HFST_COMPOSE) $(HFST_FLAGS) -F -1 $< \
			-2 filters/remove-hyphenation-marks.hfst \
		| $(HFST_MINIMIZE) $(HFST_FLAGS) \
		| $(HFST_COMPOSE) $(HFST_FLAGS) -F \
			-2 filters/remove-infl_deriv-borders.hfst \
		| $(HFST_MINIMIZE) $(HFST_FLAGS) \
		| $(HFST_COMPOSE) $(HFST_FLAGS) -F \
			-2 filters/remove-word-boundary.hfst \
		| $(HFST_MINIMIZE) $(HFST_FLAGS) \
		| $(HFST_COMPOSE) $(HFST_FLAGS) -F \
			-1 filters/make-optional-semantic-tags.hfst \
		| $(HFST_MINIMIZE) $(HFST_FLAGS) \
		| $(HFST_COMPOSE) $(HFST_FLAGS) -F \
			-1 filters/remove-sub-forms.hfst \
		| $(HFST_MINIMIZE) $(HFST_FLAGS) \
		| $(HFST_COMPOSE) $(HFST_FLAGS) -F \
			-1 filters/remove-semantic-tags-except-prop.hfst \
		| $(HFST_MINIMIZE) $(HFST_FLAGS) \
		| $(HFST_COMPOSE) $(HFST_FLAGS) -F \
			-1 filters/remove-g-tags.hfst \
		| $(HFST_MINIMIZE) $(HFST_FLAGS) \
		| $(HFST_COMPOSE) $(HFST_FLAGS) -F \
			-1 filters/remove-usage-tags.hfst \
		| $(HFST_MINIMIZE) $(HFST_FLAGS) \
		| $(HFST_COMPOSE) $(HFST_FLAGS) -F \
			-1 filters/remove-number-string-tags.hfst \
		| $(HFST_MINIMIZE) $(HFST_FLAGS) \
		| $(HFST_COMPOSE) $(HFST_FLAGS) -F \
			-1 filters/remove-norm-comp-tags.hfst \
		| $(HFST_MINIMIZE) $(HFST_FLAGS) \
		| $(HFST_COMPOSE) $(HFST_FLAGS) -F \
			-1 filters/remove-homonymy-tags.hfst \
		| $(HFST_MINIMIZE) $(HFST_FLAGS) \
		| $(HFST_COMPOSE) $(HFST_FLAGS) -F \
			-1 filters/remove-variant-tags.hfst \
		| $(HFST_MINIMIZE) $(HFST_FLAGS) \
		| $(HFST_COMPOSE) $(HFST_FLAGS) -F \
			-1 filters/remove-dialect-tags.hfst \
		| $(HFST_MINIMIZE) $(HFST_FLAGS) \
		| $(HFST_COMPOSE) $(HFST_FLAGS) -F \
			-1 filters/remove-derivation-position-tags.hfst \
		| $(HFST_MINIMIZE) $(HFST_FLAGS) \
		| $(HFST_FST2FST) $(HFSTFLAGS) -t \
		| $(HFST_SUBSTITUTE) $(HFSTFLAGS) -F $(srcdir)/tagsets/apertium.relabel \
		| $(HFST_INVERT) \
		| $(HFST_FST2FST) $(HFSTFLAGS) -w \
		| hfst-fst2txt \
		-o $@


# We need to add processing of language-specific tags in the generator:
generator-gt-%.xfst: generator-gt-%.tmp.xfst \
				     filters/make-optional-lang_hom-tags.xfst
	$(AM_V_GEN)$(PRINTF) "read regex                              \
				@\"filters/make-optional-lang_hom-tags.xfst\"     \
			.o. @\"$<\".i                                         \
			;\n\
		 invert net\n\
		 save stack $@\n\
		 quit\n" | $(XFST)

#### END: Add local processing instructions ABOVE this line ######

#### HFST transducer fallback target:
#### - inversion is needed FOR THE ANALYSER because the hfst model is upside
#### down compared to Xerox AT APPLICATION TIME. The other command makes the
#### final transducer ready for use.
analyser%.hfst: analyser%.tmp.hfst
	$(AM_V_GEN)$(HFST_INVERT) $< \
		| $(HFST_FST2FST) $(HFST_FLAGS) -f olw -o $@

generator%.hfst: generator%.tmp.hfst
	$(AM_V_GEN)$(HFST_FST2FST) $(HFST_FLAGS) -f olw -i $< -o $@

#### Xerox transducer fallback target:
%.xfst: %.tmp.xfst
	$(AM_V_GEN)cp -f $< $@

include $(top_srcdir)/am-shared/topdir-include.am
