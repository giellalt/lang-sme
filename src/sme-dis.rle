# ==================================================================== #
# ==================================================================== #
#        N O R T H E R N   S Á M I   D I S A M B I G U A T O R         #
# ==================================================================== #
# ==================================================================== #

#    Sámi language technology project 2003-2006, University of Tromsø  #


            # =========================================== #
            #               Table of contents             #
            # =========================================== #
                 
            # Delimiters
            # Tags and sets
            # Disambiguation rules
              # One-cohort disambiguation - cycle 0
              # Local disambiguation - cycles 1 and 2
                # Cycle 1a: Special cases 
                  # Personal pronouns
                  # Px
                  # Certain verbs
                # Cycle 1b: Cleaning up after the special cases
                  # Px
                  # Certain verbs
                # Cycle 2: Other local disambiguation
                  # Noun or nout?
                  # Certain singleton words
                  # Disambiguating clitics
                  # Disambiguating adpositions
                  # Disambiguating subjuncitons
                  # Disambiguating adverbs
                  # Disambiguating pronouns
                  # Disambiguating adjectives
                  # Disambiguating nouns
                  # Disambiguating verbs
                  # Other words
                # Global disambiguation
             # Notes for future thought are put after the END symbol


# ========== #
# Delimiters #
# ========== #


DELIMITERS = "<.>" "<!>" "<?>" ;


# ============= #
# Tags and sets #
# ============= #


SETS # (Remove all lines that start with SETS if you want to use mdis.)

# I define end of clause and beginning of clause in a way so that the file
# may be read both by the CG-2 and the vislcg formalisms.

LIST BOS = (>>>) (<s>); LIST EOS = (<<<) (</s>); # vislcg and CG-2 together.
#LIST BOS = (>>>); LIST EOS = (<<<); # end and beg. of sentence. for vislcg.


# Tags declared as single-membered LISTs
# ======================================

# Parts of speech

LIST N = N ; LIST A = A ; LIST Adv = Adv ; LIST V = V ; LIST Pron = Pron ;
LIST CS = CS ; LIST CC = CC ; LIST Po = Po ; LIST Pr = Pr ;
LIST Pcle = Pcle ; LIST Num = Num ; LIST Prop = Prop ;
#LIST Adp = Adp ; 

# POS sub-categories

LIST Pers = Pers ; LIST Dem = Dem ; LIST Interr = Interr ;
LIST Indef = Indef ;
LIST Recipr = Recipr ; LIST Refl = Refl ;     # LIST Rel = Rel ; 
LIST Interj = Interj ;      


# Morphosyntactic properties

LIST Ess = Ess ;
LIST Sg = Sg ; LIST Pl = Pl ; LIST Du = Du ;
LIST Nom = Nom ; LIST Acc = Acc ;
LIST Ill = Ill ;
LIST Loc = Loc ; LIST Com = Com ;
LIST Gen = Gen ;

LIST Cmpnd = Cmpnd ;

#LIST PxSg1 = PxSg1 ; LIST PxSg2 = PxSg2 ; LIST PxSg3 = PxSg3 ; LIST
#PxDu1 = PxDu1 ; LIST PxDu2 = PxDu2 ; LIST PxDu3 = PxDu3 ; LIST PxPl1 =
#PxPl1 ; LIST PxPl2 = PxPl2 ; LIST PxPl3 = PxPl3 ;

LIST Comp = Comp ; LIST Superl = Superl ;

LIST Attr = Attr ; LIST Card = Card ;
LIST Qst = Qst ; LIST Foc = Foc ;

LIST Pass = Pass ;
LIST Prt = Prt; LIST Prs = Prs ; 

LIST Ind = Ind ; LIST Pot = Pot ; LIST Cond = Cond ;
LIST Imprt = Imprt ; LIST ImprtII = ImprtII ;

LIST Sg1 = Sg1 ;  LIST Sg2 = Sg2 ; LIST Sg3 = Sg3 ;
LIST Du1 = Du1 ;  # LIST Du2 = Du2 ; LIST Du3 = Du3 ;  # Not using the ones that
LIST Pl1 = Pl1 ;  LIST Pl3 = Pl3 ; #LIST Pl2 = Pl2 ;   # do not have hom. forms

LIST Inf = Inf ; LIST ConNeg = ConNeg ; LIST Neg = Neg ;
LIST PrfPrc = PrfPrc ; LIST VGen = VGen ;
LIST PrsPrc = PrsPrc ; 

LIST Act = Act ;

#LIST Ger = Ger ; LIST Sup = Sup ; 
#LIST VAbess = VAbess ; LIST Actio = Actio ; LIST Actor = Actor ;

# Derivation

LIST as1 = "as1" ;

# Other tags

LIST ABBR = ABBR ; LIST ACR = ACR ; LIST CLB = CLB ;
LIST PUNCT = PUNCT ;


# Single-word sets

LIST OKTA = "okta"; LIST go = "go" ; 
LIST COMMA = "<,>" ;
LIST MANGA = "mán1ga" "galle" ;





# Tag sets
# ========

SETS

LIST WORD = N A Adv V Pron CS CC Po Pr Interj Pcle Num ; # any word



# Derivational affixes
# --------------------

LIST V-DER = adda alla d g h asti hudda huhtti huvva j l ahtti st
              stuvva goahti ;
LIST N-DER = eaddji eamos1 eapmi heapmi s1 mus1 us vuohta ;
LIST A-DER = geahtes lágan las1 meahttun ;

#SET DER = V-DER | N-DER | A-DER ;


# Case sets
# ---------

LIST ADVLCASE = Ill Loc Com Ess ;


# Noun sets
# ---------

LIST N-SG-NOM = (N Sg Nom); LIST N-PL-NOM = (N Pl Nom);
LIST N-NOM = (N Nom) ; LIST N-GEN = (N Gen);

SET LEX-N = N - N-DER;

LIST PROP = (N Prop);
SET CNOUN = N - Prop;
SET CNOUN-PL-NOM = (N Pl Nom) - Prop ;

SET N-NON-GEN = N - (N Gen) ;


# Verb sets
# ---------

# Finiteness and mood
# - - - - - - - - - -

SET V-IND-FIN = Prs | Prt ; # Problem: "In boahtán" is an invisible indicative

SET V-MOOD = Ind | Pot | Imprt | ImprtII | Cond ;

SET VFIN = V-MOOD - ConNeg ;

SET VFIN-POS = V-MOOD - ConNeg - Neg ;

SET VFIN-NOT-IMP =  Ind | Pot | Cond ;


# Person
# - - - 

LIST V-SG1 = (V  Ind Prs Sg1) (V Ind Prt Sg1) (V Cond Prs Sg1) 
             (V Cond Prt Sg1) (V Pot Prs Sg1) (V  Neg Ind Sg1); 
LIST V-SG2 = (V  Ind Prs Sg2) (V Ind Prt Sg2) (V Cond Prs Sg2) 
             (V Cond Prt Sg2) (V Pot Prs Sg2) (V  Neg Ind Sg2); 
LIST V-SG3 = (V  Ind Prs Sg3) (V Ind Prt Sg3) (V Cond Prs Sg3) 
             (V Cond Prt Sg3) (V Pot Prs Sg3) (V  Neg Ind Sg3); 
LIST V-DU1 = (V  Ind Prs Du1) (V Ind Prt Du1) (V Cond Prs Du1) 
	     (V Cond Prt Du1) (V Pot Prs Du1) (V  Neg Ind Du1); 
LIST V-DU2 = (V  Ind Prs Du2) (V Ind Prt Du2) (V Cond Prs Du2) 
	     (V Cond Prt Du2) (V Pot Prs Du2) (V  Neg Ind Du2); 
LIST V-DU3 = (V  Ind Prs Du3) (V Ind Prt Du3) (V Cond Prs Du3) 
	     (V Cond Prt Du3) (V Pot Prs Du3) (V  Neg Ind Du3); 
LIST V-PL1 = (V  Ind Prs Pl1) (V Ind Prt Pl1) (V Cond Prs Pl1) 
             (V Cond Prt Pl1) (V Pot Prs Pl1) (V  Neg Ind Pl1); 
LIST V-PL2 = (V  Ind Prs Pl2) (V Ind Prt Pl2) (V Cond Prs Pl2) 
             (V Cond Prt Pl2) (V Pot Prs Pl2) (V  Neg Ind Pl2); 
LIST V-PL3 = (V  Ind Prs Pl3) (V Ind Prt Pl3) (V Cond Prs Pl3) 
             (V Cond Prt Pl3) (V Pot Prs Pl3) (V  Neg Ind Pl3); 


# Some subsets of the VFIN sets
# - - - - - - - - - - - - - - -

SET V-DU = V-DU1 | V-DU2 | V-DU3 ;
SET V-PL = V-PL1 | V-PL2 | V-PL3 ;

SET V-DU-PL = V-DU1 | V-DU2 | V-DU3 | V-PL1 | V-PL2 | V-PL3 ;

SET V-NOT-SG3 = V-SG1 | V-SG2 | V-DU1 | V-DU2 | V-DU3 |
                V-PL1 | V-PL2 | V-PL3 ;

SET V-1-2 = V-SG1 | V-SG2 | V-DU1 | V-DU2 | V-PL1 | V-PL2 ;

SET V-NOT-SG1 = VFIN-NOT-IMP - V-SG1 ;


# Copula sets (these ones need to be rewritten)
# - - - - - - - - - - - - - - - - - - - - - - -

SET LEAN = ("leat" V Ind Prs Sg1)|("leat" V PrfPrc);
SET LEAI = ("leat" V Ind Prt Sg3)|("leat" V Imprt Prs Sg3);
SET LEAT = ("leat" V Ind Prs Pl1)|("leat" V Ind Prs Pl3)|
           ("leat" V Ind Prs Sg2)|("leat" V Inf)|("leat" V Ind Prs ConNeg);

SET LEAT-COP = ("leat" V );
SET LEAT-DU-PL = ("leat" V Du1)|("leat" V Du2)|("leat" V Du3)|
                 ("leat" V Pl1)|("leat" V Pl2)|("leat" V Pl3);
SET LEAT-DU3-PL3 = ("leat" V Du3) | ("leat" V Pl3);
LIST LEAT-FIN-NON-IMP = ("leat" V Ind) ("leat" V Imp) ("leat" V Cond)
                        ("leat" V Pot); # Check!
LIST LEAN-PRC = ("leat" V PrfPrc);
LIST LEAN-SG1 = ("leat" V Ind Prs Sg1);

LIST COPULAS = "leat" "s1addat" ;

SET VERB = V - (V N);   # V is all readings with a V tag in them, VERB should
                        # be the ones withoud an N tag following the V

#SET V-IND-FIN-NON-COP =  V-IND-FIN - LEAT-COP  ;

SET V-NON-COP = V - LEAT-COP ;        # SET V-NON-COP = VERB - LEAT-COP ;
SET LEX-V = VERB - V-DER;             # VERB but not V-DER

SET AUX = LEAT-COP | Neg ;

SET V-NON-AUX = V - AUX ;

SET VFIN-NON-AUX = VFIN - AUX ;

LIST MOD = "áigot" "fertet" "galgat" "sáhttit" "viggat" ;
# This is a tentative set of verbs taking infinitive complements.

SET V-DER-PASS = V + V-DER + Pass;    # + is intersection, this should work
#SET V-PASS = V + Pass - V-DER;       # hmm, what was the idea here?
SET V-PASS = (V Pass);                # better?


# Pronoun sets
# ------------
SETS

SET MUN = (Pron Pers Sg1 Nom);
SET DON = (Pron Pers Sg2 Nom);
SET SON = (Pron Pers Sg3 Nom);
SET MOAI = (Pron Pers Du1 Nom);
SET DOAI = (Pron Pers Du2 Nom);
SET SOAI = (Pron Pers Du3 Nom);
SET MII-PERS = (Pron Pers Pl1 Nom);
SET DII = (Pron Pers Pl2 Nom);
SET SII = (Pron Pers Pl3 Nom);

SET PPRON-DU-PL = MOAI | DOAI | SOAI | MII-PERS | DII | SII ;

SET PPRON-NOT-SII = MUN | DON | SON | MOAI | DOAI | SOAI | MII-PERS | DII ;

#SET PRON-PL-LOC = (Pron Pers Pl1 Loc)|(Pron Pers Pl2 Loc)|(Pron Pers Pl3 Loc);

#SET MII-INTERR = ("mii" Pron Interr Sg Nom);




SET DEM-SG = (Pron Dem Sg Nom);
SET DEM-PL = (Pron Dem Pl Nom);



# Adjective sets
# --------------

SET A-ATTR = ( A Attr) ;

SET LEX-A = A - A-DER ;



# Sets for adverbials
# -------------------

SET LEX-ADV = Adv - A ;

LIST IKTE = "ikte" "dolin" "dovle" ;


# Clitic sets
# -----------
LIST Clt = Qst Foc ; 


# Sets for closed classes
# -----------------------

#SET PPOS = Po | Pr ;

LIST POST-A = "rájes" ;   
LIST POST-B = "rádjái" ;

#LIST WACKERNAGEL = "go" "ge" ;

LIST GASKAL = "gaskal" "gaskkas" ; # p-positions that like coordination


# Sets of specific words
# ----------------------

# Sets for verbs choosing oblique objects
# - - - - - - - - - - - - - - - - - - - - 

LIST LOC-VERB = "ballat" "beros1tit" "bihtit" "ceavzit" "c1uoc1c1ut"
                "dolkat" "fuollat" "geargat" "heaitit" "nohkkot" "váruhit"
                "ilbmat" ;

LIST COM-VERB = "árvalit" "árvvohus1s1at" "riidalit" "bargat"
                "bártas1uvvat" "háladig" "humadit" "náitalit" "ságastaddat"
                "ságastallat" "hilbos1it" "meannudit" ;

LIST ILL-VERB = "áibbas1it" "dorvvastit" "duhtat" "jáhkkit" "liikot"
                "luohttit" "oskut" "suhttat" "álgit" "gullat" "guoskat"
                "heivet" "irggástallat" "riepmat" "ráhkkanit" "soahpat" ;

LIST INF-VERB = "astat" "ádjánit" "áigut" "álgit" "bávc1c1agit"
"beassat" "berret" "bivvat" "bistit" "boahtit" "c1ohkkát" "c1ohkkedit"
"c1ohkkánit" "c1uoc1c1ahit" "c1uoc1c1astit" "c1urggodit" "dáhttut"
"dáidit" "doapmat" "duostat" "fertet" "galgat" "háhppehit" "háliidit"
"heivet" "lávet" "leat" "mannat" "máhttit" "oaz1z1ut" "ollet"
"riepmat" "sáhttit" "sihtat" "soaitit" "s1addat" "stad1d1at" "veadjit"
"viggat" "vis1s1at" "vuolgit" "vuollánit" ;

LIST ACC-INF-VERB = "bivdit" "c1uorvut" "diktit" "gohc1c1ut" "sihtat"
                    "suovvat" ;

## Ii suova nieiddas náitalit.
#  These are verbs taking accusative objects and infinitives.



# Sets for adverbs that have lookalikes
# - - - - - - - - - - - - - - - - - - -
# Here comes some adverbs that have identical twins in other POS. If these
# are found in Adv contexts, we treat them as adverbs.

LIST ADV-NOT-VERB = "dus1s1e"  ;

LIST ADV-NOT-NOUN = "easka" ;

LIST ADV-NOT-NAMES = "Ain" "Anne" "De" "Diego" "Dieppe" "Enge" "Galle" "Haga"
                      "Joba" "Johan" "Liikka" "Mai" "Mannes" "Mo" "Mot" "Naba"
                      "Nan" "Oktan" "Sierra" "Sokka" "Villa" ;

SET ADV-NOT-OTHER-POS = ADV-NOT-VERB | ADV-NOT-NOUN | ADV-NOT-NAMES ;



# Sets for nouns with common syntactic behaviour
# - - - - - - - - - - - - - - - - - - - - - - - 

LIST MANNU = "od1d1a/jage/mánnu" "od1d1a/jagi/mánnu" 
             "guovva/mánnu" 
             "njukc1a/mánnu" "njuvc1c1a/mánnu" "márs/mánnu" 
             "cuon1o/mánnu" "cuon1os/mánnu" "gáranas/mánnu" 
             "miesse/mánnu" "mái/mánnu" 
             "geasse/mánnu" 
             "suoidne/mánnu" 
             "borge/mánnu" "s1njilc1a/mánnu" "s1njilz1a/mánnu" 
             "c1akc1a/mánnu" 
             "golggot/mánnu" 
             "skábma/mánnu" "november/mánnu" "ritne/mánnu" 
             "juovla/mánnu" ;

LIST GUOVLU = "guovlu" "ássan/guovlu" "gávpot" "sádji" "viessu" "goahti" ;

LIST GEASSET = "dálvet" "dálvit" "gid1d1at" "geasset" "geassit" "c1akc1at" ;

LIST INITIAL =  "a" "b" "c" "d" "e" "f" "g" "h" "i" "j" "k" "l" "m"
                "n" "o" "p" "q" "r" "s" "t" "u" "v" "w" "x" "y" "z"
                "á" "æ" "ø" "å" "ö" "ä" ;

LIST PROSEANTA = "proseanta" "%" ;

LIST VAHKKU =  "beaivi" "c1uohte/jahki" "jahki" "vahku" "mánnu" "idja" jahki ;
 # The quoteless jahki here is since the preprocessor is not fine-tuned
 # yet, it still gives '"1870-" # jahki N Sg Com'.


SET AIGI = MANNU | VAHKKU ;


# Miscellanious sets
# ------------------

SET NUMERALS = Num - OKTA ;
#SET COMP = (Pron Interr);


# Syntactic sets
# --------------

SETS

# NP sets
# -------

LIST NP-HEAD = Pron N ;
SET NP-HEAD-SG = (Pron Sg) | (N Sg);
SET NP-HEAD-PL = (Pron Pl) | (N Pl);
SET NP-HEAD-SG-NOM = (Pron Sg Nom) | (N Sg Nom);
SET NP-HEAD-PL-NOM = (Pron Pl Nom) | (N Pl Nom);

SET PRE-NP-HEAD = (Prop Attr) | A | (Pron Pers Gen) | (N Gen) |
                  (Pron Dem)  | (Pron Refl Gen) | (Pron Indef) | CC ;

# There must be a sensible naming convention for these sets...
SET NPNH = WORD - PRE-NP-HEAD ;                 # NPNH = "NON-PRE-NP-HEAD". 

SET NPNHA = WORD - PRE-NP-HEAD - Adv ;     # NPNHA = "NON-PRE-NP-HEAD-OR-ADV"
SET NPNHAI = WORD - PRE-NP-HEAD - Adv - Indef ; # NPNHAI " "...-OR-INDEF"
SET NPNHAII = WORD - PRE-NP-HEAD - Adv - Indef - Ill ; # Illative indir.obj.
SET NPNHAIIP = WORD - PRE-NP-HEAD - Adv - Indef - Ill - Pcle ;


# Other nominal sets
# ------------------

SET NON-ADV = WORD - Adv;
SET NON-ADV-PCLE = WORD - Adv - Pcle ;
SET NON-ADV-INDEF = WORD - Adv - Indef ;
SET NON-ADV-PCLE-INDEF = WORD - Adv - Pcle - Indef ;
SET NON-ADV-NEG = WORD - Adv - Neg ;

SET NON-A   = WORD - A ;
SET NON-Attr = WORD - Attr ;
SET NON-A-PCLE = WORD - A - Pcle ;
SET NON-DEM = WORD - Dem ;

SET NON-N =  WORD - N ;
SET NON-NP = VFIN | Adv | Pcle | Interj | CS | CC ;


# Adjectival sets and their complements
# -------------------------------------

SET A-CASE = A - Attr - Adv ;

LIST A-CC = A CC ;

SET NON-ADJ = WORD - A ;

SET NON-ADJ-CC = WORD - A-CC ;


# Adverbial sets and their complements
# ------------------------------------

SET ADVERBIAL = Adv | Ill | Loc | Com | Ess ;

# SET NON-ADV = WORD - Adv ;


# Border sets and their complements
# ---------------------------------

SET NP-BORDER = BOS | EOS | CLB | Adv | V | Pers | CS | Recipr | Refl | Dem |
                Interr | Po | Pr | Pcle ;
   # too risky to use CLB, need more sophisticated way.
   # this allows for NP-internal commas to break NP.

SET NON-CC = WORD - CC ;


# Semantically defined sets
# -------------------------

LIST CONTRA = "muhto" ; # In lean muitalan, muhto dál muitalan.




# ==================== #
# ==================== #
# Disambiguation rules #
# ==================== #
# ==================== #

# =================================== #
# One-cohort disambiguation - cycle 0 #
# =================================== #
             CONSTRAINTS              #
# =================================== #

# Proper nouns
# ------------

REMOVE (Prop Pl) IF (0 (Prop Sg));                   ## Marit lea dál.
  # Marit N Sg, not Mari+t Nom Pl

REMOVE (Prop Pl) IF (-1 BOS)(0 CNOUN-PL-NOM);        ## Sámit leat álgoálbmot.

# Removing propernouns that are lookalikes
# ----------------------------------------

REMOVE ("Lea") IF (-1 BOS)(NOT 1 V-SG3); ## Lea dus1s1e okta Ipmil. Lea idja.

REMOVE ("Man") IF (-1 BOS)(0 (V Imprt));
  # Cannot think of sensible conditions

# Lexicalised adverbs
# -------------------
REMOVE (A Adv) IF (0 LEX-ADV) ;#REMOVE A-ADV IF ( 0 Adv ) ;


# Lexicalised derivations
# -----------------------

REMOVE N-DER IF (0 LEX-N); # SELECT instead of REMOVE if one wants to
REMOVE A-DER IF (0 LEX-A); # investigate word structure
REMOVE V-DER IF (0 LEX-V); # THIS IS PROBABLY TOO STRONG, MSC may differ

REMOVE V-DER-PASS IF (0 V-PASS);
# It might be that this one is no longer needed.


# Lexicalised p-positions
# -----------------------

REMOVE N IF (0 Pr)(*1 (N Gen) OR (Pron Pers Gen) BARRIER NPNH);
REMOVE N IF (0 Po)(-1 (N Gen) OR (Pron Pers Gen)); # dan várás, dan áigi



# ===================================== #
# Local disambiguation - cycles 1 and 2 #
# ===================================== #

# --------------------------------------------------------- #
# Cycle 1a: cases that will be needed in careful mode later #
# --------------------------------------------------------- #
                             CONSTRAINTS                    #
# --------------------------------------------------------- #
# The idea with cycle 1a is to disambiguate cases that are judged as easier and
# more secure than later cases, and that at the same may be used as context
# for other rules in later cycles.





# Personal pronouns
# =================

SELECT Pers IF (*-1 V-SG3)(0 (Pron Pers Sg3 Nom)); ## leago son?
SELECT Pers IF (*1 V-SG3)(0 (Pron Pers Sg3 Nom));  ## de son lea.
  # (Not Pcle)

SELECT Pers IF (*-1 V-SG2)(0 (Pron Pers Sg2 Nom)); ## leatgo don  
SELECT Pers IF (*1 V-SG2)(0 (Pron Pers Sg2 Nom));  ## de don leat 
  # (Not dem)


# Px constraints
# ==============

# First select some clear Px cases
# Let these come directly after local disamb


SELECT (PxSg1) IF (-1 V-SG1)(NOT -1 ("leat"))(-2 MUN);
SELECT (PxSg2) IF (-1 V-SG2)(NOT -1 ("leat"))(-2 DON);
SELECT (PxSg3) IF (-1 V-SG3)(NOT -1 ("leat"))(-2 SON);

# Px for names for relatives

# Px for diminutives


# Certain verb forms
# ==================


# Pret Sg2
# --------

SELECT (V Ind Prt Sg2) IF (*-1 DON BARRIER V-SG2);
                                 ## Don muitalit mu birra.

# Imperatives
# -----------
REMOVE Imprt IF (0 (Clt Qst));     ## Heivego gávtti coggat?
REMOVE Imprt IF (1 ("go" Pcle));   ## Heive go gávtti coggat?




# ---------------------------------------------------------------- #
# Cycle 1b: removing the readings that were left from the 1a rules #
# ---------------------------------------------------------------- #
                             CONSTRAINTS                           #
# ---------------------------------------------------------------- #

# Removing all remaining Px
REMOVE (PxSg1) ; # IF (0 Ess); # yes, kill'em all
REMOVE (PxSg2) ; # IF (0 Pl);
REMOVE (PxSg3) ; # IF (0 Loc);
# Note: Perhaps rather allow Px only for some key nouns (mother, father, etc).

# Removing remaining Prt Sg2 (philosophy: these are not pro-drop)
REMOVE (V Ind Prt Sg2) IF (NOT -1 BOS) (NOT 0 (Clt));
# Proseassas láhc1c1ojuvvojit dilálas1vuod1at nu, ahte 
# fertejitgo dahkat dan?




# -------------------------------------------- #
# Cycle 2: Other cases of local disambiguation #
# -------------------------------------------- #


# This is the main part of the local disambiguation.
# Here we go through the grammar in a systematic way.
# Cases that should be handled before or after the main disambiguation, will be
# taken care of in cycoes before or after this one.




# Noun or not?
# ============

# Based on left context
# ---------------------

SELECT N IF (-1C (A Attr));                  ## Dat lea c1uovvovas1 sajis.

SELECT N IF (-2C N) (-1 CC) (NOT 1 N OR A);  ## Mánát ja nuorat leat dál.

SELECT N IF (1 COMMA)(2 (Pron Interr));      ## Doaimmat, maiguin mun barggan.
                                              # too specific!

SELECT N IF (-2 BOS)(-1C Gen)(1 EOS);        ## Son lea Ruot1a c1álli.
                                              # (titles)

REMOVE A IF (-1 Dem)(1 (Pron Interr));    ## Son lea dan sápmelas1 gean dovddan.


REMOVE (A Sg Nom) IF (NOT *-1 VFIN)(0 (N Sg Nom))(*1 V-SG3 BARRIER NON-ADV-PCLE);
REMOVE (A Pl Nom) IF (NOT *-1 VFIN)(0 (N Pl Nom))(*1 V-PL3 BARRIER NON-ADV-PCLE);
                     ## Dálá guovlluin sápmelac1c1at eai leat ássan nu guhká.

# Based on right context
# ----------------------

REMOVE A IF (0 N)(1 Po);                ## C1ohkkán dárolac1c1aid gaskkas.

REMOVE A IF (0 N)(1C VFIN) ;            ## Dál go sápmelac1c1ain leat bohccot.

REMOVE A IF (NOT *-1 ("leat") BARRIER V-NON-AUX)(0 N)(1 CLB) ;

REMOVE V IF (-1 Dem)(1 V-IND-FIN);      ## Dán báhkis s1addá c1áppa gohppu.

REMOVE V IF (-1 BOS)(0 N)(1 ("go"))(2 VFIN); ## Ádjás go lea od1d1a fanas?

REMOVE VFIN IF (-1 BOS)(0 NP-HEAD-SG-NOM)(1C V-SG3); ## Lásse lea mus rean1gan.
  # Here I am careful, and require the V-SG3 to be a secure reading.

REMOVE VFIN IF (-1 BOS)(0 Prop)(1 V-SG3);   ## Máhtte ferte leat vuolgime.
  # Here I am less careful, and accept also ambiguous V-SG3, since I take it
  # that when the left context is a name, it is a more secure subject-candidate.
  # Alternatively, I might drop the 1C in the previous rule, or include the
  # pronouns.

REMOVE Adv IF (1C Po); 



REMOVE A-CASE IF (*-1 BOS BARRIER NON-DEM)(0 N)(NOT 0 ("buorre"))(1 N);
                                       ## Sápmelac1c1aid historjá lea boaris.
  # No adjective, except buorre, agrees with a head noun in case. The correct
  # reading for a case-inflected prenominal word must thus be N.
  # (Problem: we have not considered a string predicative adj + other NP)

REMOVE (A Gen) IF (0 N)(*1 N BARRIER NON-A);



# Preverbal subject
SELECT (Pl Nom) IF (1 (V Pl3));
                 ## Olu nuorat bohte naitalanahkái.
  # This is a brave rule, probably too strong. It stands this early in order to
  # preceed other rules.


# Based on circumscribed context

SELECT A IF (-1 CC)(0 (N as1))(1 Cmpnd);
           ## Lea sahka oppalac1c1at eamiálbmot- ja unnitloguás1s1iid dutkamiin.




# ======================= #
# Certain singleton words #
# ======================= #

SELECT Gen IF (0 ("nubbi"))(1 N);
                      ## Son oac1c1ui c1áda ás1s1i fas nuppi Stuorradikkis.




# ========================== #
# Disambiguating clitics     #
# ========================== #

REMOVE Qst IF (0 Adv)(NOT *1 EOS LINK -1 ("?")); ## Nugo died1át, de lean dál.


# ========================== #
# Disambiguating adpositions #
# ========================== #
        CONSTRAINTS          #
# ========================== #

# Po or Pr?
# =========

REMOVE Po IF (NOT -1 N OR A OR Num OR Pron);
REMOVE Po IF (-1 N)(NOT -1 Gen);   ## Leansmánni lea kommis1uvnnas fárus.
REMOVE Pr IF (NOT *1 N OR A OR Num OR Pron BARRIER NPNH);
# hmm, must look into this, which block comes first, what rules should go.


SELECT Pr IF (NOT -1 Gen)(*1 (N Gen) BARRIER NPNH);
                                ## Olbmuin bisttii luossaguolli miehtá dálvvi. 



# Pr or not?
# ==========

REMOVE Pr IF (NOT *1 (N Gen) BARRIER NPNH);

REMOVE Pr IF (NOT 1 (Pron Gen));



CONSTRAINTS

# The case of GASKAL

SELECT Pr IF (0 GASKAL)(1 (Pron Gen))(2 CC)(3 (Pron Gen));
SELECT Po IF (-3 (Pron Gen))(-2 CC)(-1 (Pron Gen))(0 GASKAL) ;

SELECT Pr IF (0 GASKAL)(1 Num)(2 CC)(3 Num);
SELECT Po IF (-3 Num)(-2 CC)(-1 Num)(0 GASKAL);

SELECT Pr IF (0 GASKAL)(*1 (N Gen) BARRIER NPNH 
          LINK 1 CC LINK *1 (N Gen) BARRIER NPNH);
SELECT Pr IF (-1 (N Gen) 
          LINK *1 CC BARRIER NPNH LINK -1 (N Gen))(0 GASKAL);

# Po or not
# =========

SELECT Po IF (*-1 V)(-1 Gen)(0 ("alde"));   ## Láibi lea beavddi alde.
                                            #  Not Du1/Pl3 of the verb aldat

SELECT Po IF (-1 Gen)(NOT 1C Po);           ## ... dan njealji beali ektui.
                                            

SELECT Po IF (-1 Num)(0 ("rádjai")); # make general rule!

# using it for all Po
REMOVE N IF (-1 Gen)(0 Po)(NOT 1C Po);
REMOVE V IF (-1 Gen)(0 Po)(NOT 1C Po);
REMOVE Adv IF (-1 Gen)(0 Po)(NOT 1C Po);




# =========================== #
# Disambiguating subjunctions #
# =========================== #
        CONSTRAINTS           #
# =========================== #

# Subjunctions are disambiguated in two subcycles. This is the first.

SELECT CS IF (-1 CLB); # this one too general, there must be separate
                       # rules for different groups of CS.

# de
# --

SELECT CS IF (*-1 ("jos") OR ("go") LINK -1 BOS OR CS)(-1 COMMA)(0 ("de"));
                     ## Jos died1ás1in, de dajas1in.
                     ## Go olbmot jaskkodit, de sáhpánat álget jursit.
                     ## Son diehtá, ahte jos galgá leat mielde, de ferte máksit.
 
# go
# --

SELECT Pcle IF (-2 BOS)(NOT -1 CC OR Adv)(0 go);  ## Boad1át go?
                                                  ## Ja go beasai fas bargui.
SELECT Pcle IF (-3 BOS)(-2 CS)(0 go);             ## Muhto boad1át go?

SELECT Pcle IF (-1 (V Neg));                      ## Son jerre it go boad1e?

SELECT Pcle IF (-2 CLB)(-1 V);                    ## Jus juo, lea go nu ahte..

SELECT Pcle IF (-3 BOS)(-2 CC)(-1 V);             ## Dahje leat go aiddonassii...


SELECT Pcle IF (-1 VFIN)(0 ("go"))(*2 CLB BARRIER VFIN);
SELECT Pcle IF (-2 N OR Pron)(-1 VFIN)(0 ("go"));
SELECT Pcle IF (-3 N OR Pron)(-2 ("ahte"))(-1 VFIN)(0 ("go"));
                  ## Politihkas lei 1866 rájes sáhka galggai go stivrregoahtit 
                  ## gii oaz1z1u eatnama láigohit stáhtas.
# Note! This is a tentative rule! (too specific (-2 N) and to general
# (will probably remove some correct CS).

# vai
# ---
# This one may be CS (vai = 'in order to') or CC (vai = 'or').
SELECT CC IF (0 ("vai"))(1 Neg)(2 CLB);
                   ## Leago sámeálbmogis vuoigatvuod1at vai eai, dahje...

# vaikko

SELECT Pron IF (0 ("vaikko"))
               (1 ("mii") OR ("gii") OR ("guhte") OR ("goabbá") OR
                  ("guhtemus1") OR ("makkár"));
  # "vaikko mii", etc. is a pronoun. Other vaikko cases are CS.
  # This should probably rather be taken care of in the preprocessor.

#SELECT CS IF (-1 BOS OR CS)(0 ("vaikko"))(*1 ("de"));



# Subjunctions are disambiguated in two subcycles. This is the second.
  CONSTRAINTS # New cycle to get rid of unwanted CS readings
# =========== #

SELECT CS IF (0 go); # All other go's are CS.
#REMOVE CS IF (0 )(NOT -1 V);                ## Nu guhkás go mun died1án,
                                             ## buot leat ortnegis.

# CS selection for specific CS candidates
SELECT CS IF (0 ("vaikko"));

# CS removal for specific CS candidates
REMOVE CS IF (0 ("de"));



# Numerals
# ========

REMOVE ("guovttes") IF (1 (Sg Gen));         ## Viesus leat guokte olbmo.

# other words
# ===========

SELECT CS IF (0 go)(-1 COMMA) ;

SELECT Pron IF (0 ("don" Nom Sg))(*1 V-SG2);

REMOVE Prop IF (0 ("Lassi"))(1 ("dát" Pron Dem Sg Ill));
                                             ## Lassin dása mun lean dál.
  # all too specific!





# ====================== #
# Disambiguating adverbs #
# ====================== #
        CONSTRAINTS      #
# ====================== #


# General adverb rules
# --------------------

SELECT Adv IF (-2 VFIN)(-1 ("nu"))(1 ("ahte"));
SELECT Adv IF (-2 VFIN)(-1 ("nu"))(1 COMMA)(2 ("ahte"));
                                       ## Lohku lassánii nu johtilit ahte ...

SELECT Adv IF (*-1C VFIN-NON-AUX BARRIER NON-ADV)
              (0 A-ATTR)(NOT 1 N);                    # Adv if postverbally

REMOVE Adv IF (-1 (N Gen) OR (Pron Gen))(NOT -1 Adv)
              (0 Po);                                 # Po if after Gen

REMOVE Adv IF (-1 ("leat"))(0 (A Attr))(1 N);  ## Bussás leat alit c1almmit.

SELECT Adv IF (-2 V)(NOT -2 ("leat"))(-1 Adv)(1 EOS); # Too specific!!
                                                     ## Son c1állá hui c1ábbát.

SELECT Adv IF (-1 BOS OR CLB)(0C Adv OR Po);

SELECT Adv IF (0 (Pron Indef))(1 CS);              ## Dat lea nu ahte boad1án.
SELECT Adv IF (0 (Pron Indef))(1 COMMA)(2 CS);     ## Dat lea nu, ahte boad1án.

REMOVE Po IF (-1 NON-NP)(0 Adv)(1 NON-NP OR CLB);  ## Mun in leat mielde.

REMOVE (N Gen) IF (-1 VFIN)(0 Adv)(NOT 1 N or Po); ## Diet lea beare unnán.


# Adverbs, not interjections
# --------------------------

REMOVE Interj IF (NOT -1 Interj OR BOS)(0 Adv);      ## Dat dinii bures doppe.

SELECT Adv IF (*-1 VFIN) (0 GEASSET);            ## Son lei doppe geasset.
SELECT Adv IF (0 GEASSET)(*1 VFIN);              ## Dálvet son vulggii meahccái.


#SELECT Adv IF (-1 VFIN)(0 ADV-NOT-OTHER-POS);  
SELECT Adv IF (*-1 VFIN BARRIER NON-ADV)(0 ADV-NOT-OTHER-POS);
                                     ## Lea dus1s1e okta Ipmil.
                                     ## Spahká lea sullii dus1s1e suprbmabeali.
       # Cycle 1a?

SELECT Adv IF (-1 CS)(0 ADV-NOT-OTHER-POS)(1 Nom LINK 1 VFIN OR Interr);
                           ## Lahka mearridii, ahte dus1s1e sii gud1et máhte...
 # A bit half-hearted the previous LINK).

SELECT Adv IF (-1 BOS)(0 ADV-NOT-NAMES);             ## De fidnejin.
  # Evaluate this one. An additional condition
  # (NOT 1 VFIN) was removed, as it was too careful.

SELECT Adv IF (-2 BOS)(-1 ("leat" V Ind))(1 ("ahte"));
                     ## Lea duohta, ahte mán1ggas eai oz1z1on oastit eatnama.




# Adverbs, not comparative adjectives
# -----------------------------------

REMOVE Comp IF (-1 ("hui"))(0 Adv);
                  ## Dat lea hui c1ielgasit.

REMOVE Comp IF (-1 VFIN)(0 Adv)(1 Inf);
                  ## Rád1d1ehus áigu erenomázit giddet fuopmás1umi sámegillii.



# Nouns, not adverbs
# ------------------

Remove Adv IF (-1 Gen)(0 (N Loc)) ;      ## Son bod1ii njukc1amánu loahpas.
   

# Rules related to specific adverbs
# ---------------------------------

# álgu
SELECT N IF (-1 Gen OR (A Attr))(0 ("álgu"));  ## Pros1eavtta álgu ii lean álki.

# beare
SELECT Adv IF (0 ("beare"))(1 ("ollu"));  ## orohagas leat beare olu bohccot.

# beallái
  # XXX write rules for this as postposition as well!


# danin
SELECT Adv IF (0 ("danin"))(NOT *1 (N Ess) BARRIER NPNH);
                                        ## Danin badjánii jurdda lága ráhkadit.
# dákko
REMOVE (V Imprt Prs Sg2) IF (0 ("dákko"))(*1 VFIN);
REMOVE (V Imprt Prs Sg2) IF (*-1 VFIN)(0 ("dákko"));
                                        ## Dákko ii oac1c1o mannat ii oktage.
  # Alternatively, on could remove all imperatives. Here, I remove the
  # impertative reading of 'dággut' if there is some finite verb somewhere
  # else.

# de
REMOVE Prop IF (0 ("de"))(NOT 1 Prop);  ## De lea vissa ahte De Silva boahtá.

# died1usge
#SELECT Adv IF (NOT -1 BOS)(0 ("died1usge"));    ## Mun lean died1usge oaddán.
SELECT Adv IF (0 ("died1usge"));                 ## Mun lean died1usge oaddán.
  # Todo: Make a set of these verb-like adverbs, and make a rule for them.
  # Eventually more sets, if they have different syctactic properties...

# duo
SELECT Adv IF (NOT -1 Dem or (A Attr))(0 ("duo"));
                                           ## Áddjá go duo lea boahtime?

# dus1s1e
# There is a rule "Lea dus1s1e okta Ipmil" for the typical dus1s1e cases.


# eanet
SELECT Adv IF (-1 ("olu"))(0 ("eanet"));       ## Guovlu atnigoahtá olu eanet.
 # This is really a low-level rule. It may perhaps be extended to
 # SELECT Adv IF (-1 ("olu"));
 # but we would like to see some examples of a general pattern first.

SELECT Adv IF (0 ("eanet"))(1 ("go")) ;      ## Dat lea eanet go 10.

# easkka
REMOVE N IF (0 ("easkka"))(*1 AIGI OR A);
                            ## Muhto easkka N. V. Stockfleth áiggis lei nu.
                            ## Dat lei boahtán ruot1agielain easkka j. 1863.

# goas
SELECT Adv IF (0 ("goas"))(*1 ("<?>"));         ## Goas heajat leat?
  # This is not an optimal rule for getting rid of the former Portuguese colony.

# gusto
SELECT Adv IF (-1 VFIN)(0 ("gusto"));           ## Diet lea gusto ávkkálas1.

# ihttin
SELECT Adv IF (0 ("ihttin"));                   ## Mii vuolgit ihttin juo.
  # The competitor is '"ihtit" V N Actor Ess'. This reading will now never be
  # selected. Have a look at this when dealing with Actor nouns.

# ikte
SELECT Adv IF (0 ("ikte"))(*1 (V Prt));         ## Ikte lei hui buolas1.
SELECT Adv IF (*-1 (V Prt))(0 ("ikte"));        ## Ikte lei hui buolas1.

# maid
SELECT Adv IF (-1 VFIN)(0 ("maid"));            ## Mun háliidan maid mannat.
SELECT Adv IF (-1 N LINK *-1 BOS BARRIER NPNH)
              (0 ("maid"));                     ## Suomas maid lei dilli váttis.
SELECT Adv IF (-2 BOS)(-1 (Pron Pers) OR (Pron Dem))
              (0 ("maid"));                     ## Sidjide maid lei Ruija.

# manne
SELECT Adv IF (-1 BOS)(0 ("manne"))(1 VFIN);     ## Manne ii leat áviisa boahtán?
SELECT Adv IF (-1 BOS)(0 ("manne"))(1 N OR Pron)(2 VFIN); ## Manne don leat dál?
  # Need a rule for "Manne + NP + VFIN".

# mielas
REMOVE Adv IF (-1 Gen)(0 ("mielas"));   ## Mu mielas don sáhtát mielas boahtit.

# rádjai 
SELECT Po IF (-1 Num)(0 ("rádjai") OR ("rádjái"));
 # this rule should be extended to all postpositions likely to occur after
 # number expresseions. Todo: Make a set.

# sullii
SELECT Adv IF (0 ("sullii"))(1 Num);    ## Dat lea sullii 20 kg.
  # This rule must be generalised on both conditions: "sullii" must be extended
  # to a set of adverbs denoting quantification, and Num must be extended to
  # more measures (or parallel rules must be written).

SELECT Adv IF (-1 ("leat"))(0 ("sullii"));
                                        ## Dat lea sullii 20 kg.
  # The idea is that 'leat' doesn't subcategorise for illatives.

# visot
SELECT Adv IF (0 ("viso"))(NOT 1 (N Pl));
   ## Visot dan maid NRK sádde digitála fierpmis sáhttá maid gullat Nettradios.
 # This is not a particularly good rule for 'visot'.



# ======================= #
# Disambiguating pronouns #
# ======================= #
       CONSTRAINTS        # 
# ======================= #


# Personal pronouns
# =================

# Mon
# ---
  # = N Prop Ess Mo

# Don
# ---
  # Pron Dem Sg Acc / Gen

SELECT (Pron Pers Sg2 Nom) IF ( *1 V-SG2);     ## Don boad1át fargga.
SELECT (Pron Pers Sg2 Nom) IF (*-1 V-SG2);     ## Don boad1át fargga.

# Son
# ---
  # son Pcle

SELECT (Pron Pers Sg3 Nom) IF ( *1 V-SG3);     ## Son boahtá fargga.
SELECT (Pron Pers Sg3 Nom) IF (*-1 V-SG3);     ## Boahtágo son fargga?
  
# Moai
# ----
  # N Prop Ill Moa

SELECT (Pron Pers Du1 Nom) IF ( *1 V-DU1);     ## Moai c1ilge dan ás1s1i.
SELECT (Pron Pers Du1 Nom) IF (*-1 V-DU1);     ## C1ilgego moai dan?

# Mii
# ---

# Select Interr

SELECT Interr IF (0 ("mii" Sg Nom))(-1 COMMA)(1 Sg3);
SELECT Interr IF (0 ("mii" Sg Nom))(*1 Sg3 BARRIER V-PL1);


# Select Pers

# Left conditions
SELECT Pers IF (-3 BOS)(-2 V-PL1)(-1 go)(0 ("mii")); 
SELECT Pers IF (-2 BOS)(-1 (V Ind Prs Pl1 Clt))(0 ("mii"));


SELECT Pers IF (-1 (V Ind Prs Pl1 Clt))(0 ("mii"));
SELECT Pers IF (-1 (V Neg Pl1))(0 ("mii"));     ## Eat mii sáhte vuolgit.

# Right conditions

SELECT Pers IF (0 ("mii" Pl Nom))(*1 V-PL1 BARRIER NON-ADV) ;

SELECT Pers IF (0 ("mii"))(*1 V-PL1 BARRIER NON-ADV) ;

SELECT Pers IF (0 ("mii))(1C Interr);
SELECT Pers IF (0 ("mii))(1 COMMA)(2C Interr);



# Mis and sis
# ---
  # mun Pron Pers Pl1 Loc = mis Adv, corr. for son Pron Pers Pl3 Nom = sis Adv
  # This one is hard to resolve, as they have the same distribution.

# Other homonymies linked to personal pronouns, with non-obvious answers.
  # Munin = Pron Pers Sg1 Ess = Ess of N Prop Muni (!)
  # dudnon = Pron Per Du2 Ess = dudnu N Sg ... PxSg1 (covered by Px rule)
  # Sunin = Pron Pers Sg3 Ess = Ess of N Prop Sun  
  # son Pron Pers Sg3 Ill = suotnjat V Ind Prs Du1 = V Ind Prt Pl3



# Interrogative pronouns
# ======================

SELECT Sg IF (-1C (N Sg) OR (Pron Sg))
             (0 (Pron Interr));
SELECT Pl IF (-1C (N Pl) OR (Pron Pl))
             (0 (Pron Interr));
SELECT Sg IF (-2C (N Sg) OR (Pron Sg))(-1 COMMA)
             (0 (Pron Interr));
SELECT Pl IF (-2C (N Pl) OR (Pron Pl))(-1 COMMA)
             (0 (Pron Interr));
                                   ## Giella, maid dovdán.
                                   ## Gielat, maid dovdán.

#SELECT Sg IF (-1C (N Sg))(0 (Pron Interr));


# Reflexive pronouns
# ==================
  # iez1as is Gen or Acc
  # iez1a is Pl or Du

# reflexive iez1as
# ----------------

SELECT Gen IF (-1 Acc)(0 ("ies1" Gen) OR (Pron Pers Gen))(1 N);
                       ## , muhto it fuomás1 hirssa iez1at c1almmis?

# Emphatic ies1
# -------------
  # Sg ies1 is uniqie, there is homonymy Du/Pl for iez1a.

SELECT Du IF (*-1 V-DU)(0 ("ies1" Pron Refl Du Nom));
SELECT Du IF (*1  V-DU)(0 ("ies1" Pron Refl Du Nom));
SELECT Pl IF (*-1 V-PL)(0 ("ies1" Pron Refl Pl Nom));
SELECT Pl IF (*1  V-PL)(0 ("ies1" Pron Refl Pl Nom));
                       ## Dii lehpet iez1a dan oaidnán.
                       ## Iez1a dii lephet dan oaidnan.
                       ## Doai galgabeahtti iez1a mannat.

# Reciprocal pronouns
# ===================

SELECT Recipr IF (-1 Recipr); # ... guhtet
SELECT Recipr IF  (1 Recipr); # ... ...    guoimmiset

CONSTRAINTS

REMOVE Recipr ;


# Demonstrative pronouns
# ======================

# NP-internal number concord
# --------------------------

SELECT DEM-SG IF (-1 BOS)(0 Nom)(1 V-SG3); 
                            ## Dat lea duohta.

SELECT Pl IF (0 (Pron Dem))(*1 (N Pl) BARRIER NON-A);
                             ## Ja dát soad1it s1adde garrasit c1uohcat Supmii.

# NP-internal case concord
# ------------------------



REMOVE (Dem Pl Nom) IF (NOT *1 (N Pl Nom) OR V-PL3 BARRIER NPNH);
  # These are not good, we may have topicalised verbs...

# rules like these are situated the noun case disambiguation rules:
# REMOVE (Dem Acc) IF (*1 (N Ill) OR (N Loc) BARRIER NPNH);
# REMOVE (Dem Gen) IF (*1 (N Acc) BARRIER NPNH LINK NOT 0 (N Gen));
# REMOVE (Dem Acc) IF (*1 (N Gen) BARRIER NPNH LINK NOT 0 (N Acc));




# Disambiguating against other POS
# --------------------------------

# Getting rid of problematic names.
# Problematic here are the names Dan, Dien, and the essive of the noun duo.

REMOVE (Prop) IF (-1 BOS)(0 Dem)(1 N)(NOT 1 Prop); ## Dan nieidda mun dovddan.

REMOVE (Dem Sg Nom) IF (NOT *-1 V-SG3)
                       (NOT *1 (N Sg Nom) OR V-SG3);
                                      ## Ii dat beassan.
  # The verb is there to capture intransitive Dem.


# dasa
  # The problem here is the VGen form of 'dassat', which is identical to the
  # Illative form of 'dat' (both 'dasa').
REMOVE VGen IF (0 ("dat" Pron Dem Sg Ill));


# Earlier specific rules, to be reactivated if the previous one is too strong.
# ----------------------------------------------------------------------------
#SELECT Dem IF (0 ("dat" Pron Dem Sg Ill))(1 VFIN); ## Dasa lea guhkes historjá.
#SELECT Dem IF (0 ("dat" Pron Dem Sg Ill))(1 ("lassi" N Ess)); ## Dasa lassin.
#SELECT Ill IF (-1 ("sivva"))(0 ("dat")); ## Sivva dasa lea, ahte ...
#SELECT Ill IF (-1 PrfPrc)(0 ("dat")); ## Sii leat c1ujuhan dasa vuosttas jagi.



# Indefinite pronouns
# ===================

SELECT Indef IF (0 ("seammá"))(*1 N BARRIER NPNH);
                  ## Dat lea dohkkehuvvon stáhtarád1is seammá beaivvi

SELECT Attr IF (0 Pron)(*1 N BARRIER NON-A-PCLE);
                 ## Dan muitalii muhtin mátkkos1teaddji gean namma lei Keilhau.
                 ## Njuolggadusain ledje eará ge mearrádusat.

SELECT Indef IF (0 ("nubbi"))(*1 CS OR CC OR COMMA LINK *1 ("nubbi"));
                  ## Nubbi lei dáz1a, muhto nuppi bearras1is lei isit sápmelas1.

SELECT Indef IF (-1 CS OR CC OR COMMA LINK *-1 ("nubbi"))(0 ("nubbi"));
                  ## Nubbi lei dáz1a, muhto nuppi bearras1is lei isit sápmelas1.



# ========================= #
# Disambiguating adjectives #
# ========================= #
         CONSTRAINTS        #
# ========================= #

# Rules related to specific adjectives
# ====================================

# garra
SELECT Attr IF (NOT *-1 V-SG3)(0 ("garas" A Attr))(1 N)(NOT *1 V-SG3);
                            ## Beatnagat eai biva vis1s1at garra buollas1iid.
# This rule is here to remove "garra" N Sg Nom
# There are still instances of attr garra that it will fail to disambiguate.
# Wait for them to turn up.


# Attribute disambiguation
# ========================


REMOVE (A Nom) IF (0 (A Attr))(*1 N BARRIER NON-A LINK NOT 1 Po);
REMOVE (A Gen) IF (0 (A Attr))(*1 N BARRIER NON-A LINK NOT 1 Po);
REMOVE (A Acc) IF (0 (A Attr))(*1 N BARRIER NON-A LINK NOT 1 Po);
                                     ## Dat lea c1uovvovas1 sajis.

# These two are too heavy.
REMOVE V IF (0 (A Attr))(*1 N BARRIER NON-A LINK NOT 1 Po);
REMOVE N IF (0 (A Attr))(*1 N BARRIER NON-A LINK NOT 1 Po);
               ## Olles doaibmaviessu lea sullii 2300 njealjehasmetera stuoru. 


REMOVE PrsPrc IF (0 (A Attr))(1 N)(NOT 1 Gen);
                  ## Sidjiide maid lei guollerikkis Ruija geasuheaddji guovlu.


# Rule for predicative attributes
# - - - - - - - - - - - - - - - - 

SELECT Attr IF (-3 BOS)(-2 Nom)(-1 ("leat"))(0 Prop)(1  Prop)(2 NP-BORDER);

SELECT (A Attr) IF (1 CC)(2 (A Attr))(3 N); ## Dat lea od1d1a ja vilges gákti.



# Coordinated attributive surnames
# - - - - - - - - - - - - - - - - 

SELECT (Prop Attr) IF (NOT -1 Prop)(1 CC)(2 (Prop Attr))(3 (N Prop));
                           ## Dál leaba Brita ja Ove Kåven.

SELECT A IF (*-1 ("leat" V) BARRIER NON-ADV-INDEF)(1 N OR EOS);
                           ## Ikte lei hui buolas1.

REMOVE Attr IF (0 A)(NOT 1 A OR CC OR N); ## Vuolgit lea suohtas.
 # Now, the former "OR COMMA" is moved to the next rule.
 # Perhaps the rule fares better now.

REMOVE Attr IF (0 A)(1 COMMA)(NOT 2 A);
                           ## Jos dat ii leat vejolas1, de mii fertet mannat.

REMOVE Attr IF (0 A-CASE OR Adv)(1 CC)(NOT *2 N BARRIER (A Attr) OR ("buorre"));
                    ## Guovlu lea 1500 km guhkkosas1 ja 300 km govdosas1.
  # Is there something wrong with this rule?


REMOVE (A Sg Nom) IF (0 (A Attr))(*1 N BARRIER NON-Attr);
  # When 1 = object predicative, this is a bad rule. Perhaps:
  # (-1 COPULAS)? Keep it in mind.



# special rules for 'buorre' (the only adjective showing case agreement)
# ----------------------------------------------------------------------

SELECT Gen IF (0 ("buorre"))(NOT 0 Comp OR Superl)
              (*1C (N Gen) BARRIER NON-ADJ-CC);

SELECT Acc IF (0 ("buorre"))(NOT 0 Comp OR Superl)
              (*1C (N Acc) BARRIER NON-ADJ-CC);




# Comparatives
# ------------

REMOVE VGen IF (-1 Gen OR Dem)(0 Attr OR Comp OR Superl)(1 N)(2 NP-BORDER);
REMOVE N    IF (-1 Gen OR Dem)(0 Attr OR Comp OR Superl)(1 N)(2 NP-BORDER);
REMOVE Adv  IF (-1 Gen OR Dem)(0 Attr OR Comp OR Superl)(1 N)(2 NP-BORDER);
REMOVE VFIN IF (-1 Gen OR Dem)(0 Attr OR Comp OR Superl)(1 N)(2 NP-BORDER);
## Dat lea died1áhus sámepolitihka bajit linjáid birra.

   # This is a highly specified context. The idea is that the Spec ___ N
   # position should have and Attr or some other adjective. Look out for probl.

REMOVE Gen IF (0 Comp)(1 N)(NOT 1 (N Gen));
REMOVE Acc IF (0 Comp)(1 N)(NOT 1 (N Acc));
REMOVE Nom IF (0 Comp)(1 N)(NOT 1 (N Nom));
## Dat lea died1áhus sámepolitihka bajit linjáid birra.

   # This block of rules is there to ensure case agreement for attributive
   # comparatives.

SELECT Comp IF (*1 ("go") BARRIER NON-N);
            ## Son lea buoret go mun.
            ## Dáz1at navde Finnmárkku buoret guovlun go iez1aset ruovttubáiki.





# Cardinal numbers
# ----------------

SELECT Card IF (*-1 ("okta" Num))(-1 COMMA)(0 ("nubbi"));
SELECT Indef IF (*-1 ("nubbi"))(-1 COMMA)(0 ("nubbi"));
                             ## Okta ás1s1i lea mii lágas mearriduvvui, nubbi
                             ## lea man kommis1uvnnat c1uvvo mearrádusaid.
  # Hmm. remove or select Card? It depends on how we understand the situation.
  # If "okta" is to be seen as numeral, then it should have a numeral as com-
  # panion along the road. Better would perhaps be to see both "okta" and
  # "nubbi" as indefinite pronouns in this context.
  # Here in any case: okta ... nubbi => card and nubbi ... nubbi => indef.



# ==================== #
# Disambiguating nouns #
# ==================== #
      CONSTRAINTS      #
# ==================== #




# Proper nouns
# ============

# Prop or not
# -----------

SELECT Prop IF (NOT *-1 BOS OR (":") OR (""") BARRIER WORD); # still does
# Capitalised nouns in the middle of a sentence are names.   # not work
# Jesus dajai: "Lea c1állojuvvon: ..."


# Prop as Attr or not
# -------------------

REMOVE Attr IF (0 Prop)(NOT 0 A)(NOT 1 Prop OR INITIAL);   
                 ## Trond Trosterud lea dál.
                 ## Olles doaibmaviessu lea sullii 2300 njealjehasmetera. 

# Note:  the rule for selecting attribute reading of surnames is given
#        in the section on adjectives.

SELECT Attr IF (0 Prop)(1 INITIAL)(2 Prop);   ## Mathis K. Sara.

SELECT Attr IF (0 Prop)(1C (N Prop)) ;        ## Rolf Arne Berg.


# Choosing between different proper nouns
# ---------------------------------------

# Norga vs. Norge
REMOVE ("Norge") IF (0 ("Norga"));            ## Mun vuolggán Norgii.

# Lassi
REMOVE Prop IF (-1 BOS)(0 ("Lassi"));
                               ## Lassin nammadii direktevra guokte bargi.

# Nilse vs. Nilsen
REMOVE ("Nilse") IF (0 ("Nilsen" N Prop Sg Nom));
                               ## Tor Nilsen lea boahtán.



# Case disambiguation
# ===================


# Nominative
# ==========

# Nominative in titles and sentence fragments
# - - - - - - - - - - - - - - - - - - - - - -

# A single word is nominative
SELECT Nom IF (-1 BOS)(NOT 0 VFIN)(0 N OR A OR Pron)(1 EOS); ## Katja.

# An NP head with a genitive modifier is nominative
SELECT Nom IF (-2 BOS)(-1 Gen)(0C N)(1 EOS); # .

# An NP head with a nominative Pron Dem modifier is nominative
SELECT Nom IF (-2 BOS)(-1 (Pron Dem Sg Nom))(0 Sg)
              (*1 V-SG3 BARRIER NON-ADV);
                                       ## Dat died1us mielddisbuvtii ahte ...


# Nominative subjects
# -------------------

# Find the subject, and assume it is nominative

# Ordinary preverbal subjects
# - - - - - - - - - - - - - - 

SELECT Nom IF (-1 CS OR BOS OR (Interr Sg))(0 Sg)(1C V-SG3); 
                                 ## Died1án, ahte plána movttiidahttá dan.

SELECT Nom IF (-1 CS OR BOS)(0 Pl)(1C V-PL3); 
                                 # ... and the same in pl..

REMOVE Nom IF (-1 BOS)(NOT 0 (Pron Pers))(1C V-1-2);
                                 ## Dan oainnán viesu duohkin.  
                                 ## Moai c1ilge dan ás1s1i dutnje.


# Vocatives, subjects of sentence fragments
# - - - - - - - - - - - - - - - - - - - - - 

SELECT Nom IF (-1 BOS)(0 Prop)(1 COMMA); 
                                 ## Biera, du sabehiid!



# Coordinated subjects
# --------------------

SELECT (Sg Nom) IF (*-1 CC BARRIER NPNHAI LINK -1C (Sg Nom))(1 NP-BORDER);
  ## Bror Berg ja Per Mikael Utsi leaba ruovttus.

SELECT (Sg Nom) IF (1 CC)(*2C (Sg Nom) BARRIER NPNHAI LINK 1 NP-BORDER);
  ## Per Mikael Utsi ja Bror Berg leaba ruovttus.



# Postverbal subjects
# -------------------

# Singular
SELECT (Sg Nom) IF (*-1 V-SG3 BARRIER NPNHAIIP LINK *-1 BOS OR CLB BARRIER Nom)
                (0 (N Sg) or (Pron Pers Sg) OR (Pron Interr Sg))(NOT 0 PrfPrc);
                    ## Dat lei 1827s, muitalii muhtin mátkkos1teaddji midjiide.
                    ## Riikkaid galgá Piera oaidnit.

# Plural
SELECT (Pl Nom) IF (*-1 V-PL3 BARRIER NPNHAIIP LINK *-1 BOS OR CLB BARRIER Nom)
                (0 (N Pl) or (Pron Pers Pl) OR (Pron Interr Pl))(NOT 0 PrfPrc);
                    ## 1995:s gárvánedje rádiobuvttadeapmái lanjat.





# Nominative predicatives
# - - - - - - - - - - - -

  # Here, we handle both nouns and adjectives.


# Case disambiguation of predicatives
# -----------------------------------


SELECT Nom IF (*-1 ("leat" V Sg1) BARRIER NPNH OR PrfPrc
               LINK *-1 MUN BARRIER NON-ADV-PCLE)
              (NOT 0 PrfPrc)(NOT *1 PrfPrc);

SELECT Nom IF (*-1 ("leat" V Sg2) BARRIER NPNH OR PrfPrc
               LINK *-1 DON BARRIER NON-ADV-PCLE)
              (NOT 0 PrfPrc)(NOT *1 PrfPrc);
                                      ## Mun lean Anna. Don leat Anna.

SELECT (Sg Nom) IF (*-1 ("leat" V Sg3) BARRIER NPNH
                LINK *-1 (Sg Nom) BARRIER NON-ADV-PCLE)(NOT 0 PrfPrc or Adv);
                                      ## Tor lea od1d1a oahpaheaddji.

SELECT (Pl Nom) IF (*-1 ("leat" V Pl3) BARRIER NPNH
                LINK *-1 (Pl Nom) BARRIER NON-ADV-PCLE)(NOT 0 PrfPrc);

SELECT Nom IF (-2 Nom)(-1 COPULAS)(0 A)(NOT 0 PrfPrc)(1 EOS OR ("go"));
                                      ## Biilla ivdni lea vielgat.
                                      ## Biilla ivdni lea vielgadeabbo go mielki.

SELECT Nom IF (-2 Nom)(-1 COPULAS)(0 A)(NOT 0 PrfPrc)(1 CC)(2 A);
                                      ## Viessu lea vielgat ja ruksat.

SELECT Nom IF (-4 Nom)(-3 COPULAS)(-2 A)(-1 CC)(0 A)(NOT 0 PrfPrc)(1 EOS);
                                      ## Viessu lea vielgat ja ruksat.


SELECT Nom IF (-3 BOS)(-2 Nom)(-1 ("leat"))(NOT 0 PrfPrc)(1 EOS);
                                           ## Mun lean Bond.
                                           ## Mun lean gánda.


SELECT Nom IF (-2 NP-HEAD-SG-NOM)(-1 ("leat" V Sg3))(NOT 0 PrfPrc or Adv);


SELECT Nom  IF (-4 BOS)(-3 Nom)(-2 ("leat"))(-1 Prop OR (ABBR))(NOT 0 PrfPrc)
               (1 NP-BORDER);

SELECT Nom  IF (*-5 BOS BARRIER NPNH)(-4 Nom)(-3 ("leat"))
                (-2 Prop OR (ABBR))(-1 Prop)(0 Prop)(1 NP-BORDER);

SELECT Nom  IF (*-6 BOS BARRIER NPNH)(-5 Nom)(-4 ("leat"))
                (-3 Prop OR (ABBR))(-2 Prop)(-1 Prop)(0 Prop)(1 NP-BORDER);

                                            ## Mun lean James Bond.
                                            ## Mun in leat James Bond.
                                            ## Mu namma lea Jo Ann Ba Doe.

# Again, these rules are too specific. Need empirical data to enlarge them.
# What is needed is linking both to copula and to clause border.

SELECT Nom IF (-2 NP-HEAD-SG-NOM)(-1 COPULAS + (V Sg))(1 EOS);
                                            ## Tor lea oahpaheaddji.

SELECT (N Sg Nom) IF (*-1 V-SG3 LINK NOT *-1 NP-HEAD-SG-NOM)
                                    (NOT  -1 NP-HEAD-SG-NOM)
                                    (NOT 0 PrfPrc)(1 EOS);


# Nominative as objects in existential clauses
# --------------------------------------------

REMOVE Acc IF (-2 Loc)(-1 ("leat"))(NOT *1 V); # Mus lea golli.
SELECT Nom IF (-2 Loc)(-1 ("leat"))(1 EOS); # Mus lea golli.


# Unclassified
# - - - - - -

SELECT Nom IF (-1 Gen)(NOT -1 (Pron Dem Gen))(0 N-SG-NOM)(1 V-SG3);
                            ## Du ás1s1i lea dehalas1.
                            ## Dan ás1s1i ferte dutkat.
# HMM, brave..
# Note that the tag is selected, the set is in the condition.

# Nominative if two names in a row
SELECT Nom IF (-1 PROP) (0 PROP) (1 V-SG3); # Biret Anne galgá mannat.


# Rules for disambiguation around conjunctions, in coordination
# -------------------------------------------------------------

SELECT Nom IF (-2C N-NOM)(-1 CC)(NOT 1 Gen OR (Prop Attr));
 ## Trond ja Kirsti leat dál. Bror Berg ja Per Mikael Utsi leat ruovttus.
SELECT Nom IF (1 CC)(2C N-NOM); # Kirsti  ja Trond leat dál.

REMOVE Gen IF (0 N)(1 CC)(2 (Pron Sg3 Gen)); ## Jos1iai riegádii.
# Peters and Pauls friend OK.                ## Jekonja ja su vieljat leat dál.

SELECT Nom IF (-2 (Nom Cmpnd)) (-1 CC);
SELECT Gen IF (-2 (Gen Cmpnd)) (-1 CC);
SELECT Acc IF (-2 (Acc Cmpnd)) (-1 CC);


# Nominative plural
# =================
    CONSTRAINT
# =================

# Nominative plural is also covered by many of the rules found in the general 
# Nominative section above. Rules related to Nominative plural but #not# No-
# minative singular should go here.

# Postverbal predicative

SELECT (Pl Nom) IF  (*-1 LEAT-DU-PL BARRIER NPNHAI
                LINK *-1 PPRON-DU-PL BARRIER NON-ADV-PCLE);
                                  ## Doai leahppi goappas1agat nu jallat.

SELECT (Pl Nom) IF  (*-1 ("leat" Du3) BARRIER NPNHAI
                LINK *-1 (N Sg Nom) BARRIER NON-ADV-PCLE
                LINK *-1 CC BARRIER NPNH LINK -1 (N Sg Nom));
                                  ## Anne ja Biret leaba goappas1agat nu jallat.

SELECT (Pl Nom) IF  (*-1 ("leat" Pl3) BARRIER NPNHAI
                LINK *-1 (N Sg Nom) BARRIER NON-ADV-PCLE
                LINK *-1 CC BARRIER NPNH LINK -1 (N Sg Nom)
                LINK *-1 COMMA BARRIER NPNH LINK -1 (N Sg Nom));
                                  ## Anne, Biret ja Cathrin leat nu jallat.

SELECT (Pl Nom) IF  (*-1 ("leat" Pl3) BARRIER NPNHAI
                LINK *-1 (N Pl Nom) BARRIER NON-ADV-PCLE);
                                  ## Mánát ge leat buot nu jallat.

# Missing Du3 and Pl3 rules for coordinated subjects and pl subjects


#SELECT (Pl Nom) IF (NOT *-1 (N Pl Nom))(*1 V-PL3 BARRIER ()
#                LINK NOT *-1 CC);     




# Genitive or Accusative
# ======================

REMOVE Nom IF (*-1 (Pron Dem Acc) OR (Pron Dem Gen) BARRIER NON-A);
                                   ## Dan ás1s1i ferte dutkat.


REMOVE Nom IF (*-1 V-NOT-SG3 BARRIER CC)(0 (Sg Acc) OR (Sg Gen))
               (*1 EOS BARRIER V-SG3);
        ## C1uovvovas1 seminára cealkagat govahallet seminára loahppabohtosa.



# Nominative or Accusative
# ======================

REMOVE Gen IF (-1 BOS)(1 Adv) ;
            ## Dan maid dalle dárbbas1a fievrridit.


# Accusative
# =========== #
  CONSTRAINTS #
# =========== #



# Topicalised object
# ------------------

SELECT Acc IF (NOT *-1 VFIN BARRIER CS)(NOT 0 Nom)
              (*1 VFIN BARRIER NON-ADV-PCLE);#check w/o care LINK NOT *1 Acc);
                                     ## Dan lean mun váldán.

SELECT Acc IF (*-1 (V Neg))(NOT 0 Nom)
              (*1 ConNeg OR PrfPrc BARRIER NON-ADV-PCLE LINK NOT *1 Acc);
                                     ## Ii go mánáid sáhte oahpahit dárogillii?

REMOVE Gen IF (NOT -2 Gen)(-1 CC)(1C VFIN);
                     ## Mus lea doaivu ja dan sáhttá c1állit c1uovvovac1c1at.
REMOVE Gen IF (*-1 CLB BARRIER NON-CC)(1C VFIN);
                     ## Mus lea doaivu, ja dan sáhttá c1állit c1uovvovac1c1at.
REMOVE Gen IF (-1 CS)(1C VFIN);
                     ## Mun jáhkán, ahte dan sáhttá c1állit c1uovvovac1c1at.
  # The "1C" part is problematic, as this rule should have been placed
  # after the verb disambiguation. Keep in mind.



# Accusative between Aux and main verb
# ------------------------------------

# In front of an infinitive
SELECT Acc IF (*-1 VFIN BARRIER NPNHAI)(NOT 0 PrfPrc)(1 Inf);
                          ## Od1astus addá vejolas1vuod1a muitalit.
                          ## Son lea beassan bargat.
# changed V-IND-FIN to VFIN here and in subsequent rules.

SELECT Acc IF (*-1 VFIN BARRIER NPNH)(1 CC)
              ( *2 NP-HEAD   BARRIER NPNH LINK 1 Inf);
SELECT Acc IF (*-1 CC BARRIER NPNH LINK -1 NP-HEAD LINK 
              *-1 VFIN BARRIER NPNH)(1 Inf);




# In front of a participle
SELECT Acc IF (*-1 LEAT-FIN-NON-IMP BARRIER NPNHAI) (1 PrfPrc);
                                                 ## Mun lean dan dahkan.




# Accusative postverbally
# -----------------------

# Object only.

SELECT Acc IF (*-1C V-NON-AUX BARRIER NPNHAIIP OR COMMA)
              (0 NP-HEAD)(NOT 0 PrfPrc or Adv or Dem)
              (1 NP-BORDER OR ADVLCASE OR Adv) 
              (NOT 1 Po) ;
                                ## Oainnán du.
                                ## In mun sálten nu olu.
                                ## Dáz1at eai atnán sámiid buoret go beanan.
                                ## Sii badjelgehc1c1e olbmo jos sámiin náitala.
                                ## Son ráhkada gáhkuid hui buriid.
                                ## Mun manan daid mánáidguin.
# look at the NP-BORDER concept here...
# NPNHAII there to include "indirect objects"
# Added C to *-1C, to avoid interference from derived nouns. The problem will
# become smaller as we improve the preprocessor.
# The (1 Adv or Adj) is there to take care of object predicatives
#              Here is a set ofrules that were dismissed
#              (1 CLB OR Adv OR (A Comp) OR (A Superl) OR (A Attr) OR
#              ("go") OR CS OR PUNCT);

# Extended copy of the previous rule:
# This rule is to tolerate a PP between the verb and the object.
SELECT Acc IF (*-1C Po BARRIER NPNHAIIP LINK -1 N OR Pron
              LINK *-1C V-NON-AUX BARRIER NPNHAIIP)
              (0 NP-HEAD)(NOT 0 PrfPrc or Adv)
              (1 NP-BORDER OR ADVLCASE OR Adv) 
              (NOT 1 Po) ;
                  ## Ii olmmos1 gille guoddit, go beare deaivá dan mad1e bohcco
                  ## ahte lea niesteseahkkaguoddi.




REMOVE Acc IF (NOT *-1 V-NON-AUX BARRIER CS)(NOT *1 V-NON-AUX BARRIER CS);
        ## Sápmelac1c1aid historjá álbmogin lea duháhiid jagiid boaris, muhto
        ## dálá ássanguovlluin sápmelac1c1at eai leat ássan nu guhká.
        ## Eai lean váldán go niestebohccu.
  # We need a verb for an obj. The barrier must be refined, though!
  # Cf the lat exambple, that gives the wrong result.

REMOVE Acc IF (NOT *-1 V-NON-AUX BARRIER CS)(*1 V-PASS BARRIER CS);
REMOVE Acc IF (*-1 V-PASS BARRIER VFIN)(NOT *1 V-NON-AUX);
                            ## Dál nannejuvvui girku sámeguovlluin.

# Coordinated object
# - - - - - - - - -

# First part
SELECT Acc IF (*-1 V-NON-AUX BARRIER NPNHAII)(0 N)(1 CC)
              ( *2 NP-HEAD   BARRIER NPNHA LINK 1 CLB);
                                       ## Oainnán vilges biilla ja rukses viesu.
  # Second part
SELECT Acc IF (*-1 CC BARRIER NPNH LINK -1 NP-HEAD LINK 
              *-1 V-NON-AUX BARRIER NPNHAII)(0 N)(1 CLB);
                                       ## Oainnán vilges biilla ja rukses viesu.

# Three coordinated objects
  # First part
SELECT Acc IF (*-1 V-NON-AUX BARRIER NPNHAII)(0 N)(1 COMMA)
              ( *2 NP-HEAD   BARRIER NPNHA LINK 1 CC LINK
                 1 NP-HEAD   BARRIER NPNHA LINK 1 NP-BORDER);
         ## Jos juohká dáz1aid, sámiid ja láddelac1c1aid ies1 gud1et sadjái, ...

  # Second part
SELECT Acc IF (*-1 COMMA BARRIER NPNH LINK -1 NP-HEAD LINK 
               *-1 V-NON-AUX BARRIER NPNHAII)(0 N)(1 CC LINK
                 1 NP-HEAD   BARRIER NPNHA LINK 1 NP-BORDER);
         ## Jos juohká dáz1aid, sámiid ja láddelac1c1aid ies1 gud1et sadjái, ...

  # Third part
SELECT Acc IF (*-1 CC BARRIER NPNH LINK -1 NP-HEAD LINK -1 COMMA BARRIER
               NPNH LINK -1 NP-HEAD LINK *-1 V-NON-AUX BARRIER NPNHAII)
               (0 N)( 1 NP-BORDER);
         ## Jos juohká dáz1aid, sámiid ja láddelac1c1aid ies1 gud1et sadjái, ...


# Accusative for a topicalised verb
# ---------------------------------

REMOVE Gen IF (@1 V-NON-AUX + Clt)(NOT -1 (N Acc))
              (1 EOS OR CLB);             ## C1ilgego moai dan?
  # This is not a good rule. Have more looks at it.
  # On the other hand side: With the addition (1 EOS)
  # it has become too careful. Thus, let's try with CLB as well.


REMOVE Gen IF (-1 VFIN)(0 N)(1 CLB); ## Joramii riegádii Ussia, Ussiai riegádii
# The rule is too specific.          ## Jotam.




# Numeral as object after postverbal subject
# - - - - - - - - - - - - - - - - - - - - -

SELECT Acc IF (-1 (N Nom) LINK *-1 VFIN BARRIER NPNHAIIP)
              (0 Num)(NOT 1 Po);
       ## Lassin nammadii direktevra guokte bargi ja ozai c1álli lávdegoddái










# Accusative sentence-finally
# ---------------------------

REMOVE Gen IF (NOT -1 Pr OR Num)(1 EOS OR CLB) ;
          ## Fylkka mearrida olugo galgá atnit sámi leavgga.
          ## C1uovvovas1 seminára cealkagat govahallet seminára loahppabohtosa.
          ## Man1n1il lea viessu viiddiduvvon guovtte geardde.


# Accusative in time expressions
# ------------------------------

SELECT Acc IF (0 VAHKKU)(NOT 1 Po);
 # Too general!


# Object predicatives
# -------------------

SELECT Acc IF (*-1 Acc BARRIER NPNHA)(0 A)(1 CLB OR EOS OR CS);
                                     ## Dáz1at eai atnán sámiid buoret go beanan.


# Illative
# ========

REMOVE (V Ind Prt Sg3) IF (-1 (N Gen))(0 Ill);
                           ## Mud1ui gustojit seamma njuoggadusat sámi levgii.




#  Genitive
# ===========
  CONSTRAINTS
# ===========

# Genitive as complement
# ----------------------

# Genitive in front of postposition
SELECT Gen IF (NOT 0 Adv)(1 Po) ;    ## Dat lea nieidda dihte, nieidda birra.
  # As it stands, this rule has no conditions. So, what errors will we get?

# Genitive after preposition
SELECT Gen IF (-1 Pr); # Earret mu ii giige lea boahtán.

# Genitive after quantifier
SELECT Gen IF (NOT -2 Pr)(-1 NUMERALS OR MANGA);
                    ## Dat leat golbma nieidda.
                    ## Dál leat mán1ga nieidda
                    ## Ovdal 1920 orru guovtti goalmmátoasis ohcamiin nu geavvan.
                                      
CONSTRAINTS # The genitives preceeding this CONSTRAINTS symbol are 
            # firmer than the ones folling it.


# Genitive as specifier
# ---------------------

# Genitive in front of noun in the beginning of a sentence
# - - - - - - - - - - - - - - - - - - - - - - - - - - - -

REMOVE (N Acc) IF (-1 NP-BORDER)(NOT -1 V)
                  (*1 N BARRIER NON-A LINK *1 VFIN BARRIER CS);

REMOVE (N Nom) IF (-1 NP-BORDER)
                  (*1 N BARRIER NON-A LINK *1 VFIN BARRIER CS);
                                         ## Nieidda girji lea ruoksat.

REMOVE (Pron Pers Acc) IF (-1 NP-BORDER)(*1 N BARRIER NON-Attr LINK *1 VFIN);
REMOVE (Pron Pers Nom) IF (-1 NP-BORDER)(*1 N BARRIER NON-Attr LINK *1 VFIN);
                                         ## Din viessu s1attai oppa stuoris.
# Added Pers in order not to include 

# The 'select' rule was too powerful, we do 'removeä instead.
#SELECT Gen IF (-1 NP-BORDER)(*1 N BARRIER NON-A LINK *1 VFIN);

REMOVE Gen IF (-1 CLB)(1 (Pron Pers))(*1 VFIN); ## Na, du mun lean oaidnán.
REMOVE Gen IF (-1 BOS)(1 (Pron Pers))(*1 VFIN); ## Du mun lean oaidnán.



# Genitive in front of noun at the end of a sentence
# - - - - - - - - - - - - - - - - - - - - - - - - - 

SELECT Gen IF (NOT 0 Attr)
              (NOT *-1 Pr OR V BARRIER PRE-NP-HEAD)
              (*1C N BARRIER NON-A LINK 1 NP-BORDER) ;
                     ## Fylkka mearrida olugo galgá atnit sámi od1d1a leavgga.
# This rule is not good. Evaluate it.
   ## Ulbmiliin lea nannet sámegiela máhtolas1vuod1a Sámedikki organisas1uvnnas.
   ## Ulbmiliin lea duohtan dahkat sámegiela geavaheapmi Sámedikkis.



# Genitive inside a two-part Po
# -----------------------------

SELECT Gen IF (-1 POST-A)(1 N)(2 POST-B);
## Nu leat 40 buolvva Dávveda rájes Babylonia fán1gavuod1a rádjái.

#REMOVE Acc IF (-1 BOS)(1 (N Gen) OR (Attr) OR PPOS) ;
                                            ## Mu birra don humat.
                        # This should be covered by the others... Check.

# Genitive in front of the final word in the sentence, or: NP-initially
SELECT Gen IF (0C CNOUN)(*1C (N Acc) BARRIER NPNH)
              (2 NP-BORDER OR ADVLCASE);  # earlier: (2 CLB);
                                            ## Oainnán nieidda biilla.
                                            ## Oainnán nieidda biillas.

SELECT Gen IF (0C (Pron Pers))(*1 (N Acc) BARRIER NPNH)(2 CLB);
                                            ## Oainnán su od1d1a biilla.
                    # Unify these? Look at the effect of each and one of them.

SELECT Gen IF (0C (N Prop) )(*1C CNOUN BARRIER NPNH)(2 CLB);
                                            ## Oainnán Uria biilla.


# Specifier disambiguation in coordination constructions
# - - - - - - - - - - - - - - - - - - - - - - - - - - -

SELECT Gen IF (-2 Ill)(-1 CC)(*1 Ill BARRIER NPNH);
SELECT Gen IF (-2 Com)(-1 CC)(*1 Com BARRIER NPNH);
SELECT Gen IF (-2 Loc)(-1 CC)(*1 Loc BARRIER NPNH);
SELECT Gen IF (-2 Ess)(-1 CC)(*1 Ess BARRIER NPNH);
                        ## Suoma sisafárrejeaddjiide ja sin man1isboahttiide.






# Genitive relative pronouns
# --------------------------

SELECT Gen IF (0 (Pron Interr))(1 N);
                               ## Oidnen mátkkos1teaddji, gean namma lei Keilhau.

# Genitive in time expressions
SELECT Gen IF (0 MANNU)(1 (Num Ord));    ##  Dál lea miessemánu 1. beaivvi.

# Genitive if cardinal number
SELECT Gen IF (0 Card)(1 (N Gen));       ## Dat lea duháhiid jagiid boaris.

# Genitive in proper name sequences
REMOVE Acc IF (0 Prop)(1 Prop);          ## Dat lea Norgga Röros ja Máhte Piera.
  # Hmm, very general indeed!








# Locative singular
# ================= #
      CONSTRAINTS
# ================= #



SELECT Loc IF (*-1 BOS OR CS BARRIER NPNHAI)
              (*1 ("leat") BARRIER NON-ADV-NEG);
                                          ## Ádjásgo lea od1d1a fanas.
                                          ## Suomas maid lei dilli váttis.
                                          ## Lágas eai leat mearrádusat.
  # This rule is all too general, it must be sharpened in some way.
  # The rule does not handle ## Daningo sámiin lea iez1aset giella.

SELECT Loc IF (-2 BOS)(-1 ("leat" Clt)); ## Leago mus rud1aid?
# hmm...

SELECT Loc IF (0 VAHKKU);
           ## 1870-jagiin lea c1ielggas ahte láddelac1c1aide guske ortnegat.
        


# Comitative singular
# ===================

# NP-internal disambiguation of Com

SELECT Com IF (-1 (Dem Sg Com));         ## Vuolggán dainna biillain.
SELECT Com IF (-2 (Dem Sg Com))(-1 Adv); ## Vuolggán dainna biillain.


# Disambiguation based upon type of NP

SELECT Com IF (0 Prop); # assuming proper names come in sg


# Disambiguation based upon verb valency
#SELECT Com IF (*-1 COM-VERB)(0 (Sg)) ;
SELECT Com IF (*-1 COM-VERB BARRIER CS)(0 Sg);
                             ## Son náitali nieiddain.

SELECT Com IF (0 Sg)(*1 COM-VERB BARRIER CS);
                             ## Nieiddain son náitali.

# Locative plural
# ===============

# NP-internal disambiguation of Loc

SELECT Loc IF (-1 (Dem Pl Loc));         ## Mii c1ohkkát dain biillain.
SELECT Loc IF (-2 (Dem Pl Loc))(-1 Adv); ## Mii c1ohkkát dain biillain.
# Not too elegant, the rule set might be done more general with a barrier


SELECT (Pl Loc) IF (-2 Num)(-1 PROSEANTA); ## Dat lea 50 % rud1ain.

SELECT Loc IF (1 ("gos"));           ## Son lea guovlluin gos sámit ásset.
SELECT Loc IF (1 COMMA)(2 ("gos"));  ## Son lea guovlluin, gos sámit ásset.



# Disambiguation based upon type of NP

SELECT (Pl Loc) IF (0 GUOVLU);

# Disambiguation based upon verb valency

SELECT Loc IF (*-1 LOC-VERB BARRIER CS);
                             ## Son balla nieiddain.

SELECT Loc IF (*1 LOC-VERB BARRIER CS);
                             ## Nieiddain son balla.


# Loc Pl if NP-complement (A book about the wars)

SELECT Loc IF (*-1 N-NON-GEN BARRIER NPNH)(0 Pl);
        ## Ii leat dus1s1e sáhka olbmuid oktavuod1ain juohkebeaivválas1 eallimis.
# Note: There may be counter examples here, I cannot come up with any.




# Disambiguation based upon coordination
# =========== #
  CONSTRAINTS
# =========== #
# The idea is to let the other rules work first, and then let the
# coordination follow suit.

# Simple coordination
SELECT (Pl Loc) IF (*-1 CC LINK *-1 Loc BARRIER NPNH LINK NOT 0 Com);
                                     ## Son lea skuvllas ja od1d1a mediain.
SELECT (Pl Loc) IF (1 CC)(*2 Loc BARRIER NPNH LINK NOT 0 Com);
                                     ## Son lea od1d1a mediain ja skuvllas.

SELECT (Sg Com) IF (*-1 CC LINK *-1 Com BARRIER NPNH LINK NOT 0 Loc);
SELECT (Sg Com) IF (1 CC)(*2 Com BARRIER NPNH LINK NOT 0 Loc);


# Coordination within coordination
# Context to the left:
SELECT (Pl Loc) IF (*-1 CC BARRIER NPNH
                   LINK -1 Cmpnd LINK *-1 CC BARRIER NPNH 
                   LINK -1 Loc LINK NOT 0 Com);
                   ## Son lea skuvllas ja od1d1a fylkka- ja riikkamediain.

SELECT (Sg Com) IF (*-1 CC BARRIER NPNH
                   LINK -1 Cmpnd LINK *-1 CC BARRIER NPNH
                   LINK -1 Com LINK NOT 0 Loc);

# Context to the right:
SELECT (Pl Loc) IF (1 CC)
                   (*2 Cmpnd BARRIER NPNH LINK 1 CC
                   LINK *1 Loc LINK NOT 0 Com);
                 ## Son lea od1d1a fylkka- ja riikkamediain ja skuvllas.

# This part is the addition for right context checking of
# coordination within coordination:
# LINK -1 Cmpnd LINK *-1 CC BARRIER NPNH 

SELECT (Sg Com) IF (1 CC)(*2 Com BARRIER NPNH LINK NOT 0 Loc);


# Generalising the Cmpnd addition:
# Cmpnd in the left branch, checking to the left:




# ==================== #
# Disambiguating verbs #
# ==================== #
      CONSTRAINTS      #
# ==================== #


# Perfect Participle
# -------------------
# PrfPrc to the right of negated verb
SELECT PrfPrc IF (*-1 Neg BARRIER CONTRA);

SELECT PrfPrc IF (*-1 VFIN BARRIER CLB OR CS)
                 (NOT *-1 CC BARRIER VFIN); ## Mun lean muitalan.
                                            ## Mun muitalan ja muitalan.
                                            ## Mun lean muitalan.
  # Hmm: PrfPrc if there is not a Sg1 to the left, but if there is a CC to
  # the right of a possible Sg1, then we forget about the Sg1.

SELECT PrfPrc IF (*-1 VFIN BARRIER Nom OR V OR CS OR CC OR CLB OR PUNCT);
                                                   ## Mun lean muitalan dan.

# Topicalised participle
# ???

# Old rules, remove asap.
#SELECT PrfPrc IF (0 LEAN) (-1 (Neg));
#SELECT PrfPrc IF (*-1 VFIN-NOT-IMP); # Too general!!
#SELECT PrfPrc IF (-1 NP-BORDER)(0 Pass)(1 CNOUN);
                                     



# Finite forms #
# ============ #
   CONSTRAINTS #
# ============ #


# Indicative Negative
# -------------------
  # Unique are Sg1, Sg3, Du1, Du2, Du3, Pl1, Pl2, Pl3
  # hom: "it", where Sg2 = ABBR.

# Select Neg Sg2 instead of ABBR
REMOVE ABBR IF (*-1 ConNeg OR PrfPrc)(0 Neg); ## Dáppe don leamas1 it.
REMOVE ABBR IF (0 Neg)(*1 ConNeg OR PrfPrc);  ## Don it leat dál.


# Indicative Present
# ------------------

# Sg1
# ---
  # Sg1 = PtcPrf (odd-syllables), and Sg1 = V Act (even-syllables)

SELECT Sg1 IF (0 LEAN) (*1 PrfPrc);           ## Mun lean boahtán.
  # So, what kind of barrier could we have here?

SELECT Sg1 IF (*-1 MUN BARRIER Neg OR LEAN-SG1);  ## Mun ferten lohkat.
                                                  ## Mun lean muitalan dan. 

SELECT Sg1 IF (-1 CC)(-2 (V Sg1));              ## Mun human ja human.

#SELECT Sg1 IF (NOT *-1 (V Neg))(NOT *-1 PrfPrc OR Act OR V-SG1);
SELECT Sg1 IF (NOT *-1 VFIN);                 ## Háliidan hupmat.
                                              ## In háliidan hupmat.

# Note: We will need a rule selecting Sg1. # Mun muitalan Suoma birra.






# Sg2
# ---
  # Sg2 = Inf (even syllables, copula)
  # Note the homonymy with derived verbs (jearat = jearadit + ...

SELECT Sg2 IF (0 LEAT) (*-1 DON BARRIER NON-ADV); # no hits

SELECT Sg2 IF (*-1C DON BARRIER Neg)(NOT 0 Imprt); ## fertetgo don vuolgit?

SELECT Sg2 IF (NOT 0 Imprt)(*1C DON BARRIER Neg); ## De, don fertet vuolgit.

# The NOT 0 Imprt part for this example:   ## Gosa don bidjet daid sáiddiid?

# Sg3
# ---
  # Sg3 = ConNeg (even)
  # Sg3 = ConNeg = Imprt Sg2 (contracted)
  # Sg3 = Sg Ill for certain words!!
  # Sg3 = VGen
  # Disambiguating Prs Sg3 is taken care of by rules removing the other 
  # readings whenever their conditions are not fulfilled.



# Du1
# ---
  # Du1 = Prt Pl3

REMOVE Pl3 IF (0 Sg3) (-1 (N Sg Nom)); ## Dokumeanta c1ilge, mo mii eallit.

SELECT Du1 IF (*-1  MOAI BARRIER MII-PERS OR CLB);
SELECT Du1 IF (*1  MOAI BARRIER MII-PERS OR CLB);
SELECT Du1 IF (1 Pcle) (2 MOAI);               ## Jerre go moai?

SELECT Du1 IF (*-1 (N Sg Nom) BARRIER NON-ADV LINK *-1 CC BARRIER NPNHAI 
              LINK -1 (N Sg Nom));
                              ## Anne ja Biret c1ilge, ahte dat lea duohta.

REMOVE (V Du1) IF (NOT *-1 MOAI)(NOT *1 MOAI);


# Du2
# ---
  # leahppi = ("leahppi" N Sg Nom)

REMOVE ("leahppi") IF (*-1 DOAI)(0 ("leat" V Ind Prs Du2));
REMOVE ("leahppi") IF           (0 ("leat" V Ind Prs Du2))(1 DOAI);
  # If there is a pronoun, then we have dual, and not the noun.

# Du3 
  # Du3 = PrsPrc Clt = Imprt Prs Du2 Clt
  # Du3 = Ind Prs Sg3 Clt "leaba, ferteba leat"

SELECT (Du3) IF (*-1 ("son" Pron Pers Du3 Nom)); ## Soai ferteba mannat.
SELECT (Du3) IF (*1 ("son" Pron Pers Du3 Nom));  ## fertebago soai mannat?
SELECT (Du3) IF (-1 (N Sg Nom))
                (*-2 CC BARRIER NPNH LINK -1 (N Sg Nom));
                           ## Per Berg ja Rolf Olsen leaba doppe.
                           ## Stuorra nieida ja unna gánda ferteba leat doppe.
SELECT (Du3) IF (*-1 ("guokte")) ;
                           ## Guokte viesu leaba dál.




# Pl1
# ---
  # Pl1 = Inf for all stem classes
  # Pl1 = Inf = Pl3 = Prt Sg2 for odd syll
  # Pl1 = Inf = Pl3 = Sg2 = ConNeg (copula)

SELECT Pl1 IF (*-1C MII-PERS BARRIER SII OR MOAI OR CLB
                    OR V-PL1);

SELECT Inf IF (-1 V-PL1)(*-2C MII-PERS BARRIER SII OR
                              MOAI OR CLB);

#SELECT Pl1 IF (-1 CC -2 V-PL1 LINK *-1C MII-PERS BARRIER SII OR
#                                  MOAI OR CLB);

SELECT Pl1 IF (NOT -2 (V Ind Prs Pl1 Clt))(-1 MII-PERS);
                                                ## Fertetgo mii fertet?

#SELECT Pl1 IF (NOT -3 (V Ind Prs Pl1)(-2 go)(-1 MII-PERS);
                                                ## Fertet go mii fertet?

SELECT Pl1 IF (-1 BOS)(0 (Clt))(1 MII-PERS);

SELECT Interr IF (0 ("mii" Pron Interr Sg Nom))
                 (*1 Sg3 BARRIER V-PL1 LINK NOT 0 Pl1);



  # Pl2 unique, no rules needed

# Pl3
# ---
  # Prs Pl3 = Prt Sg2 = Prs Pl1 = Inf (odd syll)   muitalit
  # Prs Pl3 = Prt Sg2 = Imprt Prs Pl2 (even syll)    vulget
  # Prs Pl3 = Prt Sg2                 (contracted) fertejit


# Preverbal subject
# - - - - - - - - - 

 # Single noun
SELECT Pl3 IF (*-1C NP-HEAD-PL-NOM BARRIER PPRON-NOT-SII OR (N Sg Nom));
                            ## Nieiddat jerre
                            ## Makkár vuoigatvuod1at dain leat riikavuloz1in?


 # Coordination
SELECT Pl3 IF (*-1 NP-HEAD-SG-NOM BARRIER NON-ADV
           LINK *-1 CC BARRIER NPNH
           LINK -1 NP-HEAD-SG-NOM);        ## Nieida ja gánda jerre

 # Pronoun
SELECT Pl3 IF (*-1 SII BARRIER MII-PERS OR MOAI OR CLB); ## Sii jerre.



# Postverbal subject
# - - - - - - - - -

 # Sentence-initial verb with question particle and coordinated subject
SELECT Pl3 IF (*-1 BOS BARRIER NON-ADV-PCLE)
              (*1 (N Sg Nom) BARRIER NPNH OR NON-ADV-PCLE
              LINK 1 CC LINK *1 (N Sg Nom) BARRIER NPNH);  ## Jerrego Al ja Bo?

 # Sentence-initial verb with question particle and subject 'sii'
SELECT Pl3 IF (*-1 BOS BARRIER NON-ADV-PCLE)
              (*1 SII BARRIER NON-ADV-PCLE);          ## Jerrego sii?

 # Sentence-initial verb with question particle and ordinary plural subject
SELECT Pl3 IF (*-1 BOS BARRIER NON-ADV-PCLE)(*1C NP-HEAD-PL-NOM
              BARRIER NON-ADV-PCLE OR NPNH);          ## Jerrego nieiddat?

 # Post-adverbial verb with final subject
SELECT Pl3 IF (-1 Adv OR ADVERBIAL LINK *-1 BOS BARRIER NPNH)
              (*1 (N Pl) BARRIER NPNHAI);




# Relative pronoun as subject
# - - - - - - - - - - - - - - 

SELECT Pl3 IF (-3 NP-HEAD-PL-NOM)(-2 COMMA)(-1 (Pron Interr Pl Nom)) ;
             #olbmot, geat fállet (too specific?)
SELECT Pl3 IF (-2 NP-HEAD-PL-NOM)(-1 (Pron Interr Pl Nom)) ;
             #olbmot geat fállet (too specific?)



# Existential sentences
# - - - - - - - - - - - 

SELECT ("leat" Pl3) IF (-1 (Loc))(1 NP-HEAD-PL-NOM); ## Mis leat beatnagat.
SELECT ("leat" Pl3) IF (-1 (Loc))(1 NUMERALS); ## Mis leat golbma beatnaga.



## Dá livc1c1e dutnje sabehat.


# Number phrases as subjects
# - - - - - - - - - - - - - 

SELECT Pl3 IF (-2 Num) (-1 N-GEN) ; # Golbma nieidda leat boahtán.
SELECT Pl3 IF (-1 Adv) (1 Num); # Nu jerre golbma nieidda


SELECT Pl3 IF (-1 Loc) (1 Attr OR Pron)(2 (N Pl Nom));## Mus leat od1d1a sabehat


# Selecting some present
# ----------------------

SELECT Prs IF (0 LEAT) (NOT *-1 V-IND-FIN BARRIER CS);
 # More barriers? COLON?
 # one strange hit, revise!
 # The same should be done ... hmm, for what?

SELECT Prs IF (-1 (Neg Prs)) ;

# Select some finite
REMOVE Inf IF (-2 CLB) (-1 CS); ## Dus1s1e, juos leat doarvái...
REMOVE Inf IF (-1 (Inf)) ; # 1 hit


# Indicative Past
# ---------------

  # Past Sg1 is unique

# Past Sg2
# --------
  # Prt Sg2 = Prs Pl3 = Imprt Prs Pl2 (even syll)    vulget
  # Prt Sg2 = Prs Pl3 = Prs Pl1 = Inf (odd syll)   muitalit
  # Prt Sg2 = Prs Pl3                 (contracted) fertejit

SELECT Sg2 IF (*-1 (Pron Pers Sg2 Nom))(0 Prt);             ## Don vulget ikte.
SELECT Sg2 IF (-1 BOS)(0 (Prt Clt))(1 (Pron Pers Sg2 Nom)); ## Vulgetgo don?

SELECT Sg2 IF (*-1 IKTE)(0 Prt);               ## Mun died1an, ahte vulget ikte.
SELECT Sg2 IF (-1 BOS)(0 (Prt Clt))(*1 IKTE);  ## Vulgetgo ikte?


# Past Sg3
# --------
  # Prt Sg3 = Imprt Prs Sg3 (leai)


REMOVE Sg3 IF (*-1 Neg)(0 (Sg Ill));    ## Iiba leat skuvlii álgán.

REMOVE Sg3 IF (-1 VFIN)(0 (N Sg Ill));   ## Mánná galggai skuvlii.

REMOVE Ill IF (*-1 (N Sg) OR (Pron Sg) BARRIER NON-ADV-PCLE
              LINK *-1 BOS OR CS OR CC OR Adv BARRIER NPNHAI)
              (0 (V Ind Sg3));
                               ## Muhto eanandoallu gillái rievdemiid bokte.

REMOVE Ill IF (-2 BOS)(-1 Adv OR ADVLCASE)(0 (V Ind Sg3));
                               ## Dattege loktii dáz1a sisafárren gitta 1850.

REMOVE Ill IF (NOT *-1 ("seammá") OR ("eará"))(1 ("go" Pcle));
           ## Gos lei riegádan, ja máhtii go dárogiela?
           ## Mud1ui gustojit seammá njuolggadusat sámi levgii go dáz1a levgii.




# Past Du1
# --------
# Past Du2
# --------
# Past Du3
# --------
# Past Pl1
# --------
# Past Pl2
# --------



# Past Pl3
# --------
  # Prt Pl3 = Prs Du1

# leai disambiguation
SELECT Prt IF (0 LEAI)(-1 NP-HEAD-SG-NOM); # Introduced 0 LEAI

REMOVE (Prs Du1) IF (0 (Prt Sg3)) (-1 (N Pl Nom)); ## Dokumeantat c1ilge, mo...


SELECT (Prt Pl3) IF (NOT *-1 (N Sg Nom) OR (Pron Sg Nom))
                    (*1 (Pl Nom) BARRIER VFIN);
                                    ## Maiddá siidaguovlluide bohte soapmásat.
  # REMOVE (Prs Du1 instead?

SELECT Pl3 IF (*-1 BOS LINK 1 ("go") LINK *1 (V Pl3))(-1 COMMA)
              (0 (V Ind Prt Pl3));



# Potential Present
# -----------------
# Potential Past
# --------------
# Conditional
# -----------

# Sg3
  # copula sg3 = pl3 livc1c1e (in the eastern dialect)

SELECT Sg3 IF (NOT *-1 (Pl Nom) OR CC)(0 ("leat V Cond Sg3))
              (NOT  *1 (Pl Nom) OR CC);         ## Dá livc1c1e dutnje gahpir

SELECT Pl3 IF (*-1 (Pl Nom))(0 ("leat V Cond Pl3));

SELECT Pl3 IF (NOT *-1 (Sg Nom))(0 ("leat" V Cond Pl3))(*1 (Pl Nom));
                                      ## Dá livc1c1e dutnje sabehat.

# These rules may be generalised. Let's first see whether they work.
SELECT (Sg3) IF (-1 ("Son" Pron Pers Sg Nom))(0 ("leat"));
SELECT (Sg3) IF (NOT *-2 CC)(-1 (N Sg Nom) OR ("son" Pron Pers Sg Nom))
             (0 ("leat")); # strange rule, revise!
SELECT (Sg3) IF (-1 Loc)(1 (N Sg Nom)); # Mus livc1c1e viessu.

# Selecting Sg3 is not restricted to leat. This is not a rule for Conditional.

# Pl3
  # copula sg3 = pl3

SELECT (Pl3) IF (-1 (N Pl Nom) OR ("son" Pron Pers Pl Nom))(0 ("leat"));
SELECT (Pl3) IF (-1 Loc)(1 (N Pl Nom)); # Mus livc1c1e guolit.

# Imperative
# ----------

SELECT (Imprt ConNeg) IF (-1 (Neg Imprt)) ; ## Ale suhta munnje.

#REMOVE Imprt IF (NOT -1 COMMA OR BOS or Pcle)(NOT 0 (ConNeg)) ;
REMOVE Imprt IF (NOT -1 COMMA OR BOS or Pcle)(NOT 0 (ConNeg)) ;
# Imprt must be either a negative verb form, or in the middle of a sentencne.

REMOVE Imprt IF (NOT -2 Nom)(-1 COMMA) ;
            ## Máret, boad1e deike!
            ## Dan maid dárbbas1a fievrridit, ferte olmmos1 noad1uhit.

# Negative imperative
  # Neg Imprt Pl2 = allet V Inf = Prs Pl1 = Prs Pl3

SELECT (Neg Imprt Pl2) IF (*1 ConNeg BARRIER Neg); ## Allet ge gátte ahte ...


REMOVE (V Ind Prs Sg3) IF (-2 BOS)(-1 Pcle)(0 (V Imprt Prs Sg2));
                           ## Na attes munnje daid.
                           # Note that this is dangerous, and kept specific in
                           # order to play safe. May need to be generalised.

# Infinite forms #
# ============== #
    CONSTRAINTS  #
# ============== #

# Infinitive
# ----------

REMOVE VFIN IF (*-1 VFIN-NON-AUX OR ConNeg OR PrfPrc
                    BARRIER ("mii" Pers Pron Nom Pl1) OR SII OR CS OR CLB)
               (0 Inf)(NOT 0 LEAT);
                           ## Mun háliidan bargat. Son ii háliidan bargat.
                           ## Stockfleth lea beassan bargat sámegiela buorrin.
                           # reintroduce (NOT 0 LEAT)? Yes.

# The following two rules extend the preceeding one.
REMOVE (V N Actor Pl Nom) IF (*-1 VFIN-NON-AUX OR ConNeg OR PrfPrc
                    BARRIER ("mii" Pers Pron Nom Pl1) OR SII OR CS OR CLB)
               (0 Inf)(NOT 0 LEAT);
REMOVE (N Pl Nom) IF (*-1 VFIN-NON-AUX OR ConNeg OR PrfPrc
                    BARRIER ("mii" Pers Pron Nom Pl1) OR SII OR CS OR CLB)
               (0 Inf)(NOT 0 LEAT);
REMOVE (V Ind Prs ConNeg) IF (*-1 VFIN-NON-AUX OR ConNeg OR PrfPrc
                    BARRIER ("mii" Pers Pron Nom Pl1) OR SII OR CS OR CLB)
               (0 Inf)(NOT 0 LEAT);


#SELECT Inf IF (*-1 VFIN BARRIER Neg)(0 LEAT);
#                           ## Jos galggas1 leat doaivva kristtalas1vuod1a nannet,
                            
SELECT Inf IF (*-1 MOD BARRIER CS);
                           ## Skuvla galggai oahpahit sámemánáide dárogiela.
                           ## 

SELECT Inf IF (-1 (Interr Sg Nom))(-2 (Sg Nom) OR (Sg3 Nom))(1 (V Sg3));
SELECT Inf IF (-1 (Interr Sg Nom))(-2 COMMA)(-3 (Sg Nom) OR (Sg3 Nom))
              (1 (V Sg3));
                           ## Son gii ohcat áiggui, fertii...
 # This rule is all to specific. It tries to capture topicalised objects
 # Within a subject relative clause.


SELECT Inf IF (*-1 INF-VERB BARRIER Nom OR Interr);
                                            ## Geassesajiid ii oz1z1on vuovdit.
                                            ## Mii ávkkiid lea min doppe johtit.




# Infinitive after predicative
# ----------------------------

# There are two rules in the beginning, conflate when I see the effect.
# The barrier may be too weak.
SELECT Inf IF (-1 A BARRIER VFIN LINK *-1 ("leat") OR ("s1addat") 
              BARRIER NON-ADV)(NOT 0 (N Pl Nom));
                           ## Eará guovlluin lei vejolas1 nannet dárogiela.

SELECT Inf IF (*-1 N BARRIER VFIN LINK *-1 ("leat") OR ("s1addat") 
              BARRIER NPNHAI)(NOT 0 (N Pl Nom));
                           ## Jos leat jaska, de lea dárbu singuin gulahaddat.

# Title!
# ------

REMOVE (Prs Pl1) IF (-1 BOS)(1C V-SG3);
                           ## Vuolgit lea suohtas

REMOVE NP-HEAD-PL-NOM IF (0 (Inf) OR NP-HEAD-SG-NOM)(1C V-SG3);

# Infinitive in coordination
# --------------------------

SELECT Inf IF (1 CC)(2C Inf); ## Mus lea árvalusat mo skuvlla nannet ja buoridit.
SELECT Inf IF (-2C Inf)(-1 CC);

# ConNeg forms
# ------------

SELECT ConNeg IF (*-1 Neg BARRIER VFIN );#OR PrfPrc);
REMOVE ConNeg IF (NOT *-1 Neg);

# Need more advanced rule to select ConNeg when more
# material between neg and conneg
# SELECT (ConNeg IF (0 LEAT) (*-1 Neg);

REMOVE VGen IF (NOT *-1 V-IND-FIN BARRIER CLB OR CS)
               (Not *1 V-IND-FIN BARRIER CLB OR CS);
  # too sloppy, but a bit better with the barrier...

REMOVE ConNeg IF (NOT *-1 (Neg) BARRIER CLB OR V-IND-FIN); 

REMOVE Imprt IF (*-1 (Neg Ind) BARRIER CLB OR V-IND-FIN)(0 (ConNeg));
REMOVE Prs IF (*-1 (Neg Imprt) BARRIER CLB OR V-IND-FIN)(0 (ConNeg));



# Act
# ---
# Act = Prs Sg1 = PrfPrc (odd-syll verbs, contracted verbs)
# => make rules for Act.


# Present Participle
# ------------------

# PrsPrc = Imprt Prs Du2 (even-syll)

# Perfect Participle is also treated at the Ind Prs Sg1 chapter.


# Perfect Participle
# ------------------
  # PrfPrc = V Act
  # PrfPrc = Ind Sg1

SELECT PrfPrc IF (0 ("mannat"))(1 VAHKKU);
                     ## Mannan c1uohtejagi gaskkamuttos lei stuorra gilvu.

# ImprtII
# -------

# VGen
# ----

REMOVE VGen IF (*-1 CS OR Interr OR BOS BARRIER VFIN)(0 VFIN)
               ( *1 CS OR Interr OR EOS BARRIER VFIN);
                              ## Báldáhan ferte din1got, jos galgá fidnet.

  # This rule assumes that VGen comes parasitically upon a finite verb,
  # and removes VGen if this is not the case. More rules are needed in order
  # to remove more cases.

# Gerund,  Verb abessive and Supine do have uniqe forms and need no rules


# Selecting some finite.
# ----------------------

SELECT VFIN IF (NOT *-1 VFIN BARRIER CS OR Interr)(NOT *1 VFIN)
               (NOT -1 BOS LINK 2 EOS);
                               ## Son lea dan sápmelas1 gean dovddan.
                               ## Gos don dál boad1át? Siiddas.
  # first approximation
  # BOS/EOS is there to allow for fragments like the "Siiddas" example.





# ===================== #
#    Residual cases
# ===================== #
       CONSTRAINTS      #
# ===================== #

# This is a section for local disambiguation that must come after the main POS


# Demonstrative pronouns
# ======================

SELECT Acc IF (0 Dem)(*1C (N Acc) BARRIER NON-ADJ) ;
                                              ## Mun oainnán daid mánáid


SELECT Gen IF (0 Dem)(*1C (N Gen) OR (N Sg Ill) OR (N Sg Loc) OR (N Pl Com)
                          BARRIER NON-ADJ) ;
                                              ## Mun manan daid mánáiguin

# ===================== #
# Global disambiguation #
# ===================== #
       CONSTRAINTS      #
# ===================== #


# This is the section for rules of more global scope.
# It is also the section for rules that we would like to work in careful mode,
# i.e. after the other rules have removed as many false readings as possible.


# Adverbs
# -------

SELECT Adv IF (-1C N)(NOT 0 N)(1C Inf);
    ## Geain lea leamas1 vejolas1vuohta systemáhtalac1c1at guorahallat válggaid?
  # The idea is that we between a noun an an infinitive will have an adverb, and
  # not an adjective.
  # A weaker version (in case of trouble) will be to say:
  # REMOVE (A Sg) ...
  # REMOVE (A Pl) ...
  # i.e., this weaker version will keep readings that are neither adverbs not
  # adjectives.



# Adjectives
# ----------

REMOVE Attr IF (1C V OR EOS)(NOT 1 N);             ## Diet lea beare unnán.
  # When all rules are executed, remove the Attrs
  # The double requirement is there because of the compounds.

# Determiners
# -----------

REMOVE Sg IF (0 DEM-PL) (NOT *1 V-SG3);       ## Dat lea buorre.
REMOVE Pl IF (0 DEM-SG) (NOT *1 V-PL3);       ## Dat lea od1d1a niibbit.




# Finite verbs
# ------------

# At least one finite verb in the sentence
# The rule scans to the left until it finds a finite verb
#SELECT VFIN IF (NOT *-1 VFIN)(NOT *1 VFIN);

# Stop at guhto to the left and comma to the right.
#SELECT VFIN IF (NOT *-1 VFIN BARRIER COMP)(NOT *1 VFIN BARRIER CLB);
# cut these two because of titles. They would be ok if we could
# recognise titles.

# Accusative
# ----------

REMOVE Acc IF (0 Pron)(1C Acc); # Mun oainnán du vielja.
  # Afterthought, get rid of Acc in specifier position.
  # Move to logical place, but after the primary Acc cycle.



#=====#
  END #
#=====#



# Notes for future thought:
# =========================

# Soai leaba goappas1agat    nu jallat
# they are   both-Pron-Indef so stupid

# Here, the subject NP is spread around the finite verb. Either, all the
# rules must be duplicated with this feature in mind, or the possible
# discontinuous parts must be included in the complement to the
# NON-ADV-PCLE set.
# While thinking, let us try including Pron Indef into a NON-ADV-PCLE-INDEF,
# at least for predicative constructions.
