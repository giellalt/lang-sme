# ===========================
# NORTHERN SÁMI DISAMBIGUATOR 
# ===========================

DELIMITERS = "<.>" "<!>" "<?>" ;

# ====
# Tags
# ====

# Atomic tags
# (is there a better way of doing this?)

LIST N = N ; LIST A = A ; LIST Adv = Adv ; LIST V = V ; LIST Pron = Pron ;
LIST CS = CS ; LIST CC = CC ; LIST Adp = Adp ; LIST Po = Po ; LIST Pr = Pr ;
LIST Interj = Interj ; LIST Pcle = Pcle ; LIST Num = Num ; LIST Prop = Prop ;
LIST Pers = Pers ; LIST Dem = Dem ; LIST Interr = Interr ;
LIST Refl = Refl ; LIST Recipr = Recipr ; LIST Rel = Rel ;
LIST Indef = Indef ;

LIST Ess = Ess ; LIST Sg = Sg ; LIST Pl = Pl ;
LIST Nom = Nom ; LIST Gen = Gen ; LIST Acc = Acc ; LIST Ill = Ill ;
LIST Loc = Loc ; LIST Com = Com ;

LIST isuf = isuf ; LIST asuf = asuf ; LIST Cmpnd = Cmpnd ;

LIST PxSg1 = PxSg1 ; LIST PxSg2 = PxSg2 ; LIST PxSg3 = PxSg3 ; LIST
PxDu1 = PxDu1 ; LIST PxDu2 = PxDu2 ; LIST PxDu3 = PxDu3 ; LIST PxPl1 =
PxPl1 ; LIST PxPl2 = PxPl2 ; LIST PxPl3 = PxPl3 ;

LIST Comp = Comp ; LIST Superl = Superl ;

LIST Clt = Clt ; LIST Attr = Attr ; LIST Card = Card ;

LIST Pass = Pass ; LIST Ind = Ind ; LIST Prs = Prs ; LIST Prt = Prt;
LIST Pot = Pot ; LIST Cond = Cond ; LIST Imprt = Imprt ;

LIST Sg1 = Sg1 ; LIST Sg2 = Sg2 ; LIST Sg3 = Sg3 ; LIST Du1 = Du1 ;
LIST Du2 = Du2 ; LIST Du3 = Du3 ; LIST Pl1 = Pl1 ; LIST Pl2 = Pl2 ;
LIST Pl3 = Pl3 ;
LIST Inf = Inf ; LIST Act = Act ; LIST Ger = Ger ; LIST ConNeg =
ConNeg ; LIST Neg = Neg ; LIST ImprtII = ImprtII ; LIST PrsPrc =
PrsPrc ; LIST PrfPrc = PrfPrc ; LIST Sup = Sup ; LIST VGen = VGen ;
LIST VAbess = VAbess ; LIST Actio = Actio ; LIST Actor = Actor ;

LIST ABBR = ABBR ; LIST CLB = CLB ; LIST PUNCT = PUNCT ;

LIST adda = adda ; LIST alla = alla ; LIST d = d ; LIST eaddji = eaddji ;
LIST eamos1 = eamos1 ; LIST eapmi = eapmi ; LIST g = g ;
LIST geahtes = geahtes ; LIST h = h ; LIST asti = asti ; LIST heapmi = heapmi ;
LIST hudda = hudda ; LIST huhtti = huhtti ; LIST huvva = huvva ; LIST j = j ;
LIST l = l ; LIST las1 = las1 ; LIST ahtti = ahtti ; LIST s1 = s1 ;
LIST meahttun = meahttun ; LIST mus1 = mus1 ; LIST st = st ;
LIST stuvva = stuvva ; LIST us = us ; LIST vuohta = vuohta ;
LIST goahti = goahti ; LIST lágan = lágan ; LIST Dimin = Dimin ;

LIST mii = "mii" ; LIST go = "go" ; LIST <leai> = "<leai>" ;
#SET okta = "<okta>";
# These single-word sets do not work.


# Tag sets
# ========

# Derivational affixes
# --------------------

SET V-DER = adda | alla | d | g | h | asti | hudda | huhtti | huvva |
j | l | ahtti | st | stuvva | goahti ;

SET N-DER = eaddji | eamos1 | eapmi | heapmi | s1 | mus1 | us | vuohta ;

SET A-DER = geahtes | lágan | las1 | meahttun ;

SET DER = V-DER | N-DER | A-DER ;


# Noun sets
# ---------

SET N-SG = (N Sg); SET N-PL = (N Pl) ;
SET N-SG-NOM = (N Sg Nom); SET N-PL-NOM = (N Pl Nom);

SET N-NOM = (N Nom) ; SET N-GEN = (N Gen);

SET N-DER-SG-NOM = (N-DER N Sg Nom) ;
SET N-DER-PL-NOM = (N-DER N Pl Nom) ;
SET LEX-N = N - N-DER;

SET PROP = (N Prop);


# Verb sets
# ---------

SET VFIN = Prs | Prt ;

SET V-SG1 = (V Ind Prs Sg1)|(V Ind Prt Sg1)|(V Cond Prs Sg1)
           |(V Cond Prt Sg1)|(V Pot Prs Sg1) ; 
SET V-SG2 = (V Ind Prs Sg2)|(V Ind Prt Sg2)|(V Cond Prs Sg2)
           |(V Cond Prt Sg2)|(V Pot Prs Sg2) ; 
SET V-SG3 = (V Ind Prs Sg3)|(V Ind Prt Sg3)|(V Cond Prs Sg3)
           |(V Cond Prt Sg3)|(V Pot Prs Sg3) ; 
SET V-DU1 = (V Ind Prs Du1)|(V Ind Prt Du1)|(V Cond Prs Du1)
	   |(V Cond Prt Du1)|(V Pot Prs Du1) ; 
SET V-DU2 = (V Ind Prs Du2)|(V Ind Prt Du2)|(V Cond Prs Du2)
	   |(V Cond Prt Du2)|(V Pot Prs Du2) ; 
SET V-DU3 = (V Ind Prs Du3)|(V Ind Prt Du3)|(V Cond Prs Du3)
	   |(V Cond Prt Du3)|(V Pot Prs Du3) ; 
SET V-PL1 = (V Ind Prs Pl1)|(V Ind Prt Pl1)|(V Cond Prs Pl1)
           |(V Cond Prt Pl1)|(V Pot Prs Pl1) ; 
SET V-PL2 = (V Ind Prs Pl2)|(V Ind Prt Pl2)|(V Cond Prs Pl2)
           |(V Cond Prt Pl2)|(V Pot Prs Pl2) ; 
SET V-PL3 = (V Ind Prs Pl3)|(V Ind Prt Pl3)|(V Cond Prs Pl3)
           |(V Cond Prt Pl3)|(V Pot Prs Pl3) ; 

SET LEAN = ("leat" V Ind Prs Sg1)|("leat" V PrfPrc);
SET LEAI = ("leat" V Ind Prt Sg3)|("leat" V Imprt Prs Sg3);
SET LEAT = ("leat" V Ind Prs Pl1)|("leat" V Ind Prs Pl3)
          |("leat" V Ind Prs Sg2)|("leat" V Inf)
          |("leat" V Ind Prs ConNeg);
SET LIVCCE = ("leat" V Cond Prs Sg3)|("leat" V Cond Prs Pl3)
            |("leat" V Cond Prs ConNeg);

SET LEAT-COP = LEAN | LEAI | LEAT ;

SET VFIN-NON-COP =  VFIN - LEAT-COP  ;

SET LEX-V = V - V-DER;

SET V-DER-PASS = V + V-DER + Pass;
SET V-PASS = V + Pass - V-DER;


# Pronoun sets
# ------------

SET PRON-SG1-NOM = (Pron Pers Sg1 Nom);
SET PRON-SG2-NOM = (Pron Pers Sg2 Nom);
SET PRON-SG3-NOM = (Pron Pers Sg3 Nom);
SET PRON-DU1-NOM = (Pron Pers Du1 Nom);
SET PRON-DU2-NOM = (Pron Pers Du2 Nom);
SET PRON-DU3-NOM = (Pron Pers Du3 Nom);
SET PRON-PL1-NOM = (Pron Pers Pl1 Nom);
SET PRON-PL2-NOM = (Pron Pers Pl2 Nom);
SET PRON-PL3-NOM = (Pron Pers Pl3 Nom);

SET PRON-PL-LOC = (Pron Pers Pl1 Loc)|(Pron Pers Pl2 Loc)|(Pron Pers Pl3 Loc);

SET MII-INTERR = ("mii" Pron Interr Sg Nom);
SET MII-PERS = ("mun" Pron Pers Pl1 Nom);
SET SII = ("son" Pron Pers Pl3 Nom);
SET DON = ("don" Pron Pers Sg1 Nom);

SET DEM-SG = (Pron Dem Sg Nom); SET DEM-PL = (Pron Dem Pl Nom);

# Adjective sets
# --------------

SET A-ADV = ( A Adv ) ;
SET A-ATTR = ( A Attr) ;

SET LEX-A = A - A-DER;

# Miscellanious sets
# ------------------

LIST COMMA = "<,>" ;
#LIST Don = "<Don>"; # ??
SET Don-PRON = ("don" Pron);


#SET NUM-PL = Num - "okta";
SET COMP = (Pron Interr);

# ====================
# Disambiguation rules
# ====================
# ===================================
# One-cohort disambiguation - cycle 0
# ===================================

CONSTRAINTS

# Lexicalised adverbs
# -------------------
REMOVE A-ADV IF ( 0 Adv ) ;

# Lexicalised derivations
# -----------------------

REMOVE N-DER IF (0 LEX-N); # SELECT instead of REMOVE if one wants to
REMOVE A-DER IF (0 LEX-A); # investigate word structure
REMOVE V-DER IF (0 LEX-V); # THIS IS PROBABLY TOO STRONG, MSC may differ

REMOVE V-DER-PASS IF (0 V-PASS);
# It might be that this one is no longer needed.


# ==============================
# Local disambiguation - cycle 1
# ==============================


# Disambiguating nouns
# ====================


# Px constraints
# ==============

# First select some clear Px cases
# Let these come directly after local disamb

CONSTRAINTS

SELECT (PxSg1) IF (-1 V-SG1) (-2 PRON-SG1-NOM);
SELECT (PxSg2) IF (-1 V-SG2) (-2 PRON-SG2-NOM);
SELECT (PxSg3) IF (-1 V-SG3) (-2 PRON-SG3-NOM);

# Then remove the rest
CONSTRAINTS

REMOVE (PxSg1) ; # IF (0 Ess); # yes, kill'em all
REMOVE (PxSg2) ; # IF (0 Pl);
REMOVE (PxSg3) ; # IF (0 Loc);

# Note: Perhaps rather allow Px only for some key nouns (mothern, father, etc).
# Yes, definitely so.

# Proper nouns
# ============

SELECT (Prop) IF (NOT -1 (<s>));
# Capitalised nouns in the middle of a sentence are names.

# Noun or not?
# ============

SELECT (N) IF (-1C (A Attr)); # c1uovvovas1 sajis

# Acc or Gen or Nom
# =================

SELECT (Gen) IF (1 Po) ; #nieidda birra
SELECT (Gen) IF (1 Adp) ;
SELECT (Gen) IF (NOT -1 V) (1 N) (NOT 2 Po);
SELECT (Gen) IF (-1 Num); #Golbma nieidda
SELECT (Gen) IF (-1 CLB) (1 N + Nom); # XXX does not work?, well, 24 hits

SELECT (Gen) IF (1 N-NOM) (2 CLB);

#SELECT (Gen) IF (NOT -1 VFIN-NON-COP) (1 N );

SELECT (Acc) IF (-1 VFIN) (1 Inf); # Od1astus addá vejolasvuod1a geavahit...
#SELECT (Acc) IF (-1 VFIN) (1 CLB); # Stupid, but a start. (rmvd bec of next)
SELECT (Acc) IF (-1 V) (1 CLB); # Hmm, evaluate..
#SELECT (Acc) IF (*-2 N-NOM BARRIER VFIN)(-1 V) (1 CLB) ; # ??

SELECT (Nom) IF (-2 N-NOM) (-1 CC) (NOT 1 Gen); # Trond ja Kirsti leat ...
SELECT (Nom) IF (-1 PROP) (0 PROP) (1 V-SG3); # Biret Anne galgá...
SELECT (Nom) IF (-1 Gen)(0 N-SG-NOM)(1 V-SG3);
# HMM, brave..
# Note that the tag is selected, the set is in the condition.

SELECT (Nom) IF (-2 (Nom Cmpnd)) (-1 CC);
SELECT (Gen) IF (-2 (Gen Cmpnd)) (-1 CC);
SELECT (Acc) IF (-2 (Acc Cmpnd)) (-1 CC);

# LocPl or ComSg
# ==============

SELECT (Com) IF (0 Prop);

# Disambiguating verbs
# ====================

# leat disambiguation
# -------------------

SELECT (ConNeg) IF (0 LEAT) (-1 Neg);
SELECT (ConNeg) IF (0 LEAT) (-2 Neg) (-1 Pcle);
REMOVE (ConNeg) IF (0 LEAT) (NOT *-1 Neg);

# Need more advanced rule to select ConNeg when more
# material between neg and conneg
# SELECT (ConNeg IF (0 LEAT) (*-1 Neg);

SELECT (Prs) IF (0 LEAT) (NOT *-1 VFIN); # one strange hit, revise!
SELECT (Sg2) IF (0 LEAT) (-1 PRON-SG2-NOM); # no hits

# leai disambiguation
# -------------------
SELECT (Prt) IF (0 LEAI)(-1 N-SG); # Introduced 0 LEAI

# lean disambiguation
# -------------------

SELECT (Sg1) IF (0 LEAN) (1 PrfPrc);
SELECT (PrfPrc) IF (0 LEAN) (-1 Neg);


# Du1 or Pl3
# ----------

# this is a huge set. it should be collapsed.

SELECT (Du1) IF (-1 PRON-DU1-NOM); # moai jerre # no hits
SELECT (Du1) IF (1 Pcle) (2 PRON-DU1-NOM); # jerre go moai # no hits

SELECT (Pl3) IF (-1 PRON-PL3-NOM); # sii jerre
SELECT (Pl3) IF (-1C N-PL-NOM); # Nieiddat jerre
SELECT (Pl3) IF (-3 N-NOM)(-2 CC)(-1 N-NOM); # Nieida ja gánda jerre

SELECT (Pl3) IF (1 Pcle) (2 PRON-PL3-NOM); # jerre go sii
SELECT (Pl3) IF (1 Pcle) (2C N-PL-NOM); # Nieiddat jerre
SELECT (Pl3) IF (1 Pcle) (2 N-NOM) (3 CC) (4 N-NOM);
                                        # Jerre go nieida ja gánda?

SELECT (Pl3) IF (0 Clt) (1 PRON-PL3-NOM); # Jerrego sii 
SELECT (Pl3) IF (0 Clt) (1C N-PL-NOM); # Jerrego nieiddat
SELECT (Pl3) IF (0 Clt) (1 N-NOM) (2 CC) (3 N-NOM); 
                                        # Jerrego nieida ja gánda?

SELECT (Pl3) IF (-1 Adv) (1 PRON-PL3-NOM); # Nu jerre sii
SELECT (Pl3) IF (-1 Adv) (1C N-PL-NOM); # Nu jerre nieiddat
SELECT (Pl3) IF (-1 Adv) (1 N-NOM)(2 CC)(3 N-NOM);
					# Nu jerre ieida ja gánda

# Number phrases as subjects
# --------------------------
SELECT (Pl3) IF (-2 Num) (-1 N-GEN) ; # Golbma nieidda leat boahtán.
SELECT (Pl3) IF (-1 Adv) (1 Num); # Nu jerre golbma nieidda

# Inf or Pl1 or Pl3 or Prt Du2
# ----------------------------

SELECT (Pl1) IF (-1 MII-PERS);
#SELECT (Pl3) IF (-1 SII); # no hits, cf. 3rd rule of prev section
SELECT (Pl3) IF (-1 (Pron Interr Pl Nom)) (-2 COMMA) (-3 N-PL);
             #olbmot, geat fállet (too specific?)

REMOVE (Inf) IF (-2 CLB) (-1 CS); # dus1s1e, juos leat doarvái...
REMOVE (Inf) IF (-1 Inf ) ; # 1 hit
#SELECT (Inf) IF (*-1 VFIN BARRIER MII-PERS OR SII)(NOT 0 LEAT);#23000 hits
SELECT (Inf) IF (*-1 VFIN BARRIER MII-PERS OR SII OR CS OR CLB OR (<s>));
SELECT (Sg1) IF (-1 Sg1) ;




# VGen or Sg2 or ConNeg 
# ---------------------

SELECT (ConNeg) IF (*-1 Neg BARRIER CLB OR VFIN) ;
#SELECT (ConNeg) IF (-1 Pcle)(-2 Neg) ; # hmm
REMOVE (ConNeg) IF (NOT *-1 Neg BARRIER CLB OR VFIN); # 20000 hits

SELECT (Imprt) IF (-1 Neg + Imprt) ; # 2 hits
REMOVE (Imprt) IF (*-1 (Neg Ind) BARRIER CLB OR VFIN)(0 ConNeg);
REMOVE (Prs) IF (*-1 (Neg Imprt) BARRIER CLB OR VFIN)(0 ConNeg);

SELECT (Prs) IF (-1 Neg + Prs) ; # no hits

# Sg1 or PrfPrc
# -------------

SELECT (PrfPrc) IF (-1 VFIN ) ;

SELECT (PrfPrc) IF (-1 Neg) ;
SELECT (PrfPrc) IF (-1 Pcle)(-2 Neg) ;

SELECT (Imprt) IF (0 ConNeg) (-1 Neg + Imprt);
#SELECT (Imprt) IF (0 ConNeg) (-1 Neg + Imprt); # feil tag i lexc!
                                                

# Disambiguating adjectives
# =========================



# Attribute disambiguation
# ------------------------

SELECT (Attr) IF (1 N) ; # 22000
REMOVE (Attr) IF (NOT 1 N ) ; # 11000


# Disambiguating adverbs
# ======================
SELECT (Adv) IF (-1C VFIN) (NOT 0 A-ATTR);
SELECT (Adv) IF (-1C VFIN) (0 A-ATTR)(NOT 1 N);

# Disambiguating demonstratives
# =============================

SELECT DEM-SG IF (1 V-SG3); # no hits
# Need a way of stating ".. and I am a the beginning of the sentence"


# Disambiguating pronouns
# =======================

SELECT (Interr) IF (0 MII-INTERR) (-1 COMMA) (1 Sg3) ;
SELECT (Pers) IF (0 MII-PERS) (1 V-PL1) ;

SELECT (Gen) IF (0 Interr) (-1 COMMA) (1 N + Nom) ; # no hits

SELECT (Pron) IF (0 PRON-PL-LOC) (1 V-SG3) (*2 N BARRIER VFIN);

# Disambiguating subjunctions
# ===========================

SELECT (CS) IF (-1 CLB); # this one too general, there must be separate
                         # rules for different groups of CS.

# other words
# ===========

#"<go>" SELECT (CS) IF (-1 COMMA) ;

SELECT Don-PRON IF (*1 V-SG2);



# =====================
# Global disambiguation
# =====================


CONSTRAINTS

REMOVE (Sg) IF (0 DEM-SG) (NOT *1 V-SG3);
REMOVE (Pl) IF (0 DEM-PL) (NOT *1 V-PL3);


# At least one finite verb in the sentence
# The rule scans to the left until it finds a finite verb
SELECT VFIN IF (NOT *-1 VFIN)(NOT *1 VFIN); # no hits

# Stop at guhto to the left and comma to the right.
SELECT VFIN IF (NOT *-1 VFIN BARRIER COMP)(NOT *1 VFIN BARRIER CLB);
# This does not work... # no hits



END
nb
rádjái som postpos, slik som rájes.


Problem:

ektui
bör desse to vere unifisert på ein måte?

prepros
mu mielas

Notes:

SELECT (Nom) IF "no other nom in clause AND VFIN in clause"


Problem:
Nu leat nappo oktibuot njealljenuppelohkái sohkabuolvva Abrahama rájes Dávveda rádjái.
