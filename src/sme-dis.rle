# ========================================================================== #
# ========================================================================== #
#            N O R T H E R N   S Á M I   D I S A M B I G U A T O R           #
# ========================================================================== #
# ========================================================================== #

# Sámi language technology project, University of Tromsø

 

DELIMITERS = "<.>" "<!>" "<?>" ;


# ============= #
# Tags and sets #
# ============= #


SETS # (Remove all lines that start with SETS if you want to use mdis.)

# I define end of clause and beginning of clause in a way so that the file
# may be read both by the CG-2 and the vislcg formalisms.

LIST BOS = (>>>) (<s>); LIST EOS = (<<<) (</s>); # vislcg and CG-2 together.
#LIST BOS = (>>>); LIST EOS = (<<<); # end and beg. of sentence. for vislcg.


# Tags declared as single-membered LISTs
# ======================================

# Parts of speech

LIST N = N ; LIST A = A ; LIST Adv = Adv ; LIST V = V ; LIST Pron = Pron ;
LIST CS = CS ; LIST CC = CC ; LIST Adp = Adp ; LIST Po = Po ; LIST Pr = Pr ;
LIST Pcle = Pcle ; LIST Num = Num ; LIST Prop = Prop ;


# POS sub-categories

LIST Pers = Pers ; LIST Dem = Dem ; LIST Interr = Interr ;
LIST Recipr = Recipr ;      # LIST Rel = Rel ; LIST Refl = Refl ;
LIST Interj = Interj ;      #LIST Indef = Indef ;


# Morphosyntactic properties

#LIST Ess = Ess ;
LIST Sg = Sg ; LIST Pl = Pl ;
LIST Nom = Nom ; LIST Acc = Acc ;
#LIST Ill = Ill ;
LIST Loc = Loc ; LIST Com = Com ;
LIST Gen = Gen ;

#LIST Cmpnd = Cmpnd ;

#LIST PxSg1 = PxSg1 ; LIST PxSg2 = PxSg2 ; LIST PxSg3 = PxSg3 ; LIST
#PxDu1 = PxDu1 ; LIST PxDu2 = PxDu2 ; LIST PxDu3 = PxDu3 ; LIST PxPl1 =
#PxPl1 ; LIST PxPl2 = PxPl2 ; LIST PxPl3 = PxPl3 ;

LIST Comp = Comp ; LIST Superl = Superl ;

LIST Attr = Attr ; LIST Clt = Clt ; #LIST Card = Card ;

LIST Pass = Pass ;
LIST Prt = Prt; #LIST Prs = Prs ; 

#LIST Ind = Ind ; LIST Pot = Pot ; LIST Cond = Cond ;
LIST Imprt = Imprt ;

LIST Sg1 = Sg1 ;  LIST Sg2 = Sg2 ; LIST Sg3 = Sg3 ;
LIST Du1 = Du1 ;  # LIST Du2 = Du2 ; LIST Du3 = Du3 ;  # Not using the ones that
LIST Pl1 = Pl1 ;  LIST Pl3 = Pl3 ; #LIST Pl2 = Pl2 ;   # do not have hom. forms

LIST Inf = Inf ; LIST ConNeg = ConNeg ; LIST Neg = Neg ;
LIST PrfPrc = PrfPrc ; LIST VGen = VGen ;

LIST Act = Act ;
#LIST Ger = Ger ; LIST ImprtII = ImprtII ;
#LIST PrsPrc = PrsPrc ; LIST Sup = Sup ; 
#LIST VAbess = VAbess ; LIST Actio = Actio ; LIST Actor = Actor ;

LIST ABBR = ABBR ; LIST CLB = CLB ;

#LIST PUNCT = PUNCT ;

# Derivational tags

#LIST adda = adda ; LIST alla = alla ; LIST d = d ; LIST eaddji = eaddji ;
#LIST eamos1 = eamos1 ; LIST eapmi = eapmi ; LIST g = g ;
#LIST geahtes = geahtes ; LIST h = h ; LIST asti = asti ; LIST heapmi = heapmi ;
#LIST hudda = hudda ; LIST huhtti = huhtti ; LIST huvva = huvva ; LIST j = j ;
#LIST l = l ; LIST las1 = las1 ; LIST ahtti = ahtti ; LIST s1 = s1 ;
#LIST meahttun = meahttun ; LIST mus1 = mus1 ; LIST st = st ;
#LIST stuvva = stuvva ; LIST us = us ; LIST vuohta = vuohta ;
#LIST goahti = goahti ; LIST lágan = lágan ; LIST Dimin = Dimin ;

#LIST mii = ("mii") ; LIST leai = ("leai") ;

LIST OKTA = "okta"; LIST go = ("go") ; 
# These single-word sets do not work, BUT THEY SHOULD!
# Try again, they are changed now, and refer to inflected form, not to lexeme.

LIST COMMA = "<,>" ;
SET MANGA = ("mán1ga")|("galle") ;





# Tag sets
# ========

SETS

LIST WORD = N A Adv V Pron CS CC Adp Po Pr Interj Pcle Num ; # any word


# Derivational affixes
# --------------------

LIST V-DER = adda alla d g h asti hudda huhtti huvva j l ahtti st
              stuvva goahti ;
LIST N-DER = eaddji eamos1 eapmi heapmi s1 mus1 us vuohta ;
LIST A-DER = geahtes lágan las1 meahttun ;

#SET DER = V-DER | N-DER | A-DER ;


# Case sets
# ---------

LIST ADVLCASE = Ill Loc Com Ess ;


# Noun sets
# ---------

LIST N-SG-NOM = (N Sg Nom); LIST N-PL-NOM = (N Pl Nom);
LIST N-NOM = (N Nom) ; LIST N-GEN = (N Gen);

SET LEX-N = N - N-DER;

LIST PROP = (N Prop);
SET CNOUN = N - Prop;

# Verb sets
# ---------

LIST V-IND-FIN = (Prs) (Prt) ;
LIST VFIN = (Ind) (Pot) (Imprt) (ImprtII) (Cond) ;
LIST VFIN-NOT-IMP = (Ind) (Pot) (Cond) ;

LIST V-SG1 = (V  Ind Prs Sg1) (V Ind Prt Sg1) (V Cond Prs Sg1) 
             (V Cond Prt Sg1) (V Pot Prs Sg1) (V  Neg Ind Sg1); 
LIST V-SG2 = (V  Ind Prs Sg2) (V Ind Prt Sg2) (V Cond Prs Sg2) 
             (V Cond Prt Sg2) (V Pot Prs Sg2) (V  Neg Ind Sg2); 
LIST V-SG3 = (V  Ind Prs Sg3) (V Ind Prt Sg3) (V Cond Prs Sg3) 
             (V Cond Prt Sg3) (V Pot Prs Sg3) (V  Neg Ind Sg3); 
LIST V-DU1 = (V  Ind Prs Du1) (V Ind Prt Du1) (V Cond Prs Du1) 
	     (V Cond Prt Du1) (V Pot Prs Du1) (V  Neg Ind Du1); 
LIST V-DU2 = (V  Ind Prs Du2) (V Ind Prt Du2) (V Cond Prs Du2) 
	     (V Cond Prt Du2) (V Pot Prs Du2) (V  Neg Ind Du2); 
LIST V-DU3 = (V  Ind Prs Du3) (V Ind Prt Du3) (V Cond Prs Du3) 
	     (V Cond Prt Du3) (V Pot Prs Du3) (V  Neg Ind Du3); 
LIST V-PL1 = (V  Ind Prs Pl1) (V Ind Prt Pl1) (V Cond Prs Pl1) 
             (V Cond Prt Pl1) (V Pot Prs Pl1) (V  Neg Ind Pl1); 
LIST V-PL2 = (V  Ind Prs Pl2) (V Ind Prt Pl2) (V Cond Prs Pl2) 
             (V Cond Prt Pl2) (V Pot Prs Pl2) (V  Neg Ind Pl2); 
LIST V-PL3 = (V  Ind Prs Pl3) (V Ind Prt Pl3) (V Cond Prs Pl3) 
             (V Cond Prt Pl3) (V Pot Prs Pl3) (V  Neg Ind Pl3); 


SET V-NOT-SG3 = V-SG1 | V-SG2 | V-DU1 | V-DU2 | V-DU3 |
                V-PL1 | V-PL2 | V-PL3 ;

SET V-1-2 = V-SG1 | V-SG2 | V-DU1 | V-DU2 | V-PL1 | V-PL2 ;

SET V-NOT-SG1 = VFIN-NOT-IMP - V-SG1 ;

SET LEAN = ("leat" V Ind Prs Sg1)|("leat" V PrfPrc);
SET LEAI = ("leat" V Ind Prt Sg3)|("leat" V Imprt Prs Sg3);
SET LEAT = ("leat" V Ind Prs Pl1)|("leat" V Ind Prs Pl3)|
           ("leat" V Ind Prs Sg2)|("leat" V Inf)|
           ("leat" V Ind Prs ConNeg);
#SET LIVCCE = ("leat" V Cond Prs Sg3)|("leat" V Cond Prs Pl3)|
#             ("leat" V Cond Prs ConNeg);

LIST LEAT-COP = ("leat" V );

LIST COPULAS = ("leat") ("s1addat") ;

LIST LEAT-FIN-NON-IMP = ("leat" V Ind) ("leat" V Imp) ("leat" V Cond)
                        ("leat" V Pot); # Check!

SET VERB = V - (V N);   # V is all readings with a V tag in them, VERB should
                        # be the ones withoud an N tag following the V

#SET V-IND-FIN-NON-COP =  V-IND-FIN - LEAT-COP  ;

SET V-NON-COP = V - LEAT-COP ;        # SET V-NON-COP = VERB - LEAT-COP ;
SET LEX-V = VERB - V-DER;             # VERB but not V-DER

SET V-DER-PASS = V + V-DER + (Pass);   # + is intersection, this should work
SET V-PASS = V + (Pass) - V-DER;       # hmm



# Pronoun sets
# ------------
SETS

 SET MUN = (Pron Pers Sg1 Nom);
 SET DON = (Pron Pers Sg2 Nom);
 SET SON = (Pron Pers Sg3 Nom);
 SET MOAI = (Pron Pers Du1 Nom);
#SET DOAI = (Pron Pers Du2 Nom);
#SET SOAI = (Pron Pers Du3 Nom);
 SET MII-PERS = (Pron Pers Pl1 Nom);
#SET DII = (Pron Pers Pl2 Nom);
 SET SII = (Pron Pers Pl3 Nom);

#SET PRON-PL-LOC = (Pron Pers Pl1 Loc)|(Pron Pers Pl2 Loc)|(Pron Pers Pl3 Loc);

#SET MII-INTERR = ("mii" Pron Interr Sg Nom);




SET DEM-SG = (Pron Dem Sg Nom);
SET DEM-PL = (Pron Dem Pl Nom);



# Adjective sets
# --------------

#SET A-ADV = ( A Adv ) ;
SET A-ATTR = ( A Attr) ;

SET LEX-A = A - A-DER ;



# Sets for adverbials
# -------------------

LIST IKTE = "ikte" "dolin" "dovle" ;



# Sets for closed classes
# -----------------------
#SET PPOS = Adp | Po | Pr ;

LIST POST-A = "rájes" ;
LIST POST-B = "rádjái" ;

#LIST WACKERNAGEL = "go" "ge" ;



# Sets of specific words
# ----------------------

LIST MANNU = "od1d1a/jage/mánnu" "od1d1a/jagi/mánnu" 
             "guovva/mánnu" 
             "njukc1a/mánnu" "njuvc1c1a/mánnu" "márs/mánnu" 
             "cuon1o/mánnu" "cuon1os/mánnu" "gáranas/mánnu" 
             "miesse/mánnu" "mái/mánnu" 
             "geasse/mánnu" 
             "suoidne/mánnu" 
             "borge/mánnu" "s1njilc1a/mánnu" "s1njilz1a/mánnu" 
             "c1akc1a/mánnu" 
             "golggot/mánnu" 
             "skábma/mánnu" "november/mánnu" "ritne/mánnu" 
             "juovla/mánnu" ;

LIST INITIAL =  "a" "b" "c" "d" "e" "f" "g" "h" "i" "j" "k" "l" "m"
                "n" "o" "p" "q" "r" "s" "t" "u" "v" "w" "x" "y" "z"
                "á" "æ" "ø" "å" "ö" "ä" ;

# Miscellanious sets
# ------------------

SET NUMERALS = Num - OKTA ;
#SET COMP = (Pron Interr);


# Syntactic sets
# --------------

SETS

LIST NP-HEAD = Pron N ;
SET NP-HEAD-SG = (Pron Sg) | (N Sg);
SET NP-HEAD-PL = (Pron Pl) | (N Pl);
SET NP-HEAD-SG-NOM = (Pron Sg Nom) | (N Sg Nom);
SET NP-HEAD-PL-NOM = (Pron Pl Nom) | (N Pl Nom);

SET PRE-NP-HEAD = (Prop Attr) | A | (Pron Pers Gen) | (N Gen) |
                  (Pron Dem)  | (Pron Refl Gen) | CC ;

SET NPNH = WORD - PRE-NP-HEAD ; 

SET NON-ADV = WORD - Adv;

SET NON-ADV-PCLE = WORD - Adv - Pcle ;

SET NON-A   = WORD - A ;

SET NON-NP = VFIN | Adv | Pcle | Interj | CS | CC ;

SET NP-BORDER = EOS | CLB | Adv | V | Pers | CS | Recipr | Dem | Po | Pr | Adp ;
   # too risky to use CLB, need more sophisticated way.
   # this allows for NP-internal commas to break NP.






# ==================== #
# ==================== #
# Disambiguation rules #
# ==================== #
# ==================== #

# ===================================
# One-cohort disambiguation - cycle 0
# ===================================

CONSTRAINTS


# Proper nouns
# ------------

REMOVE (Prop Pl) IF (0 (Prop Sg)); # Marit N Sg, not Mari+t Nom Pl


# Removing propernouns that are lookalikes
# ----------------------------------------

REMOVE ("Lea") IF (-1 BOS)(NOT 1 V-SG3); ## Lea dus1s1e okta Ipmil. Lea idja.


# Lexicalised adverbs
# -------------------
REMOVE (A Adv) IF (0 (Adv - A )) ;#REMOVE A-ADV IF ( 0 Adv ) ;


# Lexicalised derivations
# -----------------------

REMOVE N-DER IF (0 LEX-N); # SELECT instead of REMOVE if one wants to
REMOVE A-DER IF (0 LEX-A); # investigate word structure
REMOVE V-DER IF (0 LEX-V); # THIS IS PROBABLY TOO STRONG, MSC may differ

REMOVE V-DER-PASS IF (0 V-PASS);
# It might be that this one is no longer needed.


# Lexicalised p-positions
# -----------------------

REMOVE N IF (0 Pr OR Adp)(*1 (N Gen) OR (Pron Pers Gen) BARRIER NPNH);
REMOVE N IF (0 Po OR Adp)(-1 (N Gen) OR (Pron Pers Gen)); # dan várás, dan áigi



# ====================================
# Local disambiguation - cycles 1 and 2
# ====================================

# ---------------------------------------------------------
# Cycle 1a: cases that will be needed in careful mode later
# ---------------------------------------------------------

# The idea with cycle 1a is to disambiguate cases that are judged as easier and
# more secure than later cases, and that at the same may be used as context
# for other rules in later cycles.

CONSTRAINTS




# Personal pronouns
# =================

SELECT Pers IF (*-1 V-SG3)(0 (Pron Pers Sg3 Nom)); # leago son? (not Pcle)
SELECT Pers IF (*1 V-SG3)(0 (Pron Pers Sg3 Nom));  # de son lea.(not Pcle)

SELECT Pers IF (*-1 V-SG2)(0 (Pron Pers Sg2 Nom)); # leatgo don  (not dem)
SELECT Pers IF (*1 V-SG2)(0 (Pron Pers Sg2 Nom));  # de don leat (not dem)



# Px constraints
# ==============

# First select some clear Px cases
# Let these come directly after local disamb


SELECT (PxSg1) IF (-1 V-SG1)(NOT -1 ("leat"))(-2 MUN);
SELECT (PxSg2) IF (-1 V-SG2)(NOT -1 ("leat"))(-2 DON);
SELECT (PxSg3) IF (-1 V-SG3)(NOT -1 ("leat"))(-2 SON);



# Certain verb forms
# ==================


# Pret Sg2
# --------

SELECT (V Ind Pret Sg2) IF (*-1 (Pron Pers Sg2 Nom));




# ----------------------------------------------------------------
# Cycle 1b: removing the readings that were left from the 1a rules
# ----------------------------------------------------------------

CONSTRAINTS

# Removing all remaining Px
REMOVE (PxSg1) ; # IF (0 Ess); # yes, kill'em all
REMOVE (PxSg2) ; # IF (0 Pl);
REMOVE (PxSg3) ; # IF (0 Loc);
# Note: Perhaps rather allow Px only for some key nouns (mother, father, etc).

# Removing remaining Prt Sg2 (philosophy: these are not pro-drop)
REMOVE (V Ind Prt Sg2) IF (NOT -1 BOS) (NOT 0 (Clt));
# Proseassas láhc1c1ojuvvojit dilálas1vuod1at nu, ahte 
# fertejitgo dahkat dan?




# --------------------------------------------
# Cycle 2: Other cases of local disambiguation
# --------------------------------------------

CONSTRAINTS

# This is the main part of the local disambiguation.
# Here we go through the grammar in a systematic way.
# Cases that should be handled before or after the main disambiguation, will be
# taken care of in cycoes before or after this one.



# Disambiguating nouns
# ====================



# Proper nouns
# ============

SELECT Prop IF (NOT -1 BOS);
# Capitalised nouns in the middle of a sentence are names.

REMOVE Attr IF (0 Prop)(NOT 1 Prop OR INITIAL);   ## Trond Trosterud lea dál.

# Note:  the rule for selecting attribute reading of surnames is given
#        in the section on adjectives.

SELECT Attr IF (0 Prop)(1 INITIAL)(2 Prop);   ## Mathis K. Sara.


# Noun or not?
# ============

SELECT N IF (-1C (A Attr));                     ## c1uovvovas1 sajis

SELECT N IF (-2C N) (-1 CC) (NOT 1 N OR A);     ## Mánát ja nuorat leat...

SELECT N IF (1 COMMA)(2 (Pron Interr));         ## Doaimmat, maiguin...
                                                 # too specific!

SELECT N IF (-2 BOS)(-1C Gen)(1 EOS);           ## Ruot1a c1álli. #(titles)

REMOVE A IF (-1 Dem)(1 (Pron Interr));     ## .. dan sápmelas1 gean ..

REMOVE V IF (1 Po);                             ## sápmelac1c1aid birra.
                                                #  problem with derived V > N

REMOVE V IF (-1 Dem)(1 V-IND-FIN);          ## Dán báhkis s1addá c1áppa gohppu.

REMOVE VFIN IF (-1 BOS)(0 NP-HEAD-SG-NOM)(1C V-SG3);## Lásse lea mus rean1gan.

REMOVE Adv IF (1 Po); 





# Case disambiguation
# ===================


# Gen
# ===

# Genitive as complement
# ----------------------

# Genitive in front of postposition
SELECT Gen IF (1 Po) ;    ## nieidda vuod1ul, nieidda birra
  # As it stands, this rule ahs no conditions. So, what errors will we get?

# Genitive after preposition
SELECT Gen IF (-1 Pr); # Earret mu ii giige lea boahtán.

# Genitive in front of adposition
SELECT Gen IF (1 Adp)(NOT *2 Gen BARRIER NPNH);

# Genitive after adposition
SELECT Gen IF (NOT -2 Gen)(-1 Adp); 

# Genitive after quantifier
SELECT Gen IF (-1 NUMERALS OR MANGA); #Golbma nieidda, mán1ga nieidda

# Genitive as specifier
# ---------------------

# Genitive in front of noum in the beginning of a sentence
#SELECT Gen IF (-1 CLB)(*1 N BARRIER NON-A LINK 1 VFIN);      # äh
#SELECT Gen IF (-1 BOS)(*1 N BARRIER NON-A LINK 1 VFIN);      # safest
SELECT Gen IF (-1 NP-BORDER)(*1 N BARRIER NON-A LINK 1 VFIN); # hmm
  ## Nieidda girji lea ruoksat
  ## Din viessu s1attai oppa stuoris.

REMOVE Gen IF (-1 CLB)(1 (Pron Pers))(*1 VFIN); ## , du mun lean oaidnán
REMOVE Gen IF (-1 BOS)(1 (Pron Pers))(*1 VFIN); ## Du mun lean oaidnán

# Genitive inside a two-part Po
SELECT Gen IF (-1 POST-A)(1 N)(2 POST-B);
## Nu leat 40 buolvva Dávveda rájes Babylonia fán1gavuod1a rádjái.

#REMOVE Acc IF (-1 BOS)(1 (N Gen) OR (Attr) OR PPOS) ; # Mu birra don humat.
# This should be covered by the others... Check.

# Genitive in front of the final word in the sentence
SELECT Gen IF (0C CNOUN )(1C N)(2 CLB); # Oainnán nieidda biilla.
SELECT Gen IF (0C (Pron Pers))(1C N)(2 CLB); # Oainnán su biilla.
SELECT Gen IF (0C (N Prop) )(1C CNOUN)(2 CLB); # Oainnán Uria biilla.
# Unify these? Look at the effect of each and one of them.

# Genitive in time expressions
#SELECT Gen IF (0 MANNU)(1 (Num Ord));       ## Miessemánu 1. beaivvi.
SELECT Gen IF (0 ("miesse\/mánnu"))(1 (Num Ord));     ## Miessemánu 1. beaivvi.

# Genitive sequences
SELECT Gen IF (NOT -1 V)(0C N)(1C CNOUN) (NOT 2 Po); ##Áhc1i viesu uksa lea alit.
  # This is a bad rule. I need more constraints on the noun in pos 1.

# CONSTRAINTS # trying to sequentiate the gen and acc rules
# perhaps not needed.

# Acc
# ===


# Accusative between Aux and main verb
# ------------------------------------

# In front of an infinitive
SELECT Acc IF (*-1 V-IND-FIN BARRIER NPNH)(1 Inf);
                          ## Od1astus addá vejolasvuod1a muitalit.

SELECT Acc IF (*-1 V-IND-FIN BARRIER NPNH)(1 CC)
              ( *2 NP-HEAD   BARRIER NPNH LINK 1 Inf);
SELECT Acc IF (*-1 CC BARRIER NPNH LINK -1 NP-HEAD LINK 
              *-1 V-IND-FIN BARRIER NPNH)(1 Inf);

# In front of a participle
SELECT Acc IF (-1 LEAT-FIN-NON-IMP) (1 PrfPrc); ## Mun lean dan dahkan.


# Accusative at the end of the sentence
# -------------------------------------

# Object only.
SELECT Acc IF (*-1 V-NON-COP BARRIER NPNH OR Adv)(1 CLB); ## Oainnán du.

# Coordinated object
  # First part
SELECT Acc IF (*-1 V-NON-COP BARRIER NPNH OR Adv)(1 CC)
              ( *2 NP-HEAD   BARRIER NPNH OR Adv LINK 1 CLB);
                                       ## Oainnán vilges biilla ja rukses viesu.
  # Second part
SELECT Acc IF (*-1 CC BARRIER NPNH LINK -1 NP-HEAD LINK 
              *-1 V-NON-COP BARRIER NPNH OR Adv)(1 CLB);
                                       ## Oainnán vilges biilla ja rukses viesu.


# title!
SELECT Acc IF (*-2 V-NON-COP BARRIER NPNH OR Adv OR ADVLCASE)
              (0 N OR Pron)(1 NP-BORDER)(NOT 1 Po OR Adp);

REMOVE Acc IF (NOT *-1 V-NON-COP )(NOT *1 V-NON-COP ); #Need a verb for an obj.

REMOVE Gen IF (-1 VFIN)(0 N)(1 CLB); ## Joramii riegádii Ussia, Ussiai riegadii
# The rule is too specific.          ## Jotam.


# Nom
# ===

# Nominative in titles and sentence fragments
# - - - - - - - - - - - - - - - - - - - - - -

# A single word is nominative
SELECT Nom IF (-1 BOS)(0 N OR A OR Pron)(1 EOS); # Katja.

# An NP head with a genitive modifier is nominative
SELECT Nom IF (-2 BOS)(-1 Gen)(0C N)(1 EOS); # .

# Nominative subjects
# - - - - - - - - - -

# Find the subject, and assume it is nominative
SELECT Nom IF (-1 CS)(0 Sg)(1C V-SG3); ## ahte plána movttiidahttá...
SELECT Nom IF (-1 CS)(0 Pl)(1C V-PL3); # ... and in pl..

SELECT Nom IF (-1 BOS)(0 Prop)(1 COMMA); ## Biera, du sabehiid!

REMOVE Nom IF (-1 BOS)(NOT 0 (Pron Pers))(1C V-1-2);
## Dan oainnán viesu duohkin.  ## Moai c1ilge dan ás1s1i dutnje.


# Nominative predicatives
# - - - - - - - - - - - -

  # Here, we handle both nouns and adjectives.

# Case disambiguation of predicatives
# -----------------------------------


SELECT Nom IF (*-1 ("leat" V Sg1) BARRIER NPNH OR PrfPrc
           LINK *-1 MUN BARRIER NON-ADV-PCLE);
SELECT Nom IF (*-1 ("leat" V Sg2) BARRIER NPNH OR PrfPrc
           LINK *-1 DON BARRIER NON-ADV-PCLE);
                                      ## Mun lean Anna. Don leat Anna.

SELECT (Sg Nom) IF (*-1 ("leat" V Sg3) BARRIER NPNH
                LINK *-1 (Sg Nom) BARRIER NON-ADV-PCLE);
                                      ## Tor lea od1d1a oahpaheaddji.

SELECT (Pl Nom) IF (*-1 ("leat" V Pl3) BARRIER NPNH
                LINK *-1 (Pl Nom) BARRIER NON-ADV-PCLE);

SELECT Nom IF (-2 Nom)(-1 COPULAS)(0 A)(1 EOS);
                                      ## Biilla ivdni lea vielgat.

SELECT Nom IF (-2 Nom)(-1 COPULAS)(0 A)(1 CC)(2 A);
                                      ## Viessu lea vielgat ja ruksat.

SELECT Nom IF (-4 Nom)(-3 COPULAS)(-2 A)(-1 CC)(0 A)(1 EOS);
                                      ## Viessu lea vielgat ja ruksat


SELECT Nom IF (-3 BOS)(-2 Nom)(-1 ("leat"))(1 EOS);
                                           ## Mun lean Bond.
                                           ## Mun lean gánda.


SELECT Nom IF (-2 NP-HEAD-SG-NOM)(-1 ("leat" V Sg3));


SELECT Nom  IF (-4 BOS)(-3 Nom)(-2 ("leat"))(-1 Prop OR (ABBR))(1 NP-BORDER);

SELECT Nom  IF (*-5 BOS BARRIER NPNH)(-4 Nom)(-3 ("leat"))
                (-2 Prop OR (ABBR))(-1 Prop)(0 Prop)(1 NP-BORDER);

SELECT Nom  IF (*-6 BOS BARRIER NPNH)(-5 Nom)(-4 ("leat"))
                (-3 Prop OR (ABBR))(-2 Prop)(-1 Prop)(0 Prop)(1 NP-BORDER);

                                            ## Mun lean James Bond.
                                            ## Mun in leat James Bond.
                                            ## Mu namma lea Jo Ann Ba Doe.

# Again, these rules are too specific. Need empirical data to enlarge them.
# What is needed is linking both to copula and to clause border.

SELECT Nom IF (-2 NP-HEAD-SG-NOM)(-1 COPULAS + (V Sg))(1 EOS);
                                            ## Tor lea oahpaheaddji.




# Nominative as objects in existential clauses
# --------------------------------------------
REMOVE Acc IF (-2 Loc)(-1 ("leat"))(NOT *1 V); # Mus lea golli.
SELECT Nom IF (-2 Loc)(-1 ("leat"))(1 EOS); # Mus lea golli.

# Unclassified
# - - - - - -

SELECT Nom IF (-1 Gen)(0 N-SG-NOM)(1 V-SG3);
# HMM, brave..
# Note that the tag is selected, the set is in the condition.

SELECT (N Sg Nom) IF (-1 BOS)(1C V-SG3); ## Moras1 s1attai illun.

# Nominative if two names in a row
SELECT Nom IF (-1 PROP) (0 PROP) (1 V-SG3); # Biret Anne galgá...


# Rules for disambiguation around conjunctions, in coordination
# -------------------------------------------------------------

SELECT Nom IF (-2C N-NOM)(-1 CC)(NOT 1 Gen OR (Prop Attr));
 ## Trond ja Kirsti leat dál. Bror Berg ja Per Mikael Utsi leat ruovttus.
SELECT Nom IF (1 CC)(2C N-NOM); # Kirsti  ja Trond leat ...

REMOVE Gen IF (0 N)(1 CC)(2 (Pron Sg3 Gen)); ## Jos1iai riegádii
# Peters and Pauls friend OK.                ## Jekonja ja su vieljat.

SELECT Nom IF (-2 (Nom Cmpnd)) (-1 CC);
SELECT Gen IF (-2 (Gen Cmpnd)) (-1 CC);
SELECT Acc IF (-2 (Acc Cmpnd)) (-1 CC);


# Locative singular
# =================

SELECT Loc IF (-1 BOS)(1 ("leat")); ## Ádjásgo lea od1d1a fanas.
# This rule is all too general, it must be sharpened in some way.

SELECT Loc IF (-2 BOS)(-1 ("leat" Clt)); ## Leago mus rud1aid?
# hmm...

# Comitative singular
# ===================

SELECT Com IF (0 Prop); # assuming proper names come in sg

SELECT Com IF (-1 (Dem Sg Com));         # dainna biillain
SELECT Com IF (-2 (Dem Sg Com))(-1 Adv); # dainna biillain


# Locative plural
# ===============

SELECT Loc IF (-1 (Dem Pl Loc));         # dain biillain
SELECT Loc IF (-2 (Dem Pl Loc))(-1 Adv); # dain biillain
# Not too elegant, the rule set might be done more general with a barrier

SELECT (Pl Loc) IF (*-1 CC LINK *-1 (Sg Loc) BARRIER NPNH);
  ## Son lea skuvllas ja od1d1a mediain.
SELECT (Pl Loc) IF (1 CC)(*2 (Sg Loc) BARRIER NPNH);
  ## Son lea od1d1a mediain ja skuvllas.


SELECT Loc IF (1 ("gos"));           # guovlluin gos sámit ásset
SELECT Loc IF (1 COMMA)(2 ("gos"));  # guovlluin, gos sámit ásset





# make this one more general
# Disambiguating verbs
# ====================

CONSTRAINTS


# Finite forms
# ============

# Indicative Negative
# -------------------
  # Unique are Sg1, Sg3, Du1, Du2, Du3, Pl1, Pl2, Pl3
  # hom: "it", where Sg2 = ABBR.

# Select Neg Sg2 instead of ABBR
REMOVE ABBR IF (*-1 ConNeg)(0 Neg); # Dat don deat it. # Ah, bad WO 
REMOVE ABBR IF (0 Neg)(*1 ConNeg);  # Don it leat dál.

# Indicative Present
# ------------------

# Sg1
# ---
  # Sg1 = PtcPrf (copula)
  # Sg1 = V Act (even)

SELECT Sg1 IF (0 LEAN) (1 PrfPrc); # Mun lean boahtán.
SELECT Sg1 IF (*-1 (Pers Pron Sg1 Nom) BARRIER (V Neg));# Mun ferten lohkat.
SELECT Sg1 IF (NOT *-1 PrfPrc OR Act OR V-NOT-SG1); ## Háliidan hupmat.

# This homonymy is solved by rules selecting PrfPrc.
# Note: We will need a rule selecting Sg1. # Mun muitalan Suoma birra.

# Sg2
# ---
  # Sg2 = Inf (even syllables, copula)
  # Note the homonymy with derived verbs (jearat = jearadit + ...

SELECT Sg2 IF (0 LEAT) (-1 DON); # no hits

SELECT Sg2 IF (*-1C DON); # fertetgo don vuolgit?
SELECT Sg2 IF ( *1C DON); # de, don fertet vuolgit.

# Sg3
# ---
  # Sg3 = ConNeg (even)
  # Sg3 = ConNeg = Imprt Sg2 (contracted)
  # Disambiguating Prs Sg3 is taken care of by rules removing the other 
  # readings whenever their conditions are not fulfilled.


# Du1
# ---
  # Du1 = Prt Pl3

REMOVE Pl3 IF (0 Sg3) (-1 (N Sg Nom)); # Dokumeanta c1ilge, mo...

SELECT Du1 IF (*-1  MOAI BARRIER MII-PERS OR CLB);
SELECT Du1 IF (*1  MOAI BARRIER MII-PERS OR CLB);
SELECT Du1 IF (1 Pcle) (2 MOAI); # jerre go moai # no hits
# SELECT Du1 IF (-1 MOAI); # moai jerre # no hits

### Du2, unique, no rules needed

# Du3 
  # Du3 = PrsPrc Clt = Imprt Prs Du2 Clt
  # Du3 = Ind Prs Sg3 Clt "leaba, ferteba leat"

SELECT (Du3) IF (*-1 ("son" Pron Pers Du3 Nom)); ## Soai ferteba mannat.
SELECT (Du3) IF (*1 ("son" Pron Pers Du3 Nom)); ## fertebago soai mannat?
SELECT (Du3) IF (-1 (N Sg Nom))
                (*-2 CC BARRIER NPNH LINK -1 (N Sg Nom));
## Per Berg ja Rolf Olsen leaba..
## Stuorra nieida ja unna gánda ferteba leat...


# Pl1
# ---
  # Pl1 = Inf for all stem classes
  # Pl1 = Inf = Pl3 = Prt Sg2 for odd syll
  # Pl1 = Inf = Pl3 = Sg2 = ConNeg (copula)

SELECT Pl1 IF (*-1C MII-PERS BARRIER SII OR MOAI OR CLB
                    OR V-PL1);

SELECT Inf IF (-1 V-PL1)(*-2C MII-PERS BARRIER SII OR
                              MOAI OR CLB);

#SELECT Pl1 IF (-1 CC -2 V-PL1 LINK *-1C MII-PERS BARRIER SII OR
#                                  MOAI OR CLB);

SELECT Pl1 IF (NOT -2 (V Ind Prs Pl1 Clt))(-1 MII-PERS);   ## Fertetgo mii fertet?

#SELECT Pl1 IF (NOT -3 (V Ind Prs Pl1)(-2 go)(-1 MII-PERS); ## Fertet go mii fertet?

SELECT Pl1 IF (-1 BOS)(0 (Clt))(1 MII-PERS);
SELECT Interr IF             (0 ("mii")) (*1 Sg3 BARRIER V-PL1);



### Pl2 unique, no rules needed

# Pl3
# ---
  # Prs Pl3 = Prt Sg2 = Prs Pl1 = Inf (odd syll)   muitalit
  # Prs Pl3 = Prt Sg2 = Imprt Prs Pl2 (even syll)    vulget
  # Prs Pl3 = Prt Sg2                 (contracted) fertejit


# Preverbal subject

 # Single noun
SELECT Pl3 IF (*-1C NP-HEAD-PL-NOM BARRIER NON-ADV-PCLE);   ## Nieiddat jerre

 # Coordination
SELECT Pl3 IF (*-1 NP-HEAD-SG-NOM BARRIER NON-ADV
           LINK *-1 CC BARRIER NPNH
           LINK -1 NP-HEAD-SG-NOM);                       ## Nieida ja gánda jerre

 # Pronoun
SELECT Pl3 IF (*-1 SII BARRIER MII-PERS OR MOAI OR CLB);  ## Sii jerre.


# Postverbal subject

 # Sentence-initial verb with question particle and coordinated subject
SELECT Pl3 IF (*-1 BOS BARRIER NON-ADV-PCLE)
              (*1 (N Sg Nom) BARRIER NPNH OR NON-ADV-PCLE
              LINK 1 CC LINK *1 (N Sg Nom) BARRIER NPNH);   ## Jerrego AA ja BB?

 # Sentence-initial verb with question particle and subject 'sii'
SELECT Pl3 IF (*-1 BOS BARRIER NON-ADV-PCLE)
              (*1 SII BARRIER NON-ADV-PCLE);                ## Jerrego sii 

 # Sentence-initial verb with question particle and ordinary plural subject
SELECT Pl3 IF (*-1 BOS BARRIER NON-ADV-PCLE)(*1C NP-HEAD-PL-NOM
              BARRIER NON-ADV-PCLE OR NPNH);                ## Jerrego nieiddat

#SELECT Pl3 IF (-1 Adv) (1 N-NOM)(2 CC)(3 N-NOM);
#SELECT Pl3 IF (1 Pcle) (2 N-NOM) (3 CC) (4 N-NOM);
#SELECT Pl3 IF (1 Pcle) (2 SII);               ## Jerre go sii
#SELECT Pl3 IF (1 Pcle) (2C N-PL-NOM); # Nieiddat jerre
					# Nu jerre nieida ja gánda
                                        # Jerre go nieida ja gánda?
                                        # Jerrego nieida ja gánda?

SELECT Pl3 IF (-3 NP-HEAD-PL-NOM)(-2 COMMA)(-1 (Pron Interr Pl Nom)) ;
             #olbmot, geat fállet (too specific?)
SELECT Pl3 IF (-2 NP-HEAD-PL-NOM)(-1 (Pron Interr Pl Nom)) ;
             #olbmot geat fállet (too specific?)

# Existential sentences

SELECT Pl3 IF (0 LEAT) (-1 (Pl Loc)); # Mis leat
SELECT Pl3 IF (0 LEAT) (-1 (Du Loc)); # Munnos leat


## Dá livc1c1e dutnje sabehat.

# Number phrases as subjects
SELECT Pl3 IF (-2 Num) (-1 N-GEN) ; # Golbma nieidda leat boahtán.
SELECT Pl3 IF (-1 Adv) (1 Num); # Nu jerre golbma nieidda

SELECT ("leat" Pl3) IF (-1 (Loc))(1 NP-HEAD-PL-NOM); ## Mis leat beatnagat.
SELECT ("leat" Pl3) IF (-1 (Loc))(1 NUMERALS); ## Mis leat golbma beatnaga.

SELECT Pl3 IF (-1 Loc) (1 Attr OR Pron)(2 (N Pl Nom));## Mus leat od1d1a sabehat


# Selecting some present
# ----------------------

SELECT (Prs) IF (0 LEAT) (NOT *-1 V-IND-FIN); # one strange hit, revise!
# The same should be done ... hmm, for what?

SELECT (Prs) IF (-1 (Neg Prs)) ;

# Select some finite
REMOVE (Inf) IF (-2 CLB) (-1 CS); # dus1s1e, juos leat doarvái...
REMOVE (Inf) IF (-1 (Inf)) ; # 1 hit


# Indicative Past
# ---------------

### Past Sg1 is unique

# Past Sg2
# --------
  # Prt Sg2 = Prs Pl3 = Imprt Prs Pl2 (even syll)    vulget
  # Prt Sg2 = Prs Pl3 = Prs Pl1 = Inf (odd syll)   muitalit
  # Prt Sg2 = Prs Pl3                 (contracted) fertejit

SELECT Sg2 IF (*-1 (Pron Pers Sg2 Nom))(0 Prt); ## Don vulget ikte.
SELECT Sg2 IF (-1 BOS)(0 (Prt Clt))(1 (Pron Pers Sg2 Nom)); ## Vulgetgo don?

SELECT Sg2 IF (*-1 IKTE)(0 Prt); ## Mun died1an, ahte vulget ikte.
SELECT Sg2 IF (-1 BOS)(0 (Prt Clt))(*1 IKTE); ## Vulgetgo ikte?


# Past Sg3
# --------
  # Prt Sg3 = Imprt Prs Sg3 (leai)
 
# Past Du1
# --------
# Past Du2
# --------
# Past Du3
# --------
# Past Pl1
# --------
# Past Pl2
# --------
# Past Pl3
# --------

# leai disambiguation
SELECT Prt IF (0 LEAI)(-1 NP-HEAD-SG-NOM); # Introduced 0 LEAI

# Pl3
# ---
# Prt Pl3 = Prs Du1

REMOVE (Prs Du1) IF (0 (Prt Sg3)) (-1 (N Pl Nom)); # Dokumeantat c1ilge, mo...


# Potential Present
# -----------------
# Potential Past
# --------------
# Conditional
# -----------

# Sg3
  # copula sg3 = pl3 livc1c1e (in the eastern dialect)
  # These rules may be generalised. Let's first see whether they work.

SELECT (Sg3) IF (-1 ("Son" Pron Pers Sg Nom))(0 ("leat"));
SELECT (Sg3) IF (NOT *-2 CC)(-1 (N Sg Nom) OR ("son" Pron Pers Sg Nom))
             (0 ("leat")); # strange rule, revise!
SELECT (Sg3) IF (-1 Loc)(1 (N Sg Nom)); # Mus livc1c1e viessu.

# Selecting Sg3 is not restricted to leat. This is not a rule for Conditional.

# Pl3
  # copula sg3 = pl3

SELECT (Pl3) IF (-1 (N Pl Nom) OR ("son" Pron Pers Pl Nom))(0 ("leat"));
SELECT (Pl3) IF (-1 Loc)(1 (N Pl Nom)); # Mus livc1c1e guolit.

# Imperative
# ----------

SELECT (Imprt ConNeg) IF (-1 (Neg Imprt)) ; ## Ale suhta munnje.

REMOVE Imprt IF (NOT -1 COMMA OR BOS or Pcle)(NOT 0 (ConNeg)) ;
# Imprt must be either a negative verb form, or in the middle of a sentencne.

# Negative imperative
  # Neg Imprt Pl2 = allet V Inf = Prs Pl1 = Prs Pl3

SELECT (Neg Imprt Sg2) IF (*1 ConNeg); ## Allet ge gátte ahte ...

REMOVE (V Ind Prs Sg3) IF (-2 BOS)(-1 Pcle)(0 (V Imprt Prs Sg2));
                           ## Na attes munnje daid.
                           # Note that this is dangerous, and kept specific in
                           # order to play safe. May need to be generalised.

# Infinite forms
# ==============
CONSTRAINTS ####
# ==============

# Infinitive
# ----------

SELECT (Inf) IF (*-1 V-IND-FIN BARRIER ("mii" Pers Pron Nom Pl1) OR SII
                     OR CS OR CLB OR BOS);
# reintroduce (NOT 0 LEAT)? check this!

REMOVE (Prs Pl1) IF (-1 BOS)(1C V-SG3);
                                                 ## Vuolgit lea suohtas
REMOVE NP-HEAD-PL-NOM IF (0 (Inf) OR NP-HEAD-SG-NOM)(1C V-SG3);


# ConNeg forms
# ------------

#SELECT (ConNeg) IF (0 LEAT) (-1 (Neg));
#SELECT (ConNeg) IF (0 LEAT) (-2 (Neg)) (-1 Pcle);
#REMOVE (ConNeg) IF (0 LEAT) (NOT *-1 (Neg));

#SELECT (ConNeg) IF (-1 (Neg));
#SELECT (ConNeg) IF (-2 (Neg)) (NOT -1 V);
SELECT (ConNeg) IF (*-1 Neg BARRIER VFIN);
REMOVE (ConNeg) IF (NOT *-1 (Neg));

# Need more advanced rule to select ConNeg when more
# material between neg and conneg
# SELECT (ConNeg IF (0 LEAT) (*-1 (Neg));

REMOVE (VGen) IF (NOT *-1 V-IND-FIN)(Not *1 V-IND-FIN); # too sloppy!

REMOVE (ConNeg) IF (NOT *-1 (Neg) BARRIER CLB OR V-IND-FIN); 

REMOVE Imprt IF (*-1 (Neg Ind) BARRIER CLB OR V-IND-FIN)(0 (ConNeg));
REMOVE (Prs) IF (*-1 (Neg Imprt) BARRIER CLB OR V-IND-FIN)(0 (ConNeg));

# Act
# ---
# Act = Prs Sg1 = PrfPrc (odd-syll verbs, contracted verbs)
# => make rules for Act.


# Perfect Participle
# -------------------

SELECT PrfPrc IF (-1 V-IND-FIN ) ;

SELECT PrfPrc IF (-1 (Neg)) ;
SELECT PrfPrc IF (-1 Pcle)(-2 (Neg)) ;

SELECT PrfPrc IF (0 LEAN) (-1 (Neg));

SELECT PrfPrc IF (*-1 VFIN-NOT-IMP); # Too general!!
 
SELECT PrfPrc IF (-1 NP-BORDER)(0 Pass)(1 CNOUN); ## namuhuvvon guovlluin ja



# Present Participle
# ------------------

# PrsPrc = Imprt Prs Du2 (even-syll)




# ImprtII
# -------

# VGen
# -------

# Gerund,  Verb abessive and Supine do have uniqe forms and need no rules





# Disambiguating adjectives #
# ========================= #
         CONSTRAINTS        #
# ========================= #

# Attribute disambiguation
# ------------------------



SELECT Attr IF (1C N) ;              ## Garra muorra. Rolf Berg.
  # This rule is too general.


# Rule for predicative attributes
SELECT Attr IF (-3 BOS)(-2 Nom)(-1 ("leat"))(0 Prop)(1  Prop)(2 NP-BORDER);


SELECT Attr IF (1 CC)(2 Attr)(3 N);

SELECT A IF (*-1 ("leat" V) BARRIER NON-ADV)(1 N OR EOS);
                                     ## Ikte lei hui buolas1.


REMOVE Attr IF (0 A)(NOT 1 A OR CC OR COMMA); ## Vuolgit lea suohtas.

# Comparatives
# ------------

REMOVE VGen IF (-1 Gen OR Dem)(0 Attr OR Comp OR Superl)(1 N)(2 NP-BORDER);
REMOVE N    IF (-1 Gen OR Dem)(0 Attr OR Comp OR Superl)(1 N)(2 NP-BORDER);
REMOVE Adv  IF (-1 Gen OR Dem)(0 Attr OR Comp OR Superl)(1 N)(2 NP-BORDER);
REMOVE VFIN IF (-1 Gen OR Dem)(0 Attr OR Comp OR Superl)(1 N)(2 NP-BORDER);
## Dat lea died1áhus sámepolitihka bajit linjáid birra.

   # This is a highly specified context. The idea is that the Spec ___ N
   # position should have and Attr or some other adjective. Look out for probl.

REMOVE Gen IF (0 Comp)(NOT 1 (N Gen));
REMOVE Acc IF (0 Comp)(NOT 1 (N Acc));
REMOVE Nom IF (0 Comp)(NOT 1 (N Nom));
## Dat lea died1áhus sámepolitihka bajit linjáid birra.

   # This block of rules is there to ensure case agreement for attributive
   # comparatives.




# Disambiguating adverbs
# ======================

SELECT Adv IF (-1C V-IND-FIN) (0 A-ATTR)(NOT 1 N); # Adv if postverbally
REMOVE Adv IF (-1 (N Gen) OR (Pron Gen))(0 Po OR Adp); # Po if after Gen

SELECT Adv IF (-2 V)(NOT -2 ("leat"))(-1 Adv)(1 EOS); # Too specific!!
                                                     ## Son c1állá hui c1ábbát.

SELECT Adv IF (-1 BOS OR CLB)(0C Adv OR Po);

SELECT Adv IF (0 (Pron Indef))(1 CS);              ## Dat lea nu ahte boad1án
SELECT Adv IF (0 (Pron Indef))(1 COMMA)(2 CS);     ## Dat lea nu, ahte boad1án

REMOVE Po IF (-1 NON-NP)(0 Adv)(1 NON-NP OR CLB);  ## Mun in leat mielde.




# Rules related to specific adverbs
# ---------------------------------

SELECT Adv IF (0 ("ikte"))(*1 (V Prt)); ## Ikte lei hui buolas1
SELECT Adv IF (*-1 (V Prt))(0 ("ikte")); ## Ikte lei hui buolas1

SELECT Adv IF (0 ("de"))(NOT 1 Prop); ## De lea vissa ahte De Silva boahtá.

SELECT Adv IF (0 ("dus1s1e"))(-1 VFIN); ## Lea dus1s1e okta Ipmil. # Cycle 1a?

SELECT Adv IF (0 ("goas"))(@1 ("<?>")); ## Goas heajat leat?
# This is not an optimal rule for getting rid of the former Portuguese colony.

SELECT Adv IF (NOT -1 Dem or (A Attr))(0 ("duo")); ## Áddjá go duo lea boahtime?

SELECT Adv IF (-1 VFIN)(0 ("gusto")); ## Diet lea gusto ávkkálas1.

  # Todo: Make a set of these verb-like adverbs, and make a rule for them.
  # Eventually more sets, if they have different syctactic properties...

SELECT Adv IF (-1 BOS)(0 ("manne"))(1 VFIN); ## Manne ii leat áviisa boahtán?
SELECT Adv IF (-1 BOS)(0 ("manne"))(1 N OR Pron)(2 VFIN); ## Manne don leat dál?

  # Need a rule for "Manne + NP + VFIN".






# Disambiguating pronouns #
# ======================= #
       CONSTRAINTS        # 
# ======================= #


# Personal pronouns
# -----------------

# Mon
# ---
  # = N Prop Ess Mo

# Don
# ---
  # Pron Dem Sg Acc / Gen

SELECT (Pron Pers Sg2 Nom) IF ( *1 V-SG2); ## Don boad1át fargga.
SELECT (Pron Pers Sg2 Nom) IF (*-1 V-SG2); ## Don boad1át fargga.

# Son
# ---
  # son Pcle

SELECT (Pron Pers Sg3 Nom) IF ( *1 V-SG3); ## Son boahtá fargga.
SELECT (Pron Pers Sg3 Nom) IF (*-1 V-SG3); ## Boahtágo son fargga?
  
# Moai
# ----
  # N Prop Ill Moa

SELECT (Pron Pers Du1 Nom) IF ( *1 V-DU1); ## Moai c1ilge dan ás1s1i ...
SELECT (Pron Pers Du1 Nom) IF (*-1 V-DU1); ## C1ilgego moai ...

# Mii
# ---


SELECT Interr IF (0 ("mii"))(-1 COMMA)(1 Sg3);

SELECT Interr IF (0 ("mii"))(*1 Sg3 BARRIER V-PL1);


SELECT Pers IF (0 ("mii"))(*1 V-PL1 BARRIER NON-ADV) ;
SELECT Pers IF (-3 BOS)(-2 V-PL1)(-1 go)(0 ("mii")); 
SELECT Pers IF (-2 BOS)(-1 (V Ind Prs Pl1 Clt))(0 ("mii"));


SELECT Pers IF (-1 (V Ind Prs Pl1 Clt))(0 ("mii"));

SELECT Pers IF (0 ("mii"))(*1 V-PL1 BARRIER NON-ADV) ;

SELECT Pers IF (-1 (V Neg Pl1))(0 ("mii")); ## Eat mii sáhte vuolgit.

#SELECT Pron IF (0 Pron Pers Loc)(1 V-SG3)(*2 N BARRIER V-IND-FIN);
# Strange rule, causes error.


# Mis and sis
# ---
  # mun Pron Pers Pl1 Loc = mis Adv, corr. for son Pron Pers Pl3 Nom = sis Adv
  # This one is hard to resolve, as they have the same distribution.

# Other homonymies linked to personal pronouns, with non-obvious answers.
  # Munin = Pron Pers Sg1 Ess = Ess of N Prop Muni (!)
  # dudnon = Pron Per Du2 Ess = dudnu N Sg ... PxSg1 (covered by Px rule)
  # Sunin = Pron Pers Sg3 Ess = Ess of N Prop Sun  
  # son Pron Pers Sg3 Ill = suotnjat V Ind Prs Du1 = V Ind Prt Pl3


# Recipr and refl
# ---------------

#SELECT Recipr IF (-1 Recipr); # ... guhtet
#SELECT Recipr IF  (1 Recipr); # ... ...    guoimmiset # XXX bug!

CONSTRAINTS

REMOVE Recipr ;

# Demonstrative pronouns
# ----------------------

SELECT DEM-SG IF (1 V-SG3); # no hits
# Need a way of stating ".. and I am a the beginning of the sentence"

# Getting rid of problematic names.
# Problematic here are the names Dan, Dien, and the essive of the noun duo.

REMOVE (Prop) IF (-1 BOS)(0 Dem)(1 N)(NOT 1 Prop); ## Dan nieidda mun dovddan.

REMOVE (Dem Nom) IF (NOT *1 (N Nom) BARRIER NPNH);
REMOVE (Dem Acc) IF (*1 (N Gen) OR (N Acc) OR (N Ill) OR (N Loc)
                    BARRIER NPNH);




# Disambiguating adpositions #
# ========================== #
        CONSTRAINTS          #
# ========================== #


SELECT Po IF (*-1 V)(-1 Gen)(0 ("alde")); # Láibi lea beavddi alde.
SELECT Po IF (-1 Gen); ## Láibi lea beavddi alde.

# using it for all Po
REMOVE N IF (-1 Gen)(0 Po);
REMOVE V IF (-1 Gen)(0 Po);
REMOVE Adv IF (-1 Gen)(0 Po);
REMOVE N IF (-1 Gen)(0 Adp);
REMOVE V IF (-1 Gen)(0 Adp);
REMOVE Adv IF (-1 Gen)(0 Adp);


# Disambiguating subjunctions #
# =========================== #
        CONSTRAINTS           #
# =========================== #

SELECT CS IF (-1 CLB); # this one too general, there must be separate
                         # rules for different groups of CS.
# go
# --

SELECT Pcle IF (-2 BOS)(0 go);                    ## Boad1át go?
SELECT Pcle IF (-3 BOS)(-2 CS)(0 go);             ## Muhto boad1át go?



CONSTRAINTS # New cycle to get rid of Pcle "go"

SELECT CS IF (0 go); # All other go's are CS.
#REMOVE CS IF (0 )(NOT -1 V); ## Nu guhkás go mun died1án, 


# Numerals
# ========

REMOVE ("guovttes") IF (1 (Sg Gen)); ## Viesus leat guokte olbmo.

# other words
# ===========

SELECT CS IF (0 go)(-1 COMMA) ;

SELECT Pron IF (0 ("don" Nom Sg))(*1 V-SG2);

REMOVE Prop IF (0 ("Lassi"))(1 ("dát" Pron Dem Sg Ill)); ## Lassin dása ..
  # all too specific!




# =====================
# Global disambiguation
# =====================


CONSTRAINTS

REMOVE Sg IF (0 DEM-PL) (NOT *1 V-SG3);       ## Dat lea buorre.
REMOVE Pl IF (0 DEM-SG) (NOT *1 V-PL3);       ## Dat lea od1d1a niibbit.


# At least one finite verb in the sentence
# The rule scans to the left until it finds a finite verb
#SELECT VFIN IF (NOT *-1 VFIN)(NOT *1 VFIN);

# Stop at guhto to the left and comma to the right.
#SELECT VFIN IF (NOT *-1 VFIN BARRIER COMP)(NOT *1 VFIN BARRIER CLB);
# cut these two because of titles. They would be ok if we could
# recognise titles.

# Afterthought, get rid of Acc in specifier position.
# Move to logical place, but after the primary Acc cycle.
Remove Acc IF (0 Pron)(1C Acc); # Mun oainnán du vielja.

END
