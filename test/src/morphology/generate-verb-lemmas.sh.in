#!/bin/bash
# @configure_input@

# Automake interprets the exit status as follows:
# - an exit status of 0 will denote a success
# - an exit status of 77 a skipped test
# - an exit status of 99 a hard error
# - any other exit status will denote a failure.

# To run this test script only, do:
#
# make check TESTS=generate-verb-lemmas.sh

# This test script will test that all verb lemmas do generate as themselves.
# Extend as needed, and copy to new files to adapt to other parts of speech.
# The changes usually needed are:
#
# 1. change the reference to the source file (line 23)
# 2. extend the extract lemmas egrep expression (lines 53 ff)
# 3. adapt the tag addition and lemma generation instructions (lines 79 ff)

###### Variables: #######
### in ###
source_file=${srcdir}/../../../src/morphology/stems/verbs.lexc
generator_file=./../../../src/generator-gt-norm

### out ###
lemmas=./filtered-verbs
generated_lemmas=./generated-verbs
result_file=${srcdir}/../../data/missing_verb_lemmas


# FAIL if source file does not exist:
if [ ! -f $source_file ]; then
    echo
    echo "*** Warning: Source file $source_file not found."
    echo
    exit 77
fi

# Use autotools mechanisms to only run the configured fst types in the tests:
fsttype=
@CAN_HFST_TRUE@fsttype="$fsttype hfst"
@CAN_XFST_TRUE@fsttype="$fsttype xfst"

# Exit if both hfst and xerox have been shut off:
if test -z "$fsttype" ; then
    echo "All transducer types have been shut off at configure time."
    echo "Nothing to test. Skipping."
    exit 77
fi

# Get external Mac editor for viewing failed results from configure:
EXTEDITOR=@SEE@

##### Extract lemmas #####
### don't use extract-lemmas.sh ###
# Hent ut lemmaer, bortsett fra utkommmenterte (^\!),  dem med hardkoding
# for spesielle former (STRAYFORMS|ENDLEX), eller negasjonsverbet (+Neg, som
# ikke har infinitivform), Err/Lex (som blir filtrert bort fra normgenerator).
# Lemmaene lagres som $lemmas.

grep ";" $source_file | \
  grep -v "^\!" | egrep -v '(STRAYFORMS|ENDLEX|\+Err\/Lex|\+Neg)' | \
  tr ":+" " " | cut -d " " -f1 | tr -d "%" | sort -u > $lemmas

###### Start testing: #######
transducer_found=0
Fail=0

# The script tests both Xerox and Hfst transducers if available:
for f in $fsttype; do
	if [ $f == "xfst" ]; then
		lookuptool="@LOOKUP@ -q -flags mbTT"
		suffix="xfst"
	elif [ $f == "hfst" ]; then
		lookuptool="@HFST_LOOKUP@ -q"
		suffix="hfstol"
	else
	    Fail=1
		printf "ERROR: Unknown fst type! "
	    echo "$f - FAIL"
	    continue
	fi
	if [ -f "$generator_file.$suffix" ]; then
		let "transducer_found += 1"

###### Test generation: #######
		# generate verbs, extract the resulting generated lemma,
		# store it:

# Generer infitivsformen av verblemmaene, fjern dem som ikke gir analyse (de har V+ i output),
# lagres som fil som har blitt deklarert oppe.
		sed 's/$/+V+Inf/' $lemmas | $lookuptool $generator_file.$suffix \
            | cut -f2 | grep -v "V+" | grep -v "^$" | sort -u > $generated_lemmas.$f.txt 

###### Collect results: #######
		# Sort and compare original input with resulting output - the diff is
		# stored and opened in SEE:
		
# Sammenlikne lista med verblemmaer med den genererte lista med infinitivsformer.
# Formene som er i verblemmalista, men ikke i den genererte lista, kopieres til
# missingverbLemmas.txt. Formene generes med  +V+Inf for lettere debugging.

		comm -23 $lemmas $generated_lemmas.$f.txt \
		     | grep -v '^$' | sed 's/$/+V+Inf/' \
		     | $lookuptool $generator_file.$suffix > $result_file.$f.txt

		# Open the diff file in SubEthaEdit (if there is a diff):
		if [ -s $result_file.$f.txt ]; then
			# Only open the failed lemmas in see if @SEE@ is defined:
			if [ "$EXTEDITOR" ]; then
				$EXTEDITOR $result_file.$f.txt
			fi
		    Fail=1
		    echo "$f - FAIL"
		    continue
		fi
	    echo "$f - PASS"
	fi
done

# When done, remove the generated data file:
rm -f $lemmas $generated_lemmas.$f.txt

# At least one of the Xerox or HFST tests failed:
if [ "$Fail" = "1" ]; then
	exit 1
fi

if [ $transducer_found -eq 0 ]; then
    echo ERROR: No transducer found
    exit 77
fi
