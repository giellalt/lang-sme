#!/bin/bash
# @configure_input@

# Automake interprets the exit status as follows:
# - an exit status of 0 will denote a success
# - an exit status of 77 a skipped test
# - an exit status of 99 a hard error
# - any other exit status will denote a failure.

# To run this test script only, do:
#
# make check TESTS=generate-propernoun-lemmas.sh

# This test script will test that all propernoun lemmas do generate as themselves.
# Extend as needed, and copy to new files to adapt to other parts of speech.
# The changes usually needed are:
#
# 1. change the reference to the source file (line 23)
# 2. extend the extract lemmas egrep expression (lines 53 ff)
# 3. adapt the tag addition and lemma generation instructions (lines 79 ff)

###### Variables: #######
POS=propernouns
### in ###
source_file=./../../../src/morphology/generated_files/smi-sme-${POS}.lexc
generator_file=./../../../src/generator-gt-norm
analyser_file=./../../../src/analyser-gt-norm

### out ###
lemmas=./filtered-${POS}
lemmas_attr=./filtered-attr-${POS}
generated_lemmas=./generated-${POS}
generated_attr_lemmas=./generated-attr-${POS}
result_file=missing_${POS}_lemmas
gen_result_file=generated_missing_${POS}_lemmas
ana_result_file=analysed_missing_${POS}_lemmas

# SKIP if source file does not exist:
if [ ! -f $source_file ]; then
    echo
    echo "*** Warning: Source file $source_file not found."
    echo
    exit 77
fi

# Use autotools mechanisms to only run the configured fst types in the tests:
fsttype=
@CAN_HFST_TRUE@fsttype="$fsttype hfst"
@CAN_XFST_TRUE@fsttype="$fsttype xfst"

# Exit if both hfst and xerox have been shut off:
if test -z "$fsttype" ; then
    echo "All transducer types have been shut off at configure time."
    echo "Nothing to test. Skipping."
    exit 77
fi

# Get external Mac editor for viewing failed results from configure:
EXTEDITOR=@SEE@

##### Extract lemmas - add additional egrep pattern as parameters: #####
##### --include "(pattern1|pattern2|...)"                          #####
##### --exclude "(pattern1|pattern2|...)"                          #####

# Hent ut lemmaer fra den genererte fila smi-sme-propernouns.lexc, bortsett fra utkommmenterte (^\!), 
# dem som krever +Attr tag og hardkoding for spesielle former (Attr|FirstTag|-atr|),
# Err/Lex (som blir filtrert bort fra normgenerator).
# Lemmaene lagres som $lemmas.
@GTCORE@/scripts/extract-lemmas.sh \
    --exclude "(Attr|-atr|FirstTag)" \
    $source_file > $lemmas

# Hent ut lemmaer som krever +Attr for å genereres. Lagres som $lemmas_attr
@GTCORE@/scripts/extract-lemmas.sh \
    --include "(Attr|-atr|FirstTag)" \
    $source_file > $lemmas_attr

###### Start testing: #######
transducer_found=0
Fail=0

# The script tests both Xerox and Hfst transducers if available:
for f in $fsttype; do
	if [ $f == "xfst" ]; then
		lookup_tool="@LOOKUP@ -q -flags mbTT"
		suffix="xfst"
	elif [ $f == "hfst" ]; then
		lookup_tool="@HFST_OPTIMIZED_LOOKUP@ -q"
		suffix="hfstol"
	else
	    Fail=1
		printf "ERROR: Unknown fst type! "
	    echo "$f - FAIL"
	    continue
	fi
	if [ -f "$generator_file.$suffix" ]; then
		let "transducer_found += 1"

###### Test generation: #######
		# generate verbs, extract the resulting generated lemma,
		# store it:

# Generer grunnformen av props med +N+Prop+Sg+Nom, fjern dem som ikke lar seg
# generere (de har N+ i output). Lagres som $generated_lemmas.$f.txt
		sed 's/$/+N+Prop+Sg+Nom/'   $lemmas \
			| $lookup_tool $generator_file.$suffix \
			| fgrep -v "+?" | grep -v "^$" | cut -f2 \
            > $generated_lemmas.$f.txt

# Generer grunnformen med +N+Prop+Pl+Nom av props som ikke lar seg generere med
# +N+Prop+Sg+Nom. Lagres i $generated_lemmas.$f.txt
		sed 's/$/+N+Prop+Sg+Nom/'   $lemmas \
			| $lookup_tool $generator_file.$suffix \
			| fgrep "+?" | cut -d "+" -f1 \
			| sed 's/$/+N+Prop+Pl+Nom/' \
			| $lookup_tool $generator_file.$suffix \
			| fgrep -v "+?" | grep -v "^$" | cut -f2 \
			>> $generated_lemmas.$f.txt

# Generer attrprops med +N+Prop+Attr
# Lagre dem som ikke lar seg generere (de har N+ i output) i $result_file.$f.txt
		sed 's/$/+N+Prop+Attr/' $lemmas_attr \
            | $lookup_tool $generator_file.$suffix \
		    | cut -f2 | fgrep "+N+" \
		    > $result_file.$f.txt

# Generer attrprops med +N+Prop+Attr
# Lagre formene i $generated_lemmas_attr.$f.tmp
		sed 's/$/+N+Prop+Attr/' $lemmas_attr \
            | $lookup_tool $generator_file.$suffix \
		    | cut -f2 |  grep -v "N+" | grep -v "^$" \
		    | sort -u > $generated_lemmas_attr.$f.txt

###### Collect results: #######
# Sorter, unifiser dataene som ikke har vært sortert og unifisert
		sort -u -o $generated_lemmas.$f.txt $generated_lemmas.$f.txt

# Sammenlikne: Former som er i lemmalista men ikke i lista med genererte former,
# lagre i missingProperLemmas.txt. Formene generes med  +N+Prop+Sg+Nom for
# enklere debugging.
		comm -23 $lemmas $generated_lemmas.$f.txt | sed 's/$/+N+Prop+Sg+Nom/' \
		     | $lookup_tool $generator_file.$suffix >> $result_file.$f.txt
		comm -23 $lemmas $generated_lemmas.$f.txt \
		     | $lookup_tool $analyserr_file.$suffix > $ana_result_file.$f.txt

# Sammenlikne: Former som er i lemmalista med ikke i lista med genererte former,
# lagre i missingProperLemmas.txt. Formene generes med  +N+Prop+Attr for enklere
# debugging.
		comm -23 $lemmas_attr $generated_lemmas_attr.$f.txt | sed 's/$/+N+Prop+Attr/' \
		     | $lookup_tool $generator_file.$suffix >> $result_file.$f.txt
		comm -23 $lemmas_attr $generated_lemmas_attr.$f.txt \
		     | $lookup_tool $analyserr_file.$suffix >> $ana_result_file.$f.txt

# Open the diff file in SubEthaEdit (if there is a diff):
		if [ -s $result_file.$f.txt ]; then
			# Only open the failed lemmas in see if @SEE@ is defined:
			if [ "$EXTEDITOR" ]; then
				$EXTEDITOR $result_file.$f.txt
				$EXTEDITOR $ana_result_file.$f.txt
            # If you don't have see, print a message instead:
            else
                echo "There where problem lemmas. Details in:"
                echo "* $result_file.$f.txt    "
                echo "* $ana_result_file.$f.txt"
			fi
		    Fail=1
		    echo "$f - FAIL"
		    continue
		fi
	    echo "$f - PASS"
	fi
done

# When done, remove the generated data file:
rm -f $lemmas $lemmas $generated_lemmas.$f.tmp $generated_lemmas_attr.$f.tmp

# At least one of the Xerox or HFST tests failed:
if [ "$Fail" = "1" ]; then
	exit 1
fi

if [ $transducer_found -eq 0 ]; then
    echo ERROR: No transducer found
    exit 77
fi
