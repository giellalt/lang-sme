#!/bin/bash
# @configure_input@

# Automake interprets the exit status as follows:
# - an exit status of 0 will denote a success
# - an exit status of 77 a skipped test
# - an exit status of 99 a hard error
# - any other exit status will denote a failure.

# To run this test script only, do:
#
# make check TESTS=generate-adj-lemmas.sh

# This test script will test that all adj lemmas do generate as themselves.
# Adj lemmas that do not generate properly are output in
# missing_adjective_lemma.*.txt
# Extend as needed, and copy to new files to adapt to other parts of speech.
# The changes usually needed are:
#
# 1. change the reference to the source file (line 23)
# 2. extend the extract lemmas egrep expression (lines 53 ff)
# 3. adapt the tag addition and lemma generation instructions (lines 79 ff)

###### Variables: #######
POS=adjectives
### in ###
source_file=${srcdir}/../../../src/fst/stems/${POS}.lexc
generator_file=./../../../src/generator-gt-norm
analyser_file=./../../../src/analyser-gt-norm

### out ###
# Temporary files:
lemmas=./filtered-${POS}.txt
# Result files, will get filename suffix programmatically further down:
generated_lemmas=./generated-${POS}
generated_sgnom=./generated-${POS}-sgnom
generated_plnom=./generated-${POS}-plnom
generated_attr=./generated-${POS}-attr
result_file=missing_${POS}_lemmas
gen_result_file=generated_missing_${POS}_lemmas
ana_result_file=analysed_missing_${POS}_lemmas

# SKIP if source file does not exist (works with both single and
# multiple files):
if [ ! `ls -1 $source_file 2>/dev/null | wc -l ` -gt 0 ]; then
    echo
    echo "*** Warning: Source file(s) $source_file not found."
    echo
    exit 77
fi

# Use autotools mechanisms to only run the configured fst types in the tests:
fsttype=
@CAN_HFST_TRUE@fsttype="$fsttype hfst"
@CAN_XFST_TRUE@fsttype="$fsttype xfst"

# Exit if both hfst and xerox have been shut off:
if test -z "$fsttype" ; then
    echo "All transducer types have been shut off at configure time."
    echo "Nothing to test. Skipping."
    exit 77
fi

# Get external Mac editor for viewing failed results from configure:
EXTEDITOR=@SEE@

##### Extract lemmas - add additional egrep pattern as parameters: #####
##### --include "(pattern1|pattern2|...)"                          #####
##### --exclude "(pattern1|pattern2|...)"                          #####
# Exclude lemmas only present in compounds and some others #
@GTCORE@/scripts/extract-lemmas.sh \
    --exclude "FINJU| Rreal | R |\+Use\/MT|Lex|Sub)" \
    $source_file > $lemmas

###### Start testing: #######
transducer_found=0
Fail=0

# The script tests both Xerox and Hfst transducers if available:
for f in $fsttype; do
    if [ $f == "xfst" ]; then
        lookup_tool="@LOOKUP@ -flags mbTT"
        suffix="xfst"
        # Does lookup support -q / quiet mode?
        lookup_quiet=$($lookup_tool -q 2>&1 | grep USAGES)
        if ! [[ $lookup_quiet == *"USAGES"* ]] ; then
            # it does support quiet mode, add the -q flag:
            lookup_tool="@LOOKUP@ -q -flags mbTT"
        fi
    elif [ $f == "hfst" ]; then
        lookup_tool="@HFST_OPTIMIZED_LOOKUP@ -q"
        suffix="hfstol"
    else
        Fail=1
        printf "ERROR: Unknown fst type! "
        echo "$f - FAIL"
        continue
    fi
    if [ -f "$generator_file.$suffix" ]; then
        let "transducer_found += 1"

###### Test generation: #######
		# generate adjectives, extract the resulting generated lemma,
		# store it:

# Generer former:

# Fyrst med +A+Sg+Nom (grunnformen for dei fleste).
		sed 's/$/+A+Sg+Nom/' $lemmas | $lookup_tool $generator_file.$suffix | \
            cut -f2 > $generated_sgnom.$f.txt

# Ta dei som ikkje vart generert og generer med +A+Pl+Nom
        grep "\+A" $generated_sgnom.$f.txt | sed "s/+A+Sg+Nom/+A+Pl+Nom/" | \
            $lookup_tool $generator_file.$suffix | \
            cut -f2 > $generated_plnom.$f.txt 

# Ta dei som framleis ikkje vart generert og generer med +A+Attr
        grep "\+A" $generated_plnom.$f.txt | sed "s/+A+Pl+Nom/+A+Attr/" | \
            $lookup_tool $generator_file.$suffix | \
            cut -f2 > $generated_attr.$f.txt


###### Collect results: #######
		# Sort and compare original input with resulting output - the diff is
		# stored and opened in SEE:

# Samle dei genererte formene i Ã©i fil
grep -v "\+A" $generated_sgnom.$f.txt > $generated_lemmas.$f.txt
grep -v "\+A" $generated_plnom.$f.txt >> $generated_lemmas.$f.txt
grep -v "\+A" $generated_attr.$f.txt >> $generated_lemmas.$f.txt

# Sorter alle formene og fjern duplikatar
LC_ALL=no_NO.UTF-8 sort -u -o $generated_lemmas.$f.txt $generated_lemmas.$f.txt 
LC_ALL=no_NO.UTF-8 sort -u -o $lemmas $lemmas
		
# Sammenlikne lista med lemmaer med den genererte lista med lemmaformer.
# Formene som er i lemmalista, men ikke i den genererte lista, kopieres til
# missing_adjectives_lemmas.txt. Formene generes med +A+Sg+Nom for
# lettere debugging.
        LC_ALL=no_NO.UTF-8 comm -23 $lemmas $generated_lemmas.$f.txt > $result_file.$f.txt
		grep -v '^$' $result_file.$f.txt | sed 's/$/+A+Sg+Nom/' \
		     | $lookup_tool $generator_file.$suffix > $gen_result_file.$f.txt
		grep -v '^$' $result_file.$f.txt \
		     | $lookup_tool $analyser_file.$suffix > $ana_result_file.$f.txt

		# If there is a $result_file, open the $result_file in SubEthaEdit:
		if [ -s $result_file.$f.txt ]; then
			# Only open the failed lemmas in see if @SEE@ is defined:
			if [ "$EXTEDITOR" ]; then
				$EXTEDITOR $gen_result_file.$f.txt
            # If you don't have see, print a message instead:
            else
                echo "There were problem lemmas. Details in:"
                echo "* $result_file.$f.txt    "
                echo "* $gen_result_file.$f.txt"
                echo "* $ana_result_file.$f.txt"
			fi
		    Fail=1
		    echo "$f - FAIL"
		    continue
		fi
	    echo "$f - PASS"
	fi
done

# At least one of the Xerox or HFST tests failed:
if [ "$Fail" = "1" ]; then
    exit 1
fi

if [ $transducer_found -eq 0 ]; then
    echo ERROR: No transducer found
    exit 77
fi

# When done, remove the generated data and result files:
rm -f $lemmas \
      $generated_lemmas.*.txt \
      $generated_sgnom.*.txt \
      $generated_plnom.*.txt \
      $generated_attr.*.txt \
      $result_file.*.txt \
      $gen_result_file.*.txt \
      $ana_result_file.*.txt
